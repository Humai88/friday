{"version":3,"sources":["components/Login/Login.module.css","components/Register/Register.module.css","components/PasswordRecovery/Password.module.css","components/Cards/Cards.module.css","components/Profile/Profile.module.css","UI-kit/Button/Button.module.css","components/PasswordUpdate/ParrwordUpdate.module.css","components/ErrorPage/Error404.module.css","components/Paginator/Paginator.module.css","UI-kit/Range/Range.module.css","components/CheckEmail/CheckEmail.module.css","UI-kit/Input/Input.module.css","UI-kit/Modal/Modal.module.css","components/changeUserInfo/ChangeUserInfo.module.css","components/Cards/UpdatePack.module.css","UI-kit/Radio/Radio.module.css","components/TestPage/TestPage.module.css","UI-kit/Card/Card.module.css","UI-kit/Select/Select.module.css","redux/loginReducer.ts","UI-kit/Card/Card.tsx","assets/images/mail.svg","components/CheckEmail/CheckEmail.tsx","components/ErrorPage/ErrorPage.tsx","UI-kit/Input/Input.tsx","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","api/api.ts","redux/profileReducer.ts","redux/appReducer.ts","redux/registerReducer.ts","components/Login/Login.tsx","redux/forgotReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","components/PasswordUpdate/ParrwordUpdate.tsx","UI-kit/Modal/Modal.tsx","components/changeUserInfo/ChangeUserInfo.tsx","components/Person/Person.tsx","redux/packsReducer.ts","components/Paginator/Paginator.tsx","components/Cards/UpdatePack.tsx","components/Cards/Cards.tsx","components/Header/Header.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","components/Routes/Routes.tsx","assets/images/puff.svg","UI-kit/Preloader/Preloader.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","Card","className","children","finalClasses","styles","card","CheckEmail","wrapper","emailChecking","iconWrapper","src","email","alt","ErrorPage","s","errorCode","errorText","errorImg","Input","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","purple","finalClassName","default","Checkbox","type","onChangeChecked","checked","label","instance","axios","create","baseURL","process","withCredentials","authAPI","password","rememberMe","post","name","avatar","put","delete","from","message","resetPasswordToken","packsAPI","currentPage","pageCount","get","cardsPack","packId","_id","initialState","profile","isAdmin","verified","publicCardPacksCount","created","updated","setUserProfileAC","payload","catchErrorAC","isInitialized","status","setAppStatusAC","initializeAppThunk","dispatch","then","res","setStatus","data","catch","err","response","console","log","finally","isAuth","setEmail","SET_EMAIL","setRememberMe","SET_REMEMBER_ME","showErrorMessage","SHOW_ERROR_MESSAGE","SET_AUTH_STATUS","isRegistered","registerSuccessAC","Login","useSelector","state","login","errorMessage","app","isLogin","useDispatch","useState","setPassword","useEffect","to","PATH","PROFILE","formWrapper","action","formGroup","shapeIcon","formGroupCheckbox","formGroupPassword","PASSWORD_RECOVERY","formGroupButton","disabled","onClick","preventDefault","loginUserData","setTimeout","navLinkGroup","REGISTER","initialized","setInitializedAC","setErrorAC","PasswordRecovery","mail","setMail","forgot","EMAIL_CHECK","placeholder","target","formGroupEmail","LOGIN","PasswordUpdate","newPassword","setNewPassword","token","useParams","success","sendNewPasswordThunkCreator","btn","Backdrop","onClose","classes","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","ChangeUserInfo","setName","url","setUrl","required","imgUrl","userData","updatedUser","changeUserInfoTC","icon","Person","props","showModal","hideModalHandler","sidebar","infoBox","photo","showModalHandler","logoutHandler","packsList","cardPacks","user_id","user_name","private","cardsCount","rating","Date","minCardsCount","maxCardsCount","cardPacksTotalCount","getPacksTC","getState","packs","Paginator","currentItem","itemCount","totalItemCount","onChangeItemHandler","portionSize","pagesCount","Math","ceil","pages","i","push","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","UpdatePack","title","setTitle","newPackName","Cards","setShowModal","totalPacksCount","search","tableWrapper","table","pack","toString","deleteBtn","editBtn","pageNumber","setCurrentPageAC","Header","testPage","arrayLinks","l","path","text","profilePage","activeClassName","Profile","isLoggedIn","navLinksProfile","header","exact","PROFILE_PERSON","render","PROFILE_CARDS","Register","createPassword","confirmPassword","user","setUser","submitted","setSubmitted","handleInputChange","newValue","register","history","useHistory","length","cancelBtn","goBack","registerBtn","registerFailureAC","EditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","fontSize","Radio","options","onChangeOption","onChangeCallback","mappedOptions","o","optionInput","customRadios","Select","select","Range","onChangeRange","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","setChecked","setResponse","navLinksTest","display","flexDirection","justifyContent","alignItems","height","marginTop","requestsWrapper","JSON","stringify","width","TEST","PASSWORD_UPDATE","ERROR","Routes","Preloader","loader","App","position","top","textAlign","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window"],"mappings":"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","file":"static/js/main.9edf1086.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2nZF2\",\"login\":\"Login_login__3bGOo\",\"formGroup\":\"Login_formGroup__1mLpb\",\"formGroupButton\":\"Login_formGroupButton__36Uht\",\"formWrapper\":\"Login_formWrapper__3_vIr\",\"shapeIcon\":\"Login_shapeIcon__ttv2N\",\"formGroupPassword\":\"Login_formGroupPassword__3N_L9\",\"navLinkGroup\":\"Login_navLinkGroup__3UUe9\",\"formGroupCheckbox\":\"Login_formGroupCheckbox__1B3Wh\",\"error\":\"Login_error__3S8wI\",\"errorMessage\":\"Login_errorMessage__1eavA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__3Mzwm\",\"formGroup\":\"Register_formGroup__3NaLC\",\"formWrapper\":\"Register_formWrapper__W0pMq\",\"shapeIcon\":\"Register_shapeIcon__1HD9f\",\"formGroupPassword\":\"Register_formGroupPassword__2lXkl\",\"formGroupButton\":\"Register_formGroupButton__Wu6a-\",\"register\":\"Register_register__13bP2\",\"cancelBtn\":\"Register_cancelBtn__I6ssU\",\"registerBtn\":\"Register_registerBtn__kAj6a\",\"errorMessage\":\"Register_errorMessage__2XUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Password_wrapper__CwIC7\",\"login\":\"Password_login__2Kopu\",\"formGroup\":\"Password_formGroup__1r9mZ\",\"formGroupButton\":\"Password_formGroupButton__1CTkn\",\"formWrapper\":\"Password_formWrapper__xFoHs\",\"shapeIcon\":\"Password_shapeIcon__cEhkM\",\"formGroupEmail\":\"Password_formGroupEmail__3cId9\",\"formGroupPassword\":\"Password_formGroupPassword__2hHk1\",\"navLinkGroup\":\"Password_navLinkGroup__1KeuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cards_wrapper__16gSS\",\"sidebar\":\"Cards_sidebar__zyOSU\",\"packsList\":\"Cards_packsList__2oJ7e\",\"avatar\":\"Cards_avatar__1XeO-\",\"search\":\"Cards_search__28unN\",\"tableWrapper\":\"Cards_tableWrapper__mIAk_\",\"btn\":\"Cards_btn__pUb7y\",\"table\":\"Cards_table__34Pwn\",\"deleteBtn\":\"Cards_deleteBtn__16HhG\",\"editBtn\":\"Cards_editBtn__3ukUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__1xmS2\",\"wrapper\":\"Profile_wrapper__2Uikn\",\"sidebar\":\"Profile_sidebar__3qBu8\",\"packsList\":\"Profile_packsList__2OCgf\",\"avatar\":\"Profile_avatar__2kCod\",\"infoBox\":\"Profile_infoBox__2VlGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2m7fh\",\"red\":\"Button_red__3NxY9\",\"purple\":\"Button_purple__1VZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParrwordUpdate_wrapper__1JVPh\",\"emailChecking\":\"ParrwordUpdate_emailChecking__1jv_W\",\"formGroup\":\"ParrwordUpdate_formGroup__18BLr\",\"formGroupButton\":\"ParrwordUpdate_formGroupButton__24Fqd\",\"shapeIcon\":\"ParrwordUpdate_shapeIcon__1AoJb\",\"formGroupPassword\":\"ParrwordUpdate_formGroupPassword__2JdVu\",\"btn\":\"ParrwordUpdate_btn__3HTpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2VJhJ\",\"errorCode\":\"Error404_errorCode__1hweM\",\"errorText\":\"Error404_errorText__3oDLo\",\"errorImg\":\"Error404_errorImg__36Ohx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__u9U08\",\"paginator\":\"Paginator_paginator__38pSh\",\"icon\":\"Paginator_icon__1rZ9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1JBTV\",\"container\":\"Range_container__3Gx5H\",\"doubleRange\":\"Range_doubleRange__GRGaW\",\"sliderTrack\":\"Range_sliderTrack__yDQc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CheckEmail_wrapper__OGehe\",\"emailChecking\":\"CheckEmail_emailChecking__3GTFe\",\"iconWrapper\":\"CheckEmail_iconWrapper__30MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__1KeHF\",\"errorInput\":\"Input_errorInput__3awlA\",\"error\":\"Input_error__2tyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3BvH4\",\"modal\":\"Modal_modal__pDR1O\",\"slide-down\":\"Modal_slide-down__2v6xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeUserInfo_wrapper__2nzhx\",\"btn\":\"ChangeUserInfo_btn__7xG9b\",\"icon\":\"ChangeUserInfo_icon__24fT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpdatePack_wrapper__1uPFV\",\"btn\":\"UpdatePack_btn__2ZEpk\",\"icon\":\"UpdatePack_icon__3KB0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3fXfH\",\"optionInput\":\"Radio_optionInput__1aJb4\",\"click-wave\":\"Radio_click-wave__3DnWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestsWrapper\":\"TestPage_requestsWrapper__oxvBU\",\"header\":\"TestPage_header__cy-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3S60v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select___hJwW\"};","import { ThunkType } from \"./store\";\r\nimport { authAPI, UserType } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setUserProfileAC } from \"./profileReducer\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_EMAIL = \"Login/SET-EMAIL\",\r\n    SET_REMEMBER_ME = \"Login/SET-REMEMBER-ME\",\r\n    SHOW_ERROR_MESSAGE = \"Login/SHOW-ERROR-MESSAGE\",\r\n    SET_AUTH_STATUS = \"Login/SET-AUTH-STATUS\",\r\n    SAVE_DATA_USER = \"Login/SAVE-DATA-USER\",\r\n}\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    data: {\r\n        email: \"\",\r\n        password: \"\",\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n};\r\n\r\nexport const loginReducer = (\r\n    state: LoginInitialStateType = initialState,\r\n    action: ActionLoginTypes\r\n): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_EMAIL:\r\n        case ACTIONS_TYPE.SET_REMEMBER_ME:\r\n        case ACTIONS_TYPE.SHOW_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload.data,\r\n                },\r\n            };\r\n        case ACTIONS_TYPE.SET_AUTH_STATUS: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setEmail = (email: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_EMAIL,\r\n        payload: {\r\n            data: { email },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setRememberMe = (rememberMe: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_REMEMBER_ME,\r\n        payload: {\r\n            data: { rememberMe },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const showErrorMessage = (error: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SHOW_ERROR_MESSAGE,\r\n        payload: {\r\n            data: { error },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const saveDataUser = (data: UserType) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SAVE_DATA_USER,\r\n        payload: { data },\r\n    } as const;\r\n};\r\n\r\nexport const setStatus = (isAuth: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_AUTH_STATUS,\r\n        payload: { isAuth },\r\n    } as const;\r\n};\r\n\r\n// Thunk\r\nexport const loginUserData = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(showErrorMessage(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            dispatch(setStatus(false));\r\n            dispatch(setRememberMe(false));\r\n            dispatch(setEmail(\"\"));\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : err.message + \", more details in the console\";\r\n            console.log(\"err:\", error);\r\n            dispatch(showErrorMessage(error));\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        });\r\n};\r\n// Types\r\nexport type LoginInitialStateType = { isAuth: boolean; data: DataType };\r\ntype DataType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n    error: string;\r\n};\r\nexport type ActionLoginTypes =\r\n    | ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setRememberMe>\r\n    | ReturnType<typeof showErrorMessage>\r\n    | ReturnType<typeof setStatus>;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\nexport const Card: React.FC<DefaultDivPropsType> = ({\r\n  className,\r\n  children,\r\n}) => {\r\n  const finalClasses = `${styles.card} ${className ? className : \"\"}`;\r\n  return <div className={finalClasses}>{children}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mail.995de1e6.svg\";","import React from \"react\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport styles from \"./CheckEmail.module.css\";\r\nimport email from \"./../../assets/images/mail.svg\";\r\n\r\nexport const CheckEmail = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <div className={styles.iconWrapper}>\r\n                    <img src={email} alt=\"Sending messafe\" />\r\n                </div>\r\n                <h2>Check Email</h2>\r\n                <p>\r\n                    We've sent an email with instructions to example@gmail.com\r\n                </p>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.errorCode}>404</div>\r\n      <div className={s.errorText}>There is nothing to do here...</div>\r\n      <img\r\n        src=\"https://www.seekpng.com/png/full/359-3590327_shopify-stores-sad-robot-shopify.png\"\r\n        alt=\"robot\"\r\n        className={s.errorImg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Input: React.FC<InputPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    onEnter && e.key === \"Enter\" && onEnter();\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n  purple?: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({\r\n  red,\r\n  purple,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${\r\n    red\r\n      ? `${s.default} ${s.red}`\r\n      : purple\r\n      ? `${s.default} ${s.purple}`\r\n      : s.default\r\n  } ${className}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n      <label className={s.label}></label>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nlet backend_URL_ADDRESS = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst instance = axios.create({\r\n    baseURL: backend_URL_ADDRESS,\r\n    withCredentials: true,\r\n});\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    me() {\r\n        return instance.post<UserType>(`auth/me`);\r\n    },\r\n    changeInfo(name: string, avatar: string) {\r\n        return instance.put<ChangeInfoResponseType>(`auth/me`, {\r\n            name,\r\n            avatar,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`);\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ForgotPasswordResponseType>(`auth/forgot`, {\r\n            email,\r\n            from: \"ai73a@yandex.by\",\r\n            message: `<div style=\"background-color: #d9d9f1; margin: 0 auto; padding: 2.5rem; display-flex;  flex-direction: column; align-items: center; justify-content: center; border-radius: 8px\"><h2>Forgot your password?</h2><p>That's ok, it happens! Click on the button below to reset your password.</p> <a href='http://localhost:3000/?#/password-update/$token$'><button style=\"background-color: #21268f; color: #ececf9; padding: 10px 20px; border-radius: 8px;  text-decoration: none;  border: none; cursor:pointer; border-radius: 30px;\">Reset your password</button></a></div>`,\r\n        });\r\n    },\r\n    resetPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResetPasswordResponseType>(\r\n            `auth/set-new-password`,\r\n            {\r\n                password,\r\n                resetPasswordToken,\r\n            }\r\n        );\r\n    },\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks(currentPage: number, pageCount: number) {\r\n        return instance.get<PacksResponseType>(\r\n            `cards/pack?pageCount=${pageCount}&page=${currentPage}`\r\n        );\r\n    },\r\n    addPack(name: string) {\r\n        return instance.post<AddPackResponseType>(`cards/pack`, {\r\n            cardsPack: { name },\r\n        });\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<DeletedPackResponseType>(\r\n            `cards/pack?id=${packId}`\r\n        );\r\n    },\r\n    updatePack(_id: string, name: string) {\r\n        return instance.put<UpdatedPackResponseType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name,\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\n//Types\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    avatar: string;\r\n    error: string;\r\n};\r\n\r\nexport type AddedUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: 0;\r\n    created: Date;\r\n    updated: Date;\r\n};\r\nexport type RegisterResponseType = {\r\n    addedUser: AddedUserType;\r\n    error?: string;\r\n};\r\n\r\nexport type ChangeInfoResponseType = {\r\n    updatedUser: UserType;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\nexport type LogoutResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\nexport type ForgotPasswordResponseType = {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n    error?: string;\r\n};\r\nexport type ResetPasswordResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\n\r\nexport type CardsPackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    type: string;\r\n    rating: 0;\r\n    updated: Date;\r\n};\r\nexport type PacksResponseType = {\r\n    cardPacks: CardsPackType[];\r\n    page: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    token: string;\r\n};\r\nexport type AddPackResponseType = {\r\n    newCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type DeletedPackResponseType = {\r\n    deletedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type UpdatedPackResponseType = {\r\n    updatedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\n\r\n// type AddedPackType = {\r\n//     name: string;\r\n// };\r\n","import { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: null,\r\n        email: null,\r\n        rememberMe: null,\r\n        isAdmin: null,\r\n        name: null,\r\n        verified: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        avatar: null,\r\n    },\r\n    error: \"\",\r\n};\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ActionProfileTypes\r\n): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile,\r\n            };\r\n        case \"CATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n        case \"CHANGE_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.userData,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setUserProfileAC = (profile: DataUserType) => {\r\n    return { type: \"SET_USER_PROFILE\", payload: { profile } } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n    return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\n\r\nexport const changeUserDataAC = (userData: DataUserType) => {\r\n    return {\r\n        type: \"CHANGE_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const setAuthTC = (): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\nexport const changeUserInfoTC = (name: string, imgUrl: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .changeInfo(name, imgUrl)\r\n            .then((res) => {\r\n                dispatch(changeUserDataAC(res.data.updatedUser));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionProfileTypes =\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof catchErrorAC>\r\n    | ReturnType<typeof changeUserDataAC>;\r\nexport type ProfileInitialStateType = {\r\n    profile: DataUserType;\r\n    error: string;\r\n};\r\ntype DataUserType = {\r\n    _id: string | null;\r\n    email: string | null;\r\n    rememberMe: boolean | null;\r\n    isAdmin: boolean | null;\r\n    name: string | null;\r\n    verified: boolean | null;\r\n    publicCardPacksCount: number | null;\r\n    created: Date | null;\r\n    updated: Date | null;\r\n    avatar: string | null;\r\n};\r\n","import { setAuthTC } from \"./profileReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    isInitialized: false,\r\n    status: \"idle\",\r\n};\r\n\r\nexport const appReducer = (\r\n    state = initialState,\r\n    action: ActionAppTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALISATION\":\r\n            return { ...state, isInitialized: true };\r\n        default:\r\n            return state;\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.payload.status,\r\n            };\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setIsInitializedAC = () => {\r\n    return {\r\n        type: \"SET-INITIALISATION\",\r\n    } as const;\r\n};\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        payload: {\r\n            status,\r\n        },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\n\r\nexport const initializeAppThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAuthTC());\r\n    dispatch(setIsInitializedAC());\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes =\r\n    | ReturnType<typeof setIsInitializedAC>\r\n    | ReturnType<typeof setAppStatusAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    isInitialized: boolean;\r\n    status: RequestStatusType;\r\n};\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: RegisterInitialStateType = {\r\n    error: \"\",\r\n    isRegistered: false,\r\n};\r\n\r\nexport const registerReducer = (\r\n    state = initialState,\r\n    action: ActionRegisterTypes\r\n): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isRegistered: action.payload.isRegistered,\r\n            };\r\n        case \"REGISTER_FAILURE\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerFailureAC = (error: string) => {\r\n    return {\r\n        type: \"REGISTER_FAILURE\",\r\n        payload: { error },\r\n    } as const;\r\n};\r\nexport const registerSuccessAC = (isRegistered: boolean) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: { isRegistered },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const registerUserTC = (email: string, password: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .register(email, password)\r\n            .then((res) => {\r\n                dispatch(registerSuccessAC(true));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(registerFailureAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionRegisterTypes =\r\n    | ReturnType<typeof registerFailureAC>\r\n    | ReturnType<typeof registerSuccessAC>;\r\n\r\nexport type RegisterInitialStateType = { isRegistered: boolean; error: string };\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { loginUserData, setEmail, setRememberMe, showErrorMessage, } from \"../../redux/loginReducer\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { registerSuccessAC } from \"../../redux/registerReducer\";\r\n\r\nexport const Login = () => {\r\n    const email = useSelector((state: AppStore) => state.login.data.email);\r\n    const rememberMe = useSelector(\r\n        (state: AppStore) => state.login.data.rememberMe\r\n    );\r\n    const errorMessage = useSelector(\r\n        (state: AppStore) => state.login.data.error\r\n    );\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const isLogin = useSelector((state: AppStore) => state.login.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(registerSuccessAC(false));\r\n    }, [dispatch])\r\n\r\n    const onCheckboxClick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRememberMe(e.currentTarget.checked));\r\n    };\r\n\r\n    const onEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value));\r\n    };\r\n\r\n    const onPasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitClick = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        dispatch(loginUserData(email, password, rememberMe));\r\n        dispatch(showErrorMessage(errorMessage));\r\n\r\n        setTimeout(() => {\r\n            dispatch(showErrorMessage(\"\"));\r\n        }, 3000);\r\n    };\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Sign In</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={email}\r\n                                    onChange={onEmailInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                        >\r\n                            <label>\r\n                                <span>Password</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={onPasswordInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupCheckbox}`}\r\n                        >\r\n                            <label>\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={onCheckboxClick}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupPassword}`}\r\n                        >\r\n                            {errorMessage && (\r\n                                <span className={styles.errorMessage}>{errorMessage}</span>\r\n                            )}\r\n                            <NavLink to={PATH.PASSWORD_RECOVERY}>\r\n                                Forgot Password\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                        >\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                disabled={status === \"loading\"}\r\n                                onClick={onSubmitClick}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <p>\r\n                    Don’t have an account?\r\n                </p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.REGISTER}> Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { ThunkType } from \"./store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\n\r\nconst initialState: AuthInitialStateType = {\r\n    initialized: false, // transfer to succesful succesful page\r\n    error: false, // show error page\r\n};\r\n\r\nexport const forgotReducer = (\r\n    state = initialState,\r\n    action: ActionForgotTypes\r\n): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"setInitialized\":\r\n            return { ...state, initialized: action.initialized };\r\n\r\n        case \"setError\":\r\n            return { ...state, error: action.error };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Thunk one love)))\r\nexport const sendEmailThunkCreator =\r\n    (email: string) => (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .forgotPassword(email)\r\n            .then(() => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const sendNewPasswordThunkCreator =\r\n    (email: string, token: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .resetPassword(email, token)\r\n            .then((res) => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n//Action Creators\r\n\r\nexport const setInitializedAC = (initialized: boolean) => {\r\n    return { type: \"setInitialized\", initialized } as const;\r\n};\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>;\r\n\r\nexport const setErrorAC = (error: boolean) => {\r\n    return { type: \"setError\", error } as const;\r\n};\r\nexport type seErrorAT = ReturnType<typeof setErrorAC>;\r\n\r\nexport type ActionForgotTypes = setInitializedAT | seErrorAT;\r\n\r\n// Types\r\n\r\nexport type AuthInitialStateType = {\r\n    initialized: boolean;\r\n    error: boolean;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Password.module.css\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendEmailThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialized = useSelector<AppStore, boolean>(\r\n        (state) => state.forgot.initialized\r\n    );\r\n    const error = useSelector<AppStore, boolean>((state) => state.forgot.error);\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    if (initialized) {\r\n        return <Redirect to={PATH.EMAIL_CHECK} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n    const buttonCallback = () => {\r\n        dispatch(sendEmailThunkCreator(mail));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Forgot your password?</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={\"......\"}\r\n                                    onChange={(e) => setMail(e.target.value)}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupEmail}`}\r\n                        >\r\n                            <span>\r\n                                Enter your email address and we will send you\r\n                                further instructions\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                >\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        type={\"submit\"}\r\n                        onClick={buttonCallback}\r\n                    >\r\n                        Send instructions\r\n                    </Button>\r\n                </div>\r\n\r\n                <p>Did you remember your password?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.LOGIN}> Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { sendNewPasswordThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport styles from \"./ParrwordUpdate.module.css\";\r\n\r\nexport const PasswordUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const { token } = useParams<TokenType>();\r\n    const success = useSelector((state: AppStore) => state.forgot.initialized);\r\n    const handleInputNewPassChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    };\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const dispatch = useDispatch();\r\n    const submitHandler = () => {\r\n        dispatch(sendNewPasswordThunkCreator(newPassword, token));\r\n    };\r\n    if (success === true) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Create new password</h2>\r\n                <div className={`${styles.formGroup} ${styles.shapeIcon}`}>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <br />\r\n                        <Input\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassChange}\r\n                            value={newPassword}\r\n                        />\r\n                    </label>\r\n                    <p>\r\n                        Create new password and we will send you futher\r\n                        instructions to email\r\n                    </p>\r\n                </div>\r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={status === \"loading\"}\r\n                    className={styles.btn}\r\n                >\r\n                    Create new password\r\n                </Button>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Types\r\ntype TokenType = {\r\n    token: string;\r\n};\r\n","import { DetailedHTMLProps, Fragment, HTMLAttributes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop: React.FC<ModalPropsType> = ({ onClose }) => {\r\n    return <div className={classes.backdrop} onClick={onClose} />;\r\n};\r\n\r\nconst ModalOverlay: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({ onClose, children }) => {\r\n    return (\r\n        <Fragment>\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <Backdrop onClose={onClose} />,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <ModalOverlay>{children}</ModalOverlay>,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\ntype ModalPropsType = DefaultDivPropsType & { onClose: () => void };\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserInfoTC } from \"../../redux/profileReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangeUserInfo.module.css\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const ChangeUserInfo: React.FC<ChangeUserInfoPropsType> = ({\r\n    onClose,\r\n}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const handleInputUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(e.currentTarget.value);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if (name || url) {\r\n            dispatch(changeUserInfoTC(name, url));\r\n            setName(\"\");\r\n            setUrl(\"\");\r\n        }\r\n\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new name</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputNameChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={name}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter image url</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputUrlChange}\r\n                        name=\"url\"\r\n                        required\r\n                        value={url}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Submit\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChangeUserInfoPropsType = { onClose: () => void };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { ChangeUserInfo } from \"../changeUserInfo/ChangeUserInfo\";\r\nimport styles from \"../Profile/Profile.module.css\";\r\n\r\ntype PersonPropsType = {\r\n    photo?: string | null;\r\n    name?: string | null;\r\n    showModalHandler: () => void;\r\n    logoutHandler: () => void;\r\n    showModal: boolean;\r\n    hideModalHandler: () => void;\r\n};\r\n\r\nexport const Person = (props: PersonPropsType) => {\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.showModal && (\r\n                <ChangeUserInfo onClose={props.hideModalHandler} />\r\n            )}\r\n            <div className={styles.sidebar}>\r\n                <div className={styles.infoBox}>\r\n                    <img\r\n                        className={styles.avatar}\r\n                        src={\r\n                            props.photo == null\r\n                                ? \"https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png\"\r\n                                : props.photo\r\n                        }\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <h3>{props.name}</h3>\r\n                    <h4 onClick={props.showModalHandler}>Edit profile</h4>\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        onClick={props.logoutHandler}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.packsList}></div>\r\n        </div>\r\n    );\r\n};\r\n","import { packsAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { catchErrorAC } from \"./profileReducer\";\r\nimport { AppStore, ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"\",\r\n            user_id: \"\",\r\n            user_name: \"\",\r\n            private: false,\r\n            name: \"\",\r\n            cardsCount: 0,\r\n            type: \"\",\r\n            rating: 0,\r\n            updated: new Date(),\r\n        },\r\n    ],\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    cardPacksTotalCount: 0,\r\n};\r\n\r\nexport const packsReducer = (\r\n    state = initialState,\r\n    action: ActionPacksTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_PACKS\":\r\n            return {\r\n                ...state,\r\n                cardPacks: action.payload.cardPacks.map((p) => p),\r\n            };\r\n\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n            };\r\n        case \"SET_PACKS_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksTotalCount: action.payload.cardPacksTotalCount,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setPacksAC = (cardPacks: PackType[]) => {\r\n    return { type: \"SET_PACKS\", payload: { cardPacks } } as const;\r\n};\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_PAGE\",\r\n        payload: {\r\n            currentPage,\r\n        },\r\n    } as const;\r\n};\r\nexport const setPacksTotalCountAC = (cardPacksTotalCount: number) => {\r\n    return {\r\n        type: \"SET_PACKS_TOTAL_COUNT\",\r\n        payload: {\r\n            cardPacksTotalCount,\r\n        },\r\n    } as const;\r\n};\r\n// Thunks\r\nexport const getPacksTC =\r\n    (): ThunkType => (dispatch, getState: () => AppStore) => {\r\n        const packs = getState().packs;\r\n        const currentPage = packs.currentPage;\r\n        const pageCount = packs.pageCount;\r\n\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .getPacks(currentPage, pageCount)\r\n            .then((res) => {\r\n                dispatch(setPacksAC(res.data.cardPacks));\r\n                dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const addPackTC =\r\n    (newPackName: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .addPack(newPackName)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const removePackTC =\r\n    (packId: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .deletePack(packId)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const updatePackTC =\r\n    (packId: string, title: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .updatePack(packId, title)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\n// Types\r\nexport type ActionPacksTypes =\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setPacksTotalCountAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    cardPacks: PackType[];\r\n    currentPage: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n};\r\ntype PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    type: string;\r\n    rating: 0;\r\n    updated: Date;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = (props) => {\r\n    const {\r\n        currentItem,\r\n        itemCount,\r\n        totalItemCount,\r\n        onChangeItemHandler,\r\n        portionSize,\r\n    } = props;\r\n    let pagesCount = Math.ceil(totalItemCount / itemCount);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && (\r\n                <FaAngleLeft\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1);\r\n                    }}\r\n                >\r\n                    Previous\r\n                </FaAngleLeft>\r\n            )}\r\n\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            key={p}\r\n                            className={\r\n                                currentItem === p ? styles.selectedPage : \"\"\r\n                            }\r\n                            onClick={() => {\r\n                                onChangeItemHandler(p);\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    );\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <FaAngleRight\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1);\r\n                    }}\r\n                >\r\n                    Next\r\n                </FaAngleRight>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type PaginatorPropsType = {\r\n    currentItem: number;\r\n    itemCount: number;\r\n    totalItemCount: number;\r\n    portionSize: number;\r\n    onChangeItemHandler: (page: number) => void;\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPackTC } from \"../../redux/packsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./UpdatePack.module.css\";\r\n\r\nexport const UpdatePack: React.FC<UpdateModalPropsType> = ({ onClose }) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(addPackTC(title));\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter pack's title</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={title}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Ok\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    getPacksTC,\r\n    removePackTC,\r\n    setCurrentPageAC,\r\n    updatePackTC,\r\n} from \"../../redux/packsReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\nimport styles from \"./Cards.module.css\";\r\nimport { UpdatePack } from \"./UpdatePack\";\r\n\r\nexport const Cards = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const packs = useSelector((state: AppStore) => state.packs.cardPacks);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPacksTC());\r\n    }, [dispatch]);\r\n    const totalPacksCount = useSelector(\r\n        (state: AppStore) => state.packs.cardPacksTotalCount\r\n    );\r\n    const currentPage = useSelector(\r\n        (state: AppStore) => state.packs.currentPage\r\n    );\r\n    const pageCount = useSelector((state: AppStore) => state.packs.pageCount);\r\n\r\n    const onChangePageHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber));\r\n        dispatch(getPacksTC());\r\n    };\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {showModal && <UpdatePack onClose={hideModalHandler} />}\r\n\r\n            <div className={styles.sidebar}></div>\r\n            <div className={styles.packsList}>\r\n                <h1>Packs List</h1>\r\n                <div className={styles.search}>\r\n                    <input type=\"text\" placeholder=\"Search...\" />\r\n                    <Button onClick={showModalHandler} className={styles.btn}>\r\n                        Add new pack\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.tableWrapper}>\r\n                    <table className={styles.table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Pack Name</th>\r\n                                <th>Cards Count</th>\r\n                                <th>Updated</th>\r\n                                <th>Created By</th>\r\n                                <th>Actions</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {packs.map((pack) => (\r\n                                <tr key={pack._id}>\r\n                                    <td> {pack.name}</td>\r\n                                    <td>{pack.cardsCount}</td>\r\n                                    <td>{pack.updated.toString()}</td>\r\n                                    <td>{pack.user_name}</td>\r\n\r\n                                    <td>\r\n                                        <button\r\n                                            className={styles.deleteBtn}\r\n                                            onClick={() => {\r\n                                                dispatch(\r\n                                                    removePackTC(pack._id)\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className={styles.editBtn}\r\n                                            onClick={() => {\r\n                                                dispatch(\r\n                                                    updatePackTC(\r\n                                                        pack._id,\r\n                                                        \"Name was updated\"\r\n                                                    )\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            Edit\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Paginator\r\n                        currentItem={currentPage}\r\n                        itemCount={pageCount}\r\n                        totalItemCount={totalPacksCount}\r\n                        portionSize={10}\r\n                        onChangeItemHandler={onChangePageHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype NavLinksTestType = {\r\n    path: string;\r\n    text: string;\r\n};\r\n\r\ntype PropsType = HTMLAttributes<HTMLElement> & {\r\n    arrayLinks: NavLinksTestType[];\r\n    testPage?: boolean;\r\n    profilePage?: boolean;\r\n};\r\n\r\nexport const Header: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <header className={props.className}>\r\n            {props.testPage &&\r\n                props.arrayLinks.map((l, i) => (\r\n                    <NavLink key={i} to={l.path}>\r\n                        {l.text}\r\n                    </NavLink>\r\n                ))}\r\n\r\n            {props.profilePage && (\r\n                <div className=\"container inner-header\">\r\n                    <h1>It-incubator</h1>\r\n                    <nav className=\"profile-nav\">\r\n                        {props.arrayLinks.map((l, i) => (\r\n                            <NavLink\r\n                                key={i}\r\n                                activeClassName={\"active\"}\r\n                                to={l.path}\r\n                            >\r\n                                {l.text}\r\n                            </NavLink>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            )}\r\n        </header>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { logoutThunk } from \"../../redux/loginReducer\";\r\nimport { navLinksProfile, PATH } from \"../Routes/Routes\";\r\nimport { Person } from \"../Person/Person\";\r\nimport { Cards } from \"../Cards/Cards\";\r\nimport { Header } from \"../Header/Header\";\r\n\r\nexport const Profile = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((state: AppStore) => state.login.isAuth);\r\n    const name = useSelector((state: AppStore) => state.profile.profile?.name);\r\n    const photo = useSelector(\r\n        (state: AppStore) => state.profile.profile?.avatar\r\n    );\r\n    // const userId = useSelector((state: AppStore) => state.profile.profile?._id);\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n    const logoutHandler = () => {\r\n        dispatch(logoutThunk());\r\n    };\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksProfile}\r\n                className={styles.header}\r\n                profilePage\r\n            />\r\n\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => (\r\n                        <Person\r\n                            photo={photo}\r\n                            name={name}\r\n                            showModalHandler={showModalHandler}\r\n                            logoutHandler={logoutHandler}\r\n                            showModal={showModal}\r\n                            hideModalHandler={hideModalHandler}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Cards />}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport styles from \"./Register.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUserTC } from \"../../redux/registerReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const Register = () => {\r\n    const [user, setUser] = useState<InitialValuesType>({\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setUser({\r\n            ...user,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n    const isRegistered = useSelector(\r\n        (state: AppStore) => state.register.isRegistered\r\n    );\r\n    const errorMessage = useSelector((state: AppStore) => state.register.error);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    function handleSubmit(e: MouseEvent<HTMLElement>) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (\r\n            user.email &&\r\n            user.createPassword &&\r\n            user.confirmPassword &&\r\n            user.createPassword === user.confirmPassword\r\n        ) {\r\n            dispatch(registerUserTC(user.email, user.createPassword));\r\n            setUser({ email: \"\", createPassword: \"\", confirmPassword: \"\" });\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapper}>\r\n                <Card className={styles.register}>\r\n                    <h1>It-incubator</h1>\r\n\r\n                    <div className={styles.formWrapper}>\r\n                        <form>\r\n                            <h2>Sign Up</h2>\r\n                            <div className={styles.formGroup}>\r\n                                <label>\r\n                                    <span>Email</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        value={user.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.email &&\r\n                                        \"Email is required\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"createPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.createPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.createPassword &&\r\n                                        \"Password is required.\"}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Confirm Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.confirmPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        user.confirmPassword !==\r\n                                            user.createPassword &&\r\n                                        user.confirmPassword.length > 1 &&\r\n                                        \"Passwords do not match.\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.confirmPassword &&\r\n                                        \"You should confirm your password.\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                            >\r\n                                <Button\r\n                                    className={styles.cancelBtn}\r\n                                    purple\r\n                                    onClick={() => {\r\n                                        history.goBack();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className={styles.registerBtn}\r\n                                    type={\"submit\"}\r\n                                    onClick={handleSubmit}\r\n                                    disabled={status === \"loading\"}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            {errorMessage && (\r\n                <div className={styles.errorMessage}>{errorMessage}</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n//Types\r\nexport type InitialValuesType = {\r\n    email: string;\r\n    createPassword: string;\r\n    confirmPassword: string;\r\n};\r\n","import React, {\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    HTMLAttributes,\r\n    useState,\r\n} from \"react\";\r\n\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n>;\r\n\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLSpanElement>,\r\n    HTMLSpanElement\r\n>;\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string;\r\n    spanProps?: DefaultSpanPropsType;\r\n};\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = ({\r\n    autoFocus,\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n    ...restProps\r\n}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const { children, onDoubleClick, className, ...restSpanProps } =\r\n        spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false);\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (\r\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n    ) => {\r\n        setEditMode(true);\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode ? (\r\n                <Input\r\n                    autoFocus\r\n                    onBlur={onBlurCallback}\r\n                    onEnter={onEnterCallback}\r\n                    {...restProps}\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onDoubleClickCallBack}\r\n                    className={spanClassName}\r\n                    {...restSpanProps}\r\n                >\r\n                    <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\r\n                    {children || restProps.value}\r\n                </span>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport s from \"./Radio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Radio: React.FC<RadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            className={s.optionInput}\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <div className={s.customRadios}>{mappedOptions}</div>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport s from \"./Select.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => {\r\n        return <option key={i}>{o}</option>;\r\n      })\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n    console.log(\"select \" + e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.select}>\r\n      <select onChange={onChangeCallback} {...restProps}>\r\n        {mappedOptions}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport styles from \"./Range.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n  onChangeRange?: (value: number) => void;\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n  value,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  // const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.sliderTrack}></div>\r\n        <input\r\n          type={\"range\"}\r\n          className={styles.doubleRange}\r\n          onChange={onChangeCallback}\r\n          {...restProps}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport styles from \"./TestPage.module.css\";\r\nimport { navLinksTest } from \"../Routes/Routes\";\r\n\r\nexport const TestPage = () => {\r\n    const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const [rangeValue, setRangeValue] = useState(50);\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>();\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(e.currentTarget.checked);\r\n    };\r\n    const changeHandler = (value: number) => {\r\n        setRangeValue(value);\r\n    };\r\n    const login = () => {\r\n        authAPI\r\n            .login(\"nya-admn@nya.nya\", \"1qazxcvBG\", true)\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const me = () => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const register = () => {\r\n        authAPI\r\n            .register(\"blabla00000@nya.nya\", \"1qazxcvBG\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const changeInfo = () => {\r\n        authAPI\r\n            .changeInfo(\"New Name\", \"https://i.mydramalist.com/67r8d_5_c.jpg\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const logout = () => {\r\n        authAPI\r\n            .logout()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const forgotPassword = () => {\r\n        authAPI\r\n            .forgotPassword(\"blabla@nya.nya\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksTest}\r\n                className={styles.header}\r\n                testPage\r\n            />\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    height: \"80vh\",\r\n                    marginTop: \"5rem\",\r\n                }}\r\n            >\r\n                <Button>button</Button>\r\n                <Checkbox checked={checked} onChange={testOnChange} />\r\n                <EditableSpan />\r\n                <Radio\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <Input />\r\n                <span style={{ fontSize: \"1.7rem\" }}>{rangeValue}</span>\r\n                <Range onChangeRange={changeHandler} value={rangeValue} />\r\n                <Select\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={styles.requestsWrapper}>\r\n                    <Button onClick={login}>Login Request</Button>\r\n                    <Button onClick={register}>Register</Button>\r\n                    <Button onClick={me}>Show User</Button>\r\n                    <Button onClick={changeInfo}>Change Info</Button>\r\n                    <Button onClick={logout}>Logout</Button>\r\n                    <Button onClick={forgotPassword}>Forgot Password</Button>\r\n                </div>\r\n                <div style={{ width: \"800px\" }}>{response}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { CheckEmail } from \"../CheckEmail/CheckEmail\";\r\nimport { ErrorPage } from \"../ErrorPage/ErrorPage\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport { PasswordUpdate } from \"../PasswordUpdate/ParrwordUpdate\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { Register } from \"../Register/Register\";\r\nimport { TestPage } from \"../TestPage/TestPage\";\r\nimport React from \"react\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    TEST: \"/test\",\r\n    PASSWORD_UPDATE: \"/password-update/:token\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    PROFILE: \"/profile\",\r\n    PROFILE_PERSON: \"/profile/person\",\r\n    PROFILE_CARDS: \"/profile/cards\",\r\n    REGISTER: \"/register\",\r\n    EMAIL_CHECK: \"/check-email\",\r\n    ERROR: \"/error-page\",\r\n};\r\n\r\nexport const navLinksProfile = [\r\n    { path: PATH.PROFILE_CARDS, text: \"Packs list\" },\r\n    { path: PATH.PROFILE_PERSON, text: \"Profile\" },\r\n];\r\n\r\nexport const navLinksTest = [\r\n    { path: PATH.LOGIN, text: \"Login\" },\r\n    { path: PATH.REGISTER, text: \"Register\" },\r\n    { path: PATH.PROFILE, text: \"Profile\" },\r\n    { path: PATH.PASSWORD_UPDATE, text: \"Update Password\" },\r\n    { path: PATH.PASSWORD_RECOVERY, text: \"Recovery Password\" },\r\n    { path: PATH.EMAIL_CHECK, text: \"Check Email\" },\r\n    { path: PATH.ERROR, text: \"ErrorPage\" },\r\n];\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={\"/\"}\r\n                    render={() => <Redirect to={PATH.LOGIN} />}\r\n                />\r\n                <Route exact path={PATH.TEST} render={() => <TestPage />} />\r\n                <Route exact path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route exact path={PATH.REGISTER} render={() => <Register />} />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_UPDATE}\r\n                    render={() => <PasswordUpdate />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_RECOVERY}\r\n                    render={() => <PasswordRecovery />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.EMAIL_CHECK}\r\n                    render={() => <CheckEmail />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route exact render={() => <ErrorPage />} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/puff.6b477021.svg\";","import React from \"react\";\r\nimport loader from \"./../../assets/images/puff.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={loader} alt=\"loading\" />;\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Routes from \"./components/Routes/Routes\";\r\nimport { initializeAppThunk } from \"./redux/appReducer\";\r\nimport { AppStore } from \"./redux/store\";\r\nimport { Preloader } from \"./UI-kit/Preloader/Preloader\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useSelector<AppStore, boolean>(\r\n        (state) => state.app.isInitialized\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppThunk());\r\n        }\r\n    }, [dispatch, isInitialized]);\r\n\r\n    if (!isInitialized) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"fixed\",\r\n                    top: \"30%\",\r\n                    textAlign: \"center\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <Preloader />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes, appReducer } from \"./appReducer\";\r\nimport { ActionForgotTypes, forgotReducer } from \"./forgotReducer\";\r\nimport { ActionLoginTypes, loginReducer } from \"./loginReducer\";\r\nimport { ActionPacksTypes, packsReducer } from \"./packsReducer\";\r\nimport { ActionProfileTypes, profileReducer } from \"./profileReducer\";\r\nimport { ActionRegisterTypes, registerReducer } from \"./registerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof reducers>;\r\nexport type AppActionsType =\r\n    | ActionLoginTypes\r\n    | ActionProfileTypes\r\n    | ActionRegisterTypes\r\n    | ActionAppTypes\r\n    | ActionForgotTypes\r\n    | ActionPacksTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}