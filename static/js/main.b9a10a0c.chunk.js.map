{"version":3,"sources":["components/Error/ErrorMes.module.css","UI-kit/Select/Select.module.css","redux/loginReducer.ts","UI-kit/Card/Card.tsx","assets/images/mail.svg","components/CheckEmail/CheckEmail.tsx","components/ErrorPage/ErrorPage.tsx","UI-kit/Input/Input.tsx","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","api/api.ts","redux/profileReducer.ts","redux/appReducer.ts","redux/registerReducer.ts","components/Login/Login.tsx","redux/forgotReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","components/PasswordUpdate/ParrwordUpdate.tsx","redux/packsReducer.ts","UI-kit/Modal/Modal.tsx","components/changeUserInfo/ChangeUserInfo.tsx","components/Person/Person.tsx","UI-kit/RangeUI/RangeUI.tsx","components/Error/ErrorMes.tsx","components/Paginator/Paginator.tsx","assets/images/icon-cards.svg","helpers/helpers.ts","assets/images/puff.svg","UI-kit/Preloader/Preloader.tsx","redux/cardsReducer.ts","components/Packs/ChangePack.tsx","components/Packs/DeletePackModal.tsx","components/Cards/DeleteCardModal.tsx","components/Cards/UpdateCard.tsx","components/Table/Table.tsx","components/Packs/AddPack.tsx","components/Packs/Packs.tsx","components/Header/Header.tsx","components/Cards/AddCard.tsx","components/Cards/Cards.tsx","components/Lern/Learn.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","components/Routes/Routes.tsx","App.tsx","redux/store.ts","index.tsx","components/Packs/Packs.module.css","components/Login/Login.module.css","components/Table/Table.module.css","components/Register/Register.module.css","components/PasswordRecovery/Password.module.css","components/Lern/Learn.module.css","components/Profile/Profile.module.css","UI-kit/Button/Button.module.css","components/PasswordUpdate/ParrwordUpdate.module.css","components/Packs/ChangePack.module.css","components/Packs/DeletePackModal.module.css","components/Cards/DeleteCardModal.module.css","components/Cards/UpdateCard.module.css","components/Cards/Cards.module.css","components/ErrorPage/Error404.module.css","components/Paginator/Paginator.module.css","UI-kit/Range/Range.module.css","components/CheckEmail/CheckEmail.module.css","UI-kit/Input/Input.module.css","UI-kit/Modal/Modal.module.css","components/changeUserInfo/ChangeUserInfo.module.css","components/Packs/AddPack.module.css","components/Cards/AddCard.module.css","UI-kit/Preloader/Preloader.module.css","UI-kit/Radio/Radio.module.css","components/TestPage/TestPage.module.css","UI-kit/Card/Card.module.css"],"names":["module","exports","ACTIONS_TYPE","Card","className","children","finalClasses","styles","card","CheckEmail","wrapper","emailChecking","iconWrapper","src","email","alt","ErrorPage","s","errorCode","errorText","errorImg","Input","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","purple","finalClassName","default","Checkbox","type","onChangeChecked","checked","label","instance","axios","create","baseURL","process","withCredentials","authAPI","password","rememberMe","post","name","avatar","put","delete","from","message","resetPasswordToken","packsAPI","currentPage","pageCount","packName","userId","min","max","get","cardsPack","packId","_id","cardsAPI","cardsPack_id","question","answer","id","initialState","profile","isAdmin","verified","publicCardPacksCount","created","Date","updated","setUserProfileAC","payload","setProfileIdAC","isInitialized","status","setAppStatusAC","catchErrorAC","initializeAppThunk","dispatch","promise","then","res","setStatus","data","catch","err","response","console","log","finally","Promise","all","isAuth","setEmail","SET_EMAIL","setRememberMe","SET_REMEMBER_ME","showErrorMessage","SHOW_ERROR_MESSAGE","SET_AUTH_STATUS","isRegistered","registerFailureAC","registerSuccessAC","Login","useSelector","state","login","errorMessage","app","isLogin","useDispatch","useState","setPassword","useEffect","to","PATH","PROFILE","formWrapper","action","formGroup","shapeIcon","formGroupCheckbox","formGroupPassword","PASSWORD_RECOVERY","formGroupButton","disabled","onClick","preventDefault","loginUserData","setTimeout","navLinkGroup","REGISTER","initialized","setInitializedAC","setErrorAC","PasswordRecovery","mail","setMail","forgot","EMAIL_CHECK","placeholder","target","formGroupEmail","LOGIN","PasswordUpdate","newPassword","setNewPassword","token","useParams","success","sendNewPasswordThunkCreator","btn","cardPacks","user_id","user_name","private","cardsCount","minCardsCount","maxCardsCount","cardPacksTotalCount","packsId","searchPacks","myPage","setRangeValuesAC","setMyPageAC","isCurrent","setCurrentPackIdAC","getPacksTC","getState","packs","Backdrop","onClose","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","ChangeUserInfo","setName","url","setUrl","required","imgUrl","userData","updatedUser","changeUserInfoTC","icon","Person","props","showModal","hideModalHandler","infoBox","photo","showModalHandler","logoutHandler","RangeUi","onChangeRange","Slider","color","event","newValue","valueLabelDisplay","sx","backgroundColor","width","height","top","opacity","ErrorMes","Paginator","currentItem","itemCount","totalItemCount","onChangeItemHandler","portionSize","pagesCount","Math","ceil","pages","i","push","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","trimString","string","length","substring","Preloader","img","loader","cards","grade","shots","rating","cardPackId","cardId","packUserId","cardGrade","setCurrentCardIdAC","getCardsTC","setCardsAC","cardsTotalCount","ChangePack","title","setTitle","btnsWrapper","updatePackTC","DeletePackModal","onDelete","DeleteCardModal","UpdateCard","cardsPackId","setQuestion","setAnswer","card_id","setCardsGradeAC","updateCardTC","Table","headers","userIdFromCards","getLocalTime","Intl","DateTimeFormat","format","showPackChangeModal","setShowPackChangeModal","showPackDeleteModal","setShowPackDeleteModal","showCardDeleteModal","setShowCardDeleteModal","showCardUpdateModal","setShowCardUpdateModal","table","removePackTC","deleteCardTC","header","index","actions","scope","colSpan","pack","narrow","cardsIcon","deleteBtn","renderPacks","setCurrentCardGradeAC","renderCards","AddPack","newPackName","Packs","setShowModal","searchPack","setSearchPack","totalPacksCount","onChangePageHandler","useCallback","pageNumber","setCurrentPageAC","setValue","onChangeSuperDoubleRange","sidebar","btnWrapper","sideBtn","active","sliderComponent","sliderWrapper","RangeUI","packsList","search","fieldGroup","searchValue","callSetSearchPack","searchBtn","tableWrapper","Header","testPage","arrayLinks","l","path","text","profilePage","activeClassName","AddCard","addCardTC","Cards","history","useHistory","goback","goBack","xmlns","viewBox","fill","d","empty","grades","getCard","sum","reduce","acc","rand","random","newSum","Learn","isChecked","setIsChecked","first","setFirst","currentPack","setCard","BpIcon","styled","theme","borderRadius","boxShadow","palette","mode","backgroundImage","outline","outlineOffset","background","BpCheckedIcon","display","BpRadio","bgcolor","disableRipple","checkedIcon","maxWidth","minHeight","margin","style","textAlign","CardActions","cancelBtn","FormControl","component","FormLabel","legend","RadioGroup","defaultValue","g","FormControlLabel","control","registerBtn","Profile","isLoggedIn","navLinksProfile","exact","PROFILE_PERSON","render","PROFILE_PACKS","PROFILE_CARDS","PROFILE_PACKS_LEARN","Register","createPassword","confirmPassword","user","setUser","submitted","setSubmitted","handleInputChange","register","EditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","fontSize","Radio","options","onChangeOption","onChangeCallback","mappedOptions","o","optionInput","customRadios","Select","select","Range","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","setChecked","setResponse","navLinksTest","flexDirection","justifyContent","alignItems","marginTop","requestsWrapper","JSON","stringify","TEST","PASSWORD_UPDATE","ERROR","Routes","App","reducers","combineReducers","c","store","createStore","applyMiddleware","thunkMiddleware","window"],"mappings":"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","file":"static/js/main.b9a10a0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorMes_error__2nnof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select___hJwW\"};","import { ThunkType } from \"./store\";\r\nimport { authAPI, UserType } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setUserProfileAC } from \"./profileReducer\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_EMAIL = \"Login/SET-EMAIL\",\r\n    SET_REMEMBER_ME = \"Login/SET-REMEMBER-ME\",\r\n    SHOW_ERROR_MESSAGE = \"Login/SHOW-ERROR-MESSAGE\",\r\n    SET_AUTH_STATUS = \"Login/SET-AUTH-STATUS\",\r\n    SAVE_DATA_USER = \"Login/SAVE-DATA-USER\",\r\n}\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    data: {\r\n        email: \"\",\r\n        password: \"\",\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n};\r\n\r\nexport const loginReducer = (\r\n    state: LoginInitialStateType = initialState,\r\n    action: ActionLoginTypes\r\n): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_EMAIL:\r\n        case ACTIONS_TYPE.SET_REMEMBER_ME:\r\n        case ACTIONS_TYPE.SHOW_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload.data,\r\n                },\r\n            };\r\n        case ACTIONS_TYPE.SET_AUTH_STATUS: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setEmail = (email: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_EMAIL,\r\n        payload: {\r\n            data: { email },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setRememberMe = (rememberMe: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_REMEMBER_ME,\r\n        payload: {\r\n            data: { rememberMe },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const showErrorMessage = (error: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SHOW_ERROR_MESSAGE,\r\n        payload: {\r\n            data: { error },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const saveDataUser = (data: UserType) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SAVE_DATA_USER,\r\n        payload: { data },\r\n    } as const;\r\n};\r\n\r\nexport const setStatus = (isAuth: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_AUTH_STATUS,\r\n        payload: { isAuth },\r\n    } as const;\r\n};\r\n\r\n// Thunk\r\nexport const loginUserData = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(showErrorMessage(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            dispatch(setStatus(false));\r\n            dispatch(setRememberMe(false));\r\n            dispatch(setEmail(\"\"));\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : err.message + \", more details in the console\";\r\n            console.log(\"err:\", error);\r\n            dispatch(showErrorMessage(error));\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        });\r\n};\r\n// Types\r\nexport type LoginInitialStateType = { isAuth: boolean; data: DataType };\r\ntype DataType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n    error: string;\r\n};\r\nexport type ActionLoginTypes =\r\n    | ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setRememberMe>\r\n    | ReturnType<typeof showErrorMessage>\r\n    | ReturnType<typeof setStatus>;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\nexport const Card: React.FC<DefaultDivPropsType> = ({\r\n  className,\r\n  children,\r\n}) => {\r\n  const finalClasses = `${styles.card} ${className ? className : \"\"}`;\r\n  return <div className={finalClasses}>{children}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mail.995de1e6.svg\";","import React from \"react\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport styles from \"./CheckEmail.module.css\";\r\nimport email from \"./../../assets/images/mail.svg\";\r\n\r\nexport const CheckEmail = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <div className={styles.iconWrapper}>\r\n                    <img src={email} alt=\"Sending message\" />\r\n                </div>\r\n                <h2>Check Email</h2>\r\n                <p>\r\n                    We've sent an email with instructions to example@gmail.com\r\n                </p>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.errorCode}>404</div>\r\n      <div className={s.errorText}>There is nothing to do here...</div>\r\n      <img\r\n        src=\"https://www.seekpng.com/png/full/359-3590327_shopify-stores-sad-robot-shopify.png\"\r\n        alt=\"robot\"\r\n        className={s.errorImg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Input: React.FC<InputPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    onEnter && e.key === \"Enter\" && onEnter();\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n  purple?: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({\r\n  red,\r\n  purple,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${\r\n    red\r\n      ? `${s.default} ${s.red}`\r\n      : purple\r\n      ? `${s.default} ${s.purple}`\r\n      : s.default\r\n  } ${className}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n      <label className={s.label}></label>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nlet backend_URL_ADDRESS = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst instance = axios.create({\r\n    baseURL: backend_URL_ADDRESS,\r\n    withCredentials: true,\r\n});\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    me() {\r\n        return instance.post<UserType>(`auth/me`);\r\n    },\r\n    changeInfo(name: string, avatar: string) {\r\n        return instance.put<ChangeInfoResponseType>(`auth/me`, {\r\n            name,\r\n            avatar,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`);\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ForgotPasswordResponseType>(`auth/forgot`, {\r\n            email,\r\n            from: \"ai73a@yandex.by\",\r\n            message: `<div style=\"background-color: #d9d9f1; margin: 0 auto; padding: 2.5rem; display-flex;  flex-direction: column; align-items: center; justify-content: center; border-radius: 8px\"><h2>Forgot your password?</h2><p>That's ok, it happens! Click on the button below to reset your password.</p> <a href='http://localhost:3000/?#/password-update/$token$'><button style=\"background-color: #21268f; color: #ececf9; padding: 10px 20px; border-radius: 8px;  text-decoration: none;  border: none; cursor:pointer; border-radius: 30px;\">Reset your password</button></a></div>`,\r\n        });\r\n    },\r\n    resetPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResetPasswordResponseType>(\r\n            `auth/set-new-password`,\r\n            {\r\n                password,\r\n                resetPasswordToken,\r\n            }\r\n        );\r\n    },\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks(\r\n        currentPage: number,\r\n        pageCount: number,\r\n        packName: string,\r\n        userId: string | null,\r\n        min: number,\r\n        max: number\r\n    ) {\r\n        return instance.get<PacksResponseType>(\r\n            `cards/pack?pageCount=${pageCount}&page=${currentPage}&packName=${packName}&user_id=${userId}&min=${min}&max=${max}`\r\n        );\r\n    },\r\n    addPack(name: string) {\r\n        return instance.post<AddPackResponseType>(`cards/pack`, {\r\n            cardsPack: { name },\r\n        });\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<DeletedPackResponseType>(\r\n            `cards/pack?id=${packId}`\r\n        );\r\n    },\r\n    updatePack(_id: string, name: string) {\r\n        return instance.put<UpdatedPackResponseType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name,\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\nexport const cardsAPI = {\r\n    getCards(packId: string, currentPage: number, pageCount: number) {\r\n        return instance.get<GetCardsResponseType>(\r\n            `cards/card?cardsPack_id=${packId}&pageCount=${pageCount}&page=${currentPage}`\r\n        );\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post<AddedCardResponseType>(`cards/card`, {\r\n            card: { cardsPack_id, question, answer },\r\n        });\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete<DeletedCardResponseType>(`cards/card?id=${id}`);\r\n    },\r\n    updateCard(_id: string, question: string, answer: string) {\r\n        return instance.put<UpdatedCardResponseType>(`cards/card`, {\r\n            card: { _id, question, answer },\r\n        });\r\n    },\r\n    updateCardGrade(_id: string, grade: number) {\r\n        return instance.put<UpdatedCardResponseType>(`cards/grade`, {\r\n            card: { _id, grade },\r\n        });\r\n    },\r\n};\r\n\r\n//Types\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    avatar: string;\r\n    error: string;\r\n};\r\n\r\nexport type AddedUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: 0;\r\n    created: Date;\r\n    updated: Date;\r\n};\r\nexport type RegisterResponseType = {\r\n    addedUser: AddedUserType;\r\n    error?: string;\r\n};\r\n\r\nexport type ChangeInfoResponseType = {\r\n    updatedUser: UserType;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\nexport type LogoutResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\nexport type ForgotPasswordResponseType = {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n    error?: string;\r\n};\r\nexport type ResetPasswordResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\n\r\nexport type CardsPackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    type: string;\r\n    rating: 0;\r\n    updated: Date;\r\n};\r\nexport type PacksResponseType = {\r\n    cardPacks: CardsPackType[];\r\n    page: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    token: string;\r\n};\r\nexport type AddPackResponseType = {\r\n    newCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type DeletedPackResponseType = {\r\n    deletedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type UpdatedPackResponseType = {\r\n    updatedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[];\r\n    packUserId: string;\r\n    page: number;\r\n    pageCount: number;\r\n    cardsTotalCount: number;\r\n    minGrade: number;\r\n    maxGrade: number;\r\n};\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n    type: string;\r\n    rating: number;\r\n    updated: Date | string;\r\n    more_id: string;\r\n    created: Date | string;\r\n};\r\nexport type AddedCardResponseType = {\r\n    newCard: CardType;\r\n};\r\nexport type DeletedCardResponseType = {\r\n    deletedCard: CardType;\r\n};\r\nexport type UpdatedCardResponseType = {\r\n    updatedCard: CardType;\r\n};\r\n","import { authAPI } from \"../api/api\";\r\nimport { catchErrorAC, setAppStatusAC } from \"./appReducer\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        rememberMe: false,\r\n        isAdmin: false,\r\n        name: \"\",\r\n        verified: false,\r\n        publicCardPacksCount: 0,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        avatar: \"\",\r\n    },\r\n    userId: \"\",\r\n};\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ActionProfileTypes\r\n): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile,\r\n            };\r\n        case \"CHANGE_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.userData,\r\n            };\r\n        case \"SET_PROFILE_ID\":\r\n            return {\r\n                ...state,\r\n                userId: action.payload.userId,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setUserProfileAC = (profile: DataUserType) => {\r\n    return { type: \"SET_USER_PROFILE\", payload: { profile } } as const;\r\n};\r\n\r\nexport const changeUserDataAC = (userData: DataUserType) => {\r\n    return {\r\n        type: \"CHANGE_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\nexport const setProfileIdAC = (userId: string) => {\r\n    return {\r\n        type: \"SET_PROFILE_ID\",\r\n        payload: { userId },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const setAuthTC = (): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n                dispatch(setProfileIdAC(res.data._id));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\nexport const changeUserInfoTC = (name: string, imgUrl: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .changeInfo(name, imgUrl)\r\n            .then((res) => {\r\n                dispatch(changeUserDataAC(res.data.updatedUser));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionProfileTypes =\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof changeUserDataAC>\r\n    | ReturnType<typeof setProfileIdAC>;\r\n\r\nexport type ProfileInitialStateType = {\r\n    profile: DataUserType;\r\n    userId: string;\r\n};\r\ntype DataUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    avatar: string;\r\n};\r\n","import { setAuthTC } from \"./profileReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    isInitialized: false,\r\n    status: \"idle\",\r\n    error: \"\",\r\n};\r\n\r\nexport const appReducer = (\r\n    state = initialState,\r\n    action: ActionAppTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALISATION\":\r\n            return { ...state, isInitialized: true };\r\n        case \"CATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.payload.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setIsInitializedAC = () => {\r\n    return {\r\n        type: \"SET-INITIALISATION\",\r\n    } as const;\r\n};\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        payload: {\r\n            status,\r\n        },\r\n    } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n    return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\n// Thunks\r\n\r\nexport const initializeAppThunk = (): ThunkType => (dispatch) => {\r\n    const promise = dispatch(setAuthTC());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(setIsInitializedAC());\r\n    });\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes =\r\n    | ReturnType<typeof setIsInitializedAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof catchErrorAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    isInitialized: boolean;\r\n    status: RequestStatusType;\r\n    error: string;\r\n};\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: RegisterInitialStateType = {\r\n    error: \"\",\r\n    isRegistered: false,\r\n};\r\n\r\nexport const registerReducer = (\r\n    state = initialState,\r\n    action: ActionRegisterTypes\r\n): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isRegistered: action.payload.isRegistered,\r\n            };\r\n        case \"REGISTER_FAILURE\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerFailureAC = (error: string) => {\r\n    return {\r\n        type: \"REGISTER_FAILURE\",\r\n        payload: { error },\r\n    } as const;\r\n};\r\nexport const registerSuccessAC = (isRegistered: boolean) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: { isRegistered },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const registerUserTC = (email: string, password: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .register(email, password)\r\n            .then((res) => {\r\n                dispatch(registerSuccessAC(true));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(registerFailureAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionRegisterTypes =\r\n    | ReturnType<typeof registerFailureAC>\r\n    | ReturnType<typeof registerSuccessAC>;\r\n\r\nexport type RegisterInitialStateType = { isRegistered: boolean; error: string };\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { loginUserData, setEmail, setRememberMe, showErrorMessage, } from \"../../redux/loginReducer\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { registerSuccessAC } from \"../../redux/registerReducer\";\r\n\r\nexport const Login = () => {\r\n    const email = useSelector((state: AppStore) => state.login.data.email);\r\n    const rememberMe = useSelector(\r\n        (state: AppStore) => state.login.data.rememberMe\r\n    );\r\n    const errorMessage = useSelector(\r\n        (state: AppStore) => state.login.data.error\r\n    );\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const isLogin = useSelector((state: AppStore) => state.login.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(registerSuccessAC(false));\r\n    }, [dispatch])\r\n\r\n    const onCheckboxClick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRememberMe(e.currentTarget.checked));\r\n    };\r\n\r\n    const onEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value));\r\n    };\r\n\r\n    const onPasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitClick = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        dispatch(loginUserData(email, password, rememberMe));\r\n        dispatch(showErrorMessage(errorMessage));\r\n\r\n        setTimeout(() => {\r\n            dispatch(showErrorMessage(\"\"));\r\n        }, 3000);\r\n    };\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Sign In</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={email}\r\n                                    onChange={onEmailInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                        >\r\n                            <label>\r\n                                <span>Password</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={onPasswordInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupCheckbox}`}\r\n                        >\r\n                            <label>\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={onCheckboxClick}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupPassword}`}\r\n                        >\r\n                            {errorMessage && (\r\n                                <span className={styles.errorMessage}>{errorMessage}</span>\r\n                            )}\r\n                            <NavLink to={PATH.PASSWORD_RECOVERY}>\r\n                                Forgot Password\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                        >\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                disabled={status === \"loading\"}\r\n                                onClick={onSubmitClick}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <p>\r\n                    Don’t have an account?\r\n                </p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.REGISTER}> Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { ThunkType } from \"./store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\n\r\nconst initialState: AuthInitialStateType = {\r\n    initialized: false, // transfer to succesful succesful page\r\n    error: false, // show error page\r\n};\r\n\r\nexport const forgotReducer = (\r\n    state = initialState,\r\n    action: ActionForgotTypes\r\n): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"setInitialized\":\r\n            return { ...state, initialized: action.initialized };\r\n\r\n        case \"setError\":\r\n            return { ...state, error: action.error };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Thunk one love)))\r\nexport const sendEmailThunkCreator =\r\n    (email: string) => (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .forgotPassword(email)\r\n            .then(() => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const sendNewPasswordThunkCreator =\r\n    (email: string, token: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .resetPassword(email, token)\r\n            .then((res) => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n//Action Creators\r\n\r\nexport const setInitializedAC = (initialized: boolean) => {\r\n    return { type: \"setInitialized\", initialized } as const;\r\n};\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>;\r\n\r\nexport const setErrorAC = (error: boolean) => {\r\n    return { type: \"setError\", error } as const;\r\n};\r\nexport type seErrorAT = ReturnType<typeof setErrorAC>;\r\n\r\nexport type ActionForgotTypes = setInitializedAT | seErrorAT;\r\n\r\n// Types\r\n\r\nexport type AuthInitialStateType = {\r\n    initialized: boolean;\r\n    error: boolean;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Password.module.css\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendEmailThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialized = useSelector<AppStore, boolean>(\r\n        (state) => state.forgot.initialized\r\n    );\r\n    const error = useSelector<AppStore, boolean>((state) => state.forgot.error);\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    if (initialized) {\r\n        return <Redirect to={PATH.EMAIL_CHECK} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n    const buttonCallback = () => {\r\n        dispatch(sendEmailThunkCreator(mail));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Forgot your password?</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={\"......\"}\r\n                                    onChange={(e) => setMail(e.target.value)}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupEmail}`}\r\n                        >\r\n                            <span>\r\n                                Enter your email address and we will send you\r\n                                further instructions\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                >\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        type={\"submit\"}\r\n                        onClick={buttonCallback}\r\n                    >\r\n                        Send instructions\r\n                    </Button>\r\n                </div>\r\n\r\n                <p>Did you remember your password?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.LOGIN}> Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { sendNewPasswordThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport styles from \"./ParrwordUpdate.module.css\";\r\n\r\nexport const PasswordUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const { token } = useParams<TokenType>();\r\n    const success = useSelector((state: AppStore) => state.forgot.initialized);\r\n    const handleInputNewPassChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    };\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const dispatch = useDispatch();\r\n    const submitHandler = () => {\r\n        dispatch(sendNewPasswordThunkCreator(newPassword, token));\r\n    };\r\n    if (success === true) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Create new password</h2>\r\n                <div className={`${styles.formGroup} ${styles.shapeIcon}`}>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <br />\r\n                        <Input\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassChange}\r\n                            value={newPassword}\r\n                        />\r\n                    </label>\r\n                    <p>\r\n                        Create new password and we will send you futher\r\n                        instructions to email\r\n                    </p>\r\n                </div>\r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={status === \"loading\"}\r\n                    className={styles.btn}\r\n                >\r\n                    Create new password\r\n                </Button>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Types\r\ntype TokenType = {\r\n    token: string;\r\n};\r\n","import { packsAPI } from \"../api/api\";\r\nimport { catchErrorAC, setAppStatusAC } from \"./appReducer\";\r\nimport { AppStore, ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"\",\r\n            user_id: \"\",\r\n            user_name: \"\",\r\n            private: false,\r\n            name: \"\",\r\n            cardsCount: 0,\r\n            updated: new Date(),\r\n        },\r\n    ],\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    cardPacksTotalCount: 0,\r\n    userId: \"\",\r\n    packsId: \"\",\r\n    searchPacks: \"\",\r\n    myPage: false,\r\n};\r\n\r\nexport const packsReducer = (\r\n    state = initialState,\r\n    action: ActionPacksTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_PACKS\":\r\n            return {\r\n                ...state,\r\n                cardPacks: action.payload.cardPacks.map((p) => p),\r\n            };\r\n        case \"SET_SEARCH_PACKS\":\r\n            return { ...state, searchPacks: action.payload.searchValue };\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n            };\r\n        case \"SET_PACKS_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksTotalCount: action.payload.cardPacksTotalCount,\r\n            };\r\n        case \"SET_RANGE_VALUES\":\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.payload.min,\r\n                maxCardsCount: action.payload.max,\r\n            };\r\n        case \"SET_MY_PAGE\":\r\n            return {\r\n                ...state,\r\n                myPage: action.payload.myPage,\r\n            };\r\n        case \"SET_CURRENT_PACK_ID\":\r\n            return {\r\n                ...state,\r\n                packsId: action.payload.packId,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setPacksAC = (cardPacks: PackType[]) => {\r\n    return { type: \"SET_PACKS\", payload: { cardPacks } } as const;\r\n};\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_PAGE\",\r\n        payload: {\r\n            currentPage,\r\n        },\r\n    } as const;\r\n};\r\nexport const setPacksTotalCountAC = (cardPacksTotalCount: number) => {\r\n    return {\r\n        type: \"SET_PACKS_TOTAL_COUNT\",\r\n        payload: {\r\n            cardPacksTotalCount,\r\n        },\r\n    } as const;\r\n};\r\nexport const setSearchPacksAC = (searchValue: string) => {\r\n    return {\r\n        type: \"SET_SEARCH_PACKS\",\r\n        payload: {\r\n            searchValue,\r\n        },\r\n    } as const;\r\n};\r\nexport const setRangeValuesAC = (min: number, max: number) => {\r\n    return {\r\n        type: \"SET_RANGE_VALUES\",\r\n        payload: {\r\n            min,\r\n            max,\r\n        },\r\n    } as const;\r\n};\r\nexport const setMyPageAC = (isCurrent: boolean) => {\r\n    return {\r\n        type: \"SET_MY_PAGE\",\r\n        payload: {\r\n            myPage: isCurrent,\r\n        },\r\n    } as const;\r\n};\r\nexport const setCurrentPackIdAC = (packId: string) => {\r\n    return {\r\n        type: \"SET_CURRENT_PACK_ID\",\r\n        payload: {\r\n            packId,\r\n        },\r\n    } as const;\r\n};\r\n// Thunks\r\nexport const getPacksTC =\r\n    (): ThunkType => (dispatch, getState: () => AppStore) => {\r\n        const {\r\n            currentPage,\r\n            pageCount,\r\n            searchPacks,\r\n            minCardsCount,\r\n            maxCardsCount,\r\n            myPage,\r\n        } = getState().packs;\r\n        const userId = myPage ? getState().profile.userId : \"\";\r\n\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n\r\n        packsAPI\r\n            .getPacks(\r\n                currentPage,\r\n                pageCount,\r\n                searchPacks,\r\n                userId,\r\n                minCardsCount,\r\n                maxCardsCount\r\n            )\r\n            .then((res) => {\r\n                dispatch(setPacksAC(res.data.cardPacks));\r\n                dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount));\r\n                dispatch(setRangeValuesAC(minCardsCount, maxCardsCount));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const addPackTC =\r\n    (newPackName: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .addPack(newPackName)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const removePackTC =\r\n    (packId: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .deletePack(packId)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const updatePackTC =\r\n    (packId: string, title: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .updatePack(packId, title)\r\n            .then((res) => {\r\n                dispatch(getPacksTC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\n// Types\r\nexport type ActionPacksTypes =\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setPacksTotalCountAC>\r\n    | ReturnType<typeof catchErrorAC>\r\n    | ReturnType<typeof setSearchPacksAC>\r\n    | ReturnType<typeof setRangeValuesAC>\r\n    | ReturnType<typeof setMyPageAC>\r\n    | ReturnType<typeof setCurrentPackIdAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    cardPacks: PackType[];\r\n    currentPage: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    userId: string;\r\n    packsId: string;\r\n    searchPacks: string;\r\n    myPage: boolean;\r\n};\r\nexport type PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    updated: Date;\r\n};\r\n","import { DetailedHTMLProps, Fragment, HTMLAttributes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\n\r\nexport const Backdrop: React.FC<ModalPropsType> = ({ onClose }) => {\r\n    return <div className={styles.backdrop} onClick={onClose} />;\r\n};\r\n\r\nexport const ModalOverlay: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return (\r\n        <div className={styles.modal}>\r\n            <div className={styles.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({ onClose, children }) => {\r\n    return (\r\n        <Fragment>\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <Backdrop onClose={onClose} />,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <ModalOverlay>{children}</ModalOverlay>,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\ntype ModalPropsType = DefaultDivPropsType & { onClose?: () => void };\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserInfoTC } from \"../../redux/profileReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangeUserInfo.module.css\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const ChangeUserInfo: React.FC<ChangeUserInfoPropsType> = ({\r\n    onClose,\r\n}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const handleInputUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(e.currentTarget.value);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if (name || url) {\r\n            dispatch(changeUserInfoTC(name, url));\r\n            setName(\"\");\r\n            setUrl(\"\");\r\n        }\r\n\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new name</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputNameChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={name}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter image url</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputUrlChange}\r\n                        name=\"url\"\r\n                        required\r\n                        value={url}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Submit\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChangeUserInfoPropsType = { onClose: () => void };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPacksTC, setMyPageAC } from \"../../redux/packsReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { ChangeUserInfo } from \"../changeUserInfo/ChangeUserInfo\";\r\nimport styles from \"../Profile/Profile.module.css\";\r\n\r\ntype PersonPropsType = {\r\n    photo?: string | null;\r\n    name?: string | null;\r\n    showModalHandler: () => void;\r\n    logoutHandler: () => void;\r\n    showModal: boolean;\r\n    hideModalHandler: () => void;\r\n};\r\n\r\nexport const Person = (props: PersonPropsType) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(setMyPageAC(false));\r\n        dispatch(getPacksTC());\r\n    }, [dispatch]);\r\n\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.showModal && (\r\n                <ChangeUserInfo onClose={props.hideModalHandler} />\r\n            )}\r\n\r\n            <div className={styles.infoBox}>\r\n                <img\r\n                    className={styles.avatar}\r\n                    src={\r\n                        props.photo == null\r\n                            ? \"https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png\"\r\n                            : props.photo\r\n                    }\r\n                    alt=\"avatar\"\r\n                />\r\n                <h3>{props.name}</h3>\r\n                <h4 onClick={props.showModalHandler}>Edit profile</h4>\r\n                <Button\r\n                    disabled={status === \"loading\"}\r\n                    onClick={props.logoutHandler}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n// import {Slider} from \"@material-ui/core\";\r\nimport styles from \"./RangeUI.module.css\";\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void;\r\n    value: number[];\r\n    // min, max, step, disable, ...\r\n};\r\n\r\nconst RangeUi: React.FC<SuperDoubleRangePropsType> = ({\r\n                                                          onChangeRange,\r\n                                                          value,\r\n                                                      }) => {\r\n    const handleChange = (event: Event, newValue: number[] | number) => {\r\n        onChangeRange && onChangeRange(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Slider\r\n                className={styles.Slider}\r\n                color={\"primary\"}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"on\"\r\n                sx={{\r\n                    color: \"#21268F\",\r\n                    \"& .MuiSlider-thumb\": {\r\n                        backgroundColor: \"#21268F\",\r\n                    },\r\n                    \".css-eg0mwd-MuiSlider-thumb::after\": {\r\n                        backgroundColor: \"white\",\r\n                        width: 10,\r\n                        height: 10,\r\n                    },\r\n                    \".css-1kz0hui-MuiSlider-valueLabel.MuiSlider-valueLabelOpen\":\r\n                        {\r\n                            backgroundColor: \"#21268F\",\r\n                            width: 35,\r\n                            height: 25,\r\n                            top: -2,\r\n                        },\r\n                    \".css-1kz0hui-MuiSlider-valueLabel:before\": {\r\n                        width: 0,\r\n                        height: 0,\r\n                    },\r\n                    \".css-14pt78w-MuiSlider-rail\": {\r\n                        backgroundColor: \"#21268F\",\r\n                        opacity: 0.5,\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RangeUi;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./ErrorMes.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\n\r\nexport const ErrorMes: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return <div className={styles.error}>{children}</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = (props) => {\r\n    const {\r\n        currentItem,\r\n        itemCount,\r\n        totalItemCount,\r\n        onChangeItemHandler,\r\n        portionSize,\r\n    } = props;\r\n    let pagesCount = Math.ceil(totalItemCount / itemCount);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && (\r\n                <FaAngleLeft\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1);\r\n                    }}\r\n                >\r\n                    Previous\r\n                </FaAngleLeft>\r\n            )}\r\n\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            key={p}\r\n                            className={\r\n                                currentItem === p ? styles.selectedPage : \"\"\r\n                            }\r\n                            onClick={() => {\r\n                                onChangeItemHandler(p);\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    );\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <FaAngleRight\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1);\r\n                    }}\r\n                >\r\n                    Next\r\n                </FaAngleRight>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type PaginatorPropsType = {\r\n    currentItem: number;\r\n    itemCount: number;\r\n    totalItemCount: number;\r\n    portionSize: number;\r\n    onChangeItemHandler: (page: number) => void;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-cards.3f95abc0.svg\";","export let trimString = function (string: string, length: number) {\r\n    return string.length > length\r\n        ? string.substring(0, length) + \"...\"\r\n        : string;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/puff.cf50e627.svg\";","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport loader from \"./../../assets/images/puff.svg\";\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n    const portalElement = document.getElementById(\"overlays\");\r\n    return (\r\n        <Fragment>\r\n            {portalElement &&\r\n                ReactDOM.createPortal(\r\n                    <div className={styles.backdrop}>\r\n                        <img\r\n                            className={styles.img}\r\n                            src={loader}\r\n                            alt=\"loading\"\r\n                        />\r\n                    </div>,\r\n                    portalElement\r\n                )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// {\r\n//   <img className={styles.img} src={loader} alt=\"loading\" />\r\n// }\r\n","import { cardsAPI } from \"../api/api\";\r\nimport { catchErrorAC, setAppStatusAC } from \"./appReducer\";\r\nimport { AppStore, ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    cards: [\r\n        {\r\n            _id: \"\",\r\n            cardsPack_id: \"\",\r\n            answer: \"\",\r\n            question: \"\",\r\n            grade: 0,\r\n            shots: 0,\r\n            rating: 0,\r\n            updated: new Date(),\r\n        },\r\n    ],\r\n    cardPackId: \"\",\r\n    cardId: \"\",\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    cardsCount: 0,\r\n    packUserId: \"\",\r\n    cardGrade: 0,\r\n};\r\n\r\nexport const cardsReducer = (\r\n    state: AppInitialStateType = initialState,\r\n    action: ActionCardsTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: action.payload.cards.map((p) => p),\r\n            };\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n            };\r\n        case \"SET_CARDS_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                cardsCount: action.payload.cardsCount,\r\n            };\r\n        case \"SET_USER_ID\":\r\n            return {\r\n                ...state,\r\n                packUserId: action.payload.userId,\r\n            };\r\n        case \"SET_CARDS_GRADE\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((c) => {\r\n                    if (c._id === action.payload.card_id) {\r\n                        return { ...c, grade: action.payload.grade };\r\n                    } else {\r\n                        return c;\r\n                    }\r\n                }),\r\n            };\r\n        case \"SET_CURRENT_CARD_ID\":\r\n            return {\r\n                ...state,\r\n                cardId: action.payload.cardId,\r\n            };\r\n        case \"SET_CURRENT_CARD_GRADE\":\r\n            return {\r\n                ...state,\r\n                cardGrade: action.payload.cardGrade,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setCardsAC = (cards: CardType[]) => {\r\n    return { type: \"SET_CARDS\", payload: { cards } } as const;\r\n};\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_PAGE\",\r\n        payload: {\r\n            currentPage,\r\n        },\r\n    } as const;\r\n};\r\nexport const setUserIdAC = (userId: string) => {\r\n    return {\r\n        type: \"SET_USER_ID\",\r\n        payload: {\r\n            userId,\r\n        },\r\n    } as const;\r\n};\r\nexport const setCardsCountAC = (cardsCount: number) => {\r\n    return {\r\n        type: \"SET_CARDS_TOTAL_COUNT\",\r\n        payload: {\r\n            cardsCount,\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setCardsGradeAC = (card_id: string, grade: number) => {\r\n    return {\r\n        type: \"SET_CARDS_GRADE\",\r\n        payload: {\r\n            card_id,\r\n            grade,\r\n        },\r\n    } as const;\r\n};\r\nexport const setCurrentCardIdAC = (cardId: string) => {\r\n    return {\r\n        type: \"SET_CURRENT_CARD_ID\",\r\n        payload: {\r\n            cardId,\r\n        },\r\n    } as const;\r\n};\r\nexport const setCurrentCardGradeAC = (cardGrade: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_CARD_GRADE\",\r\n        payload: {\r\n            cardGrade,\r\n        },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const getCardsTC =\r\n    (packId: string): ThunkType =>\r\n    (dispatch, getState: () => AppStore) => {\r\n        const cards = getState().cards;\r\n        const currentPage = cards.currentPage;\r\n        const pageCount = cards.pageCount;\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .getCards(packId, currentPage, pageCount)\r\n            .then((res) => {\r\n                dispatch(setCardsAC(res.data.cards));\r\n                dispatch(setUserIdAC(res.data.packUserId));\r\n                dispatch(setCardsCountAC(res.data.cardsTotalCount));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const addCardTC =\r\n    (cardsPackId: string, question: string, answer: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .addCard(cardsPackId, question, answer)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const deleteCardTC =\r\n    (cardId: string, cardsPackId: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .deleteCard(cardId)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const updateCardTC =\r\n    (\r\n        cardId: string,\r\n        cardsPackId: string,\r\n        question: string,\r\n        answer: string,\r\n        grade: number\r\n    ): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .updateCard(cardId, question, answer)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n                dispatch(setCardsGradeAC(cardId, grade));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\n// Types\r\nexport type ActionCardsTypes =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setCardsCountAC>\r\n    | ReturnType<typeof setUserIdAC>\r\n    | ReturnType<typeof setCardsGradeAC>\r\n    | ReturnType<typeof setCurrentCardIdAC>\r\n    | ReturnType<typeof setCurrentCardGradeAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    cards: CardType[];\r\n    currentPage: number;\r\n    pageCount: number;\r\n    cardsCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    packUserId: string;\r\n    cardId: string;\r\n    cardPackId: string;\r\n    cardGrade: number;\r\n};\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n    rating: number;\r\n    updated: Date | string;\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport { updatePackTC } from \"../../redux/packsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangePack.module.css\";\r\n\r\nexport const ChangePack: React.FC<ChagePackModalPropsType> = ({\r\n    onClose,\r\n    packId,\r\n}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updatePackTC(packId, title));\r\n        onClose();\r\n        setTimeout(() => {\r\n            dispatch(catchErrorAC(\"\"));\r\n        }, 2000);\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new pack title</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"question\"\r\n                        required\r\n                        value={title}\r\n                    />\r\n                </label>\r\n\r\n                <div className={styles.btnsWrapper}>\r\n                    <Button purple onClick={onClose} className={styles.btn}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitHandler} className={styles.btn}>\r\n                        Save\r\n                    </Button>\r\n                    <div>\r\n                        <FaTimes onClick={onClose} className={styles.icon} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChagePackModalPropsType = {\r\n    onClose: () => void;\r\n    packId: string;\r\n};\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./DeletePackModal.module.css\";\r\n\r\nexport const DeletePackModal: React.FC<DeleteModalPropsType> = ({\r\n    onClose,\r\n    onDelete,\r\n}) => {\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <h2>Delete Pack</h2>\r\n                <p>Do you really want to remove this Pack?</p>\r\n\r\n                <div className={styles.btnsWrapper}>\r\n                    <Button purple onClick={onClose} className={styles.btn}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button red onClick={onDelete} className={styles.btn}>\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n// Types\r\ntype DeleteModalPropsType = {\r\n    onClose: () => void;\r\n    onDelete: () => void;\r\n};\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./DeleteCardModal.module.css\";\r\n\r\nexport const DeleteCardModal: React.FC<DeleteModalPropsType> = ({\r\n    onClose,\r\n    onDelete,\r\n}) => {\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <h2>Delete Pack</h2>\r\n                <p>Do you really want to remove this Pack?</p>\r\n\r\n                <div className={styles.btnsWrapper}>\r\n                    <Button purple onClick={onClose} className={styles.btn}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button red onClick={onDelete} className={styles.btn}>\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n// Types\r\ntype DeleteModalPropsType = {\r\n    onClose: () => void;\r\n    onDelete: () => void;\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport { updateCardTC } from \"../../redux/cardsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./UpdateCard.module.css\";\r\n\r\nexport const UpdateCard: React.FC<UpdateModalPropsType> = ({\r\n    onClose,\r\n    cardId,\r\n    cardsPackId,\r\n    grade,\r\n}) => {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const handleQuestionInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value);\r\n    };\r\n    const handleAnswerInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateCardTC(cardId, cardsPackId, question, answer, grade));\r\n        onClose();\r\n        setTimeout(() => {\r\n            dispatch(catchErrorAC(\"\"));\r\n        }, 2000);\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new question</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleQuestionInputChange}\r\n                        name=\"question\"\r\n                        required\r\n                        value={question}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter new answer</span>\r\n                    <br />\r\n\r\n                    <Input\r\n                        onChange={handleAnswerInputChange}\r\n                        name=\"answer\"\r\n                        required\r\n                        value={answer}\r\n                    />\r\n                </label>\r\n                <div className={styles.btnsWrapper}>\r\n                    <Button purple onClick={onClose} className={styles.btn}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitHandler} className={styles.btn}>\r\n                        Save\r\n                    </Button>\r\n                    <div>\r\n                        <FaTimes onClick={onClose} className={styles.icon} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n    cardId: string;\r\n    cardsPackId: string;\r\n    grade: number;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    PackType,\r\n    removePackTC,\r\n    setCurrentPackIdAC,\r\n} from \"../../redux/packsReducer\";\r\nimport styles from \"./Table.module.css\";\r\nimport cardsIcon from \"./../../assets/images/icon-cards.svg\";\r\nimport { trimString } from \"./../../helpers/helpers\";\r\nimport { Preloader } from \"../../UI-kit/Preloader/Preloader\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport {\r\n    CardType,\r\n    deleteCardTC,\r\n    setCurrentCardGradeAC,\r\n    setCurrentCardIdAC,\r\n} from \"../../redux/cardsReducer\";\r\nimport { ChangePack } from \"../Packs/ChangePack\";\r\nimport { DeletePackModal } from \"../Packs/DeletePackModal\";\r\nimport { DeleteCardModal } from \"../Cards/DeleteCardModal\";\r\nimport { UpdateCard } from \"../Cards/UpdateCard\";\r\n\r\nexport const Table: React.FC<TablePropsType> = ({ headers, packs, cards }) => {\r\n    const dispatch = useDispatch();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const userId = useSelector((state: AppStore) => state.profile.profile._id);\r\n    const userIdFromCards = useSelector(\r\n        (state: AppStore) => state.cards.packUserId\r\n    );\r\n    const packId = useSelector((state: AppStore) => state.packs.packsId);\r\n    const cardId = useSelector((state: AppStore) => state.cards.cardId);\r\n    const cardGrade = useSelector((state: AppStore) => state.cards.cardGrade);\r\n    const getLocalTime = (value: Date | string) =>\r\n        new Intl.DateTimeFormat().format(new Date(value));\r\n    const [showPackChangeModal, setShowPackChangeModal] = useState(false);\r\n    const [showPackDeleteModal, setShowPackDeleteModal] = useState(false);\r\n    const [showCardDeleteModal, setShowCardDeleteModal] = useState(false);\r\n    const [showCardUpdateModal, setShowCardUpdateModal] = useState(false);\r\n\r\n    // Get packs table body\r\n    const renderPacks = (packs: PackType[]) => {\r\n        return packs.map((pack) => {\r\n            return (\r\n                <tr key={pack._id}>\r\n                    <td>{trimString(pack.name, 20)}</td>\r\n                    <td>{pack.cardsCount}</td>\r\n                    <td>{trimString(getLocalTime(pack.updated), 20)}</td>\r\n                    <td>{trimString(pack.user_name, 22)}</td>\r\n                    <td className={styles.narrow}>\r\n                        <NavLink to={`/profile/cards/${pack._id}`}>\r\n                            <img src={cardsIcon} alt=\"cards\" />\r\n                        </NavLink>\r\n                    </td>\r\n                    <td className={styles.narrow}>\r\n                        <NavLink\r\n                            to={`packs/lern/${pack._id}`}\r\n                            className={styles.btn}\r\n                        >\r\n                            Learn\r\n                        </NavLink>\r\n                    </td>\r\n                    <td className={styles.narrow}>\r\n                        {pack.user_id === userId ? (\r\n                            <button\r\n                                className={`${styles.btn} ${styles.deleteBtn}`}\r\n                                onClick={() => {\r\n                                    setShowPackDeleteModal(true);\r\n                                    dispatch(setCurrentPackIdAC(pack._id));\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </td>\r\n                    <td className={styles.narrow}>\r\n                        {pack.user_id === userId ? (\r\n                            <button\r\n                                className={styles.btn}\r\n                                onClick={() => {\r\n                                    dispatch(setCurrentPackIdAC(pack._id));\r\n                                    setShowPackChangeModal(true);\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    // Get cards table body\r\n    const renderCards = (cards: CardType[]) => {\r\n        return cards.map((card) => (\r\n            <tr key={card._id}>\r\n                <td>{trimString(card.question, 10)}</td>\r\n                <td>{card.answer}</td>\r\n                <td>{trimString(getLocalTime(card.updated), 10)}</td>\r\n                <td>{card.grade}</td>\r\n                <td>\r\n                    {userIdFromCards === userId ? (\r\n                        <button\r\n                            className={`${styles.btn} ${styles.deleteBtn}`}\r\n                            onClick={() => {\r\n                                dispatch(setCurrentCardIdAC(card._id));\r\n                                dispatch(setCurrentPackIdAC(card.cardsPack_id));\r\n                                setShowCardDeleteModal(true);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    <>\r\n                        {userIdFromCards === userId ? (\r\n                            <button\r\n                                className={styles.btn}\r\n                                onClick={() => {\r\n                                    dispatch(setCurrentCardGradeAC(card.grade));\r\n                                    dispatch(setCurrentCardIdAC(card._id));\r\n                                    dispatch(\r\n                                        setCurrentPackIdAC(card.cardsPack_id)\r\n                                    );\r\n                                    setShowCardUpdateModal(true);\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </>\r\n                </td>\r\n            </tr>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <table className={styles.table}>\r\n            {status === \"loading\" && <Preloader />}\r\n            {showPackDeleteModal && (\r\n                <DeletePackModal\r\n                    onClose={() => {\r\n                        setShowPackDeleteModal(false);\r\n                    }}\r\n                    onDelete={() => {\r\n                        dispatch(removePackTC(packId));\r\n                        setTimeout(() => {\r\n                            dispatch(catchErrorAC(\"\"));\r\n                        }, 2000);\r\n                        setShowPackDeleteModal(false);\r\n                    }}\r\n                />\r\n            )}\r\n            {showPackChangeModal && (\r\n                <ChangePack\r\n                    onClose={() => {\r\n                        setShowPackChangeModal(false);\r\n                    }}\r\n                    packId={packId}\r\n                />\r\n            )}\r\n            {showCardDeleteModal && (\r\n                <DeleteCardModal\r\n                    onClose={() => {\r\n                        setShowCardDeleteModal(false);\r\n                    }}\r\n                    onDelete={() => {\r\n                        dispatch(deleteCardTC(cardId, packId));\r\n                        setTimeout(() => {\r\n                            dispatch(catchErrorAC(\"\"));\r\n                        }, 2000);\r\n                        setShowCardDeleteModal(false);\r\n                    }}\r\n                />\r\n            )}\r\n            {showCardUpdateModal && (\r\n                <UpdateCard\r\n                    onClose={() => {\r\n                        setShowCardUpdateModal(false);\r\n                    }}\r\n                    cardId={cardId}\r\n                    cardsPackId={packId}\r\n                    grade={cardGrade}\r\n                />\r\n            )}\r\n            <thead>\r\n                <tr>\r\n                    {headers.map((header, index) => {\r\n                        return header === \"Actions\" ? (\r\n                            <th\r\n                                className={styles.actions}\r\n                                scope=\"col\"\r\n                                key={index}\r\n                                colSpan={3}\r\n                            >\r\n                                {header}\r\n                            </th>\r\n                        ) : (\r\n                            <th scope=\"col\" key={index}>\r\n                                {header}\r\n                            </th>\r\n                        );\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {packs && renderPacks(packs)}\r\n                {cards && renderCards(cards)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n// Types\r\ntype TablePropsType = {\r\n    headers: string[];\r\n    packs?: PackType[];\r\n    cards?: CardType[];\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPackTC } from \"../../redux/packsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./AddPack.module.css\";\r\n\r\nexport const AddPack: React.FC<UpdateModalPropsType> = ({ onClose }) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(addPackTC(title));\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter pack's title</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={title}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Ok\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { catchErrorAC } from \"../../redux/appReducer\";\r\nimport {\r\n    getPacksTC,\r\n    setCurrentPageAC,\r\n    setMyPageAC,\r\n    setRangeValuesAC,\r\n    setSearchPacksAC,\r\n} from \"../../redux/packsReducer\";\r\nimport { setProfileIdAC } from \"../../redux/profileReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport RangeUI from \"../../UI-kit/RangeUI/RangeUI\";\r\nimport { ErrorMes } from \"../Error/ErrorMes\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\nimport { Table } from \"../Table/Table\";\r\nimport styles from \"./Packs.module.css\";\r\nimport { AddPack } from \"./AddPack\";\r\n\r\nexport const Packs = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [searchPack, setSearchPack] = useState(\"\");\r\n    const errorMessage = useSelector((state: AppStore) => state.app.error);\r\n    const packs = useSelector((state: AppStore) => state.packs.cardPacks);\r\n    const min = useSelector((state: AppStore) => state.packs.minCardsCount);\r\n    const max = useSelector((state: AppStore) => state.packs.maxCardsCount);\r\n    const pageCount = useSelector((state: AppStore) => state.packs.pageCount);\r\n    const myPage = useSelector((state: AppStore) => state.packs.myPage);\r\n    const totalPacksCount = useSelector(\r\n        (state: AppStore) => state.packs.cardPacksTotalCount\r\n    );\r\n    const currentPage = useSelector(\r\n        (state: AppStore) => state.packs.currentPage\r\n    );\r\n    const userId = useSelector((state: AppStore) => state.profile.profile._id);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const headers = [\r\n        \"Name\",\r\n        \"Count\",\r\n        \"Updated\",\r\n        \"Created By\",\r\n        \"Cards\",\r\n        \"Actions\",\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // dispatch(setProfileIdAC(\"\")); // not currently works btns all and my when goBack from cards page\r\n        dispatch(getPacksTC());\r\n\r\n        // setTimeout(() => {\r\n        //     dispatch(catchErrorAC(\"\")); // not currently works btns all and my when goBack from cards page\r\n        // }, 2000);\r\n    }, [dispatch]);\r\n\r\n    const onChangePageHandler = useCallback(\r\n        (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n            dispatch(getPacksTC());\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const callSetSearchPack = (value: string) => {\r\n        setSearchPack(value);\r\n        dispatch(setSearchPacksAC(searchPack));\r\n    };\r\n\r\n    const getMyPacksHandler = () => {\r\n        dispatch(setProfileIdAC(userId));\r\n        dispatch(setMyPageAC(true));\r\n        dispatch(getPacksTC());\r\n    };\r\n\r\n    const getAllPacksHandler = () => {\r\n        dispatch(setProfileIdAC(\"\"));\r\n        dispatch(setMyPageAC(false));\r\n        dispatch(getPacksTC());\r\n    };\r\n\r\n    const [value, setValue] = useState<number[]>([min, max]);\r\n\r\n    const onChangeSuperDoubleRange = useCallback(\r\n        (value: number[]) => {\r\n            dispatch(setRangeValuesAC(value[0], value[1]));\r\n            setValue(value);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n                {showModal && (\r\n                    <AddPack\r\n                        onClose={() => {\r\n                            setShowModal(false);\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className={styles.sidebar}>\r\n                    <h3>Show packs cards</h3>\r\n                    <div className={styles.btnWrapper}>\r\n                        <button\r\n                            onClick={getMyPacksHandler}\r\n                            className={myPage === true ? `${styles.sideBtn} ${styles.active}` : styles.sideBtn}\r\n                            disabled={myPage === true ? true : false}\r\n                        >\r\n                            My\r\n                        </button>\r\n                        <button\r\n                            onClick={getAllPacksHandler}\r\n                            className={myPage === false ? `${styles.sideBtn} ${styles.active}` : styles.sideBtn}\r\n                            disabled={myPage === false ? true : false}\r\n                        >\r\n                            All\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={styles.sliderComponent}>\r\n                        <h3>Number of cards</h3>\r\n                        <div className={styles.sliderWrapper}>\r\n                            <RangeUI\r\n                                value={value}\r\n                                onChangeRange={onChangeSuperDoubleRange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.packsList}>\r\n                    <h1>Packs List</h1>\r\n                    <div className={styles.search}>\r\n                        <div className={styles.fieldGroup}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search...\"\r\n                                onChange={(e) =>\r\n                                    callSetSearchPack(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                            <Button\r\n                                className={styles.searchBtn}\r\n                                onClick={() => dispatch(getPacksTC())}\r\n                            >\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className={styles.btnsWrapper}>\r\n                            <Button\r\n                                className={styles.searchBtn}\r\n                                onClick={() => {\r\n                                    setShowModal(true);\r\n                                }}\r\n                            >\r\n                                Add new pack\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.tableWrapper}>\r\n                        <Table headers={headers} packs={packs} />\r\n                        <Paginator\r\n                            currentItem={currentPage}\r\n                            itemCount={pageCount}\r\n                            totalItemCount={totalPacksCount}\r\n                            portionSize={10}\r\n                            onChangeItemHandler={onChangePageHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype NavLinksTestType = {\r\n    path: string;\r\n    text: string;\r\n};\r\n\r\ntype PropsType = HTMLAttributes<HTMLElement> & {\r\n    arrayLinks: NavLinksTestType[];\r\n    testPage?: boolean;\r\n    profilePage?: boolean;\r\n};\r\n\r\nexport const Header: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <header className={props.className}>\r\n            {props.testPage &&\r\n                props.arrayLinks.map((l, i) => (\r\n                    <NavLink key={i} to={l.path}>\r\n                        {l.text}\r\n                    </NavLink>\r\n                ))}\r\n\r\n            {props.profilePage && (\r\n                <div className=\"container inner-header\">\r\n                    <h1>It-incubator</h1>\r\n                    <nav className=\"profile-nav\">\r\n                        {props.arrayLinks.map((l, i) => (\r\n                            <NavLink\r\n                                key={i}\r\n                                activeClassName={\"active\"}\r\n                                to={l.path}\r\n                            >\r\n                                {l.text}\r\n                            </NavLink>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            )}\r\n        </header>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCardTC } from \"../../redux/cardsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./AddCard.module.css\";\r\n\r\nexport const AddCard: React.FC<UpdateModalPropsType> = ({\r\n    onClose,\r\n    packId,\r\n}) => {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const handleQuestionInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value);\r\n    };\r\n    const handleAnswerInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(addCardTC(packId, question, answer));\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter question</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleQuestionInputChange}\r\n                        name=\"question\"\r\n                        required\r\n                        value={question}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter answer</span>\r\n                    <br />\r\n\r\n                    <Input\r\n                        onChange={handleAnswerInputChange}\r\n                        name=\"answer\"\r\n                        required\r\n                        value={answer}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Ok\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n    packId: string;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport { getCardsTC, setCurrentPageAC } from \"../../redux/cardsReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { ErrorMes } from \"../Error/ErrorMes\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\nimport { Table } from \"../Table/Table\";\r\nimport { AddCard } from \"./AddCard\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch();\r\n    const { packId } = useParams<PackParamsType>();\r\n    const userId = useSelector((state: AppStore) => state.profile.profile._id);\r\n    const userIdFromCards = useSelector(\r\n        (state: AppStore) => state.cards.packUserId\r\n    );\r\n    const totalPacksCount = useSelector(\r\n        (state: AppStore) => state.cards.cardsCount\r\n    );\r\n    const currentPage = useSelector(\r\n        (state: AppStore) => state.cards.currentPage\r\n    );\r\n\r\n    const pageCount = useSelector((state: AppStore) => state.cards.pageCount);\r\n    const onChangePageHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber));\r\n        dispatch(getCardsTC(packId));\r\n    };\r\n\r\n    const cards = useSelector((state: AppStore) => state.cards.cards);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const errorMessage = useSelector((state: AppStore) => state.app.error);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(packId));\r\n        setTimeout(() => {\r\n            dispatch(catchErrorAC(\"\"));\r\n        }, 3000);\r\n    }, [dispatch, packId]);\r\n\r\n    const headers = [\r\n        \"Question\",\r\n        \"Answer\",\r\n        \"Last Updated\",\r\n        \"Grade\",\r\n        \"Actions\",\r\n        \"\",\r\n    ];\r\n\r\n    const history = useHistory();\r\n\r\n    const handleGoBackClick = (\r\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n    ) => {\r\n        event.preventDefault();\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n            {showModal && (\r\n                <AddCard\r\n                    onClose={() => {\r\n                        setShowModal(false);\r\n                    }}\r\n                    packId={packId}\r\n                />\r\n            )}\r\n\r\n            <div className={styles.content}>\r\n                <div className={styles.goback} onClick={handleGoBackClick}>\r\n                    <svg\r\n                        width={25}\r\n                        height={25}\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 448 512\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"\r\n                        ></path>\r\n                    </svg>\r\n                    GoBack\r\n                </div>\r\n                {userId === userIdFromCards && (\r\n                    <Button\r\n                        className={styles.btn}\r\n                        onClick={() => {\r\n                            setShowModal(true);\r\n                        }}\r\n                    >\r\n                        Add card\r\n                    </Button>\r\n                )}\r\n                <Card className={styles.wrapper}>\r\n                    {cards.length === 0 ? (\r\n                        <div className={styles.empty}>\r\n                            <h2>There is no cards in this pack</h2>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Table headers={headers} cards={cards} />\r\n                            <Paginator\r\n                                currentItem={currentPage}\r\n                                itemCount={pageCount}\r\n                                totalItemCount={totalPacksCount}\r\n                                portionSize={10}\r\n                                onChangeItemHandler={onChangePageHandler}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Card>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n// Types\r\n\r\ntype PackParamsType = {\r\n    packId: string;\r\n};\r\n","import { styled } from '@mui/material/styles';\r\nimport Radio, { RadioProps } from '@mui/material/Radio';\r\nimport { Card, CardActions, FormControl, FormControlLabel, FormLabel, RadioGroup } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { CardType, getCardsTC } from \"../../redux/cardsReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport styles from \"./Learn.module.css\";\r\n\r\nconst grades = [\"Did not know\", \"Forgot\", \"A lot of thought\", \"Сonfused\", \"Knew the answer\"];\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce(\r\n        (acc, card) => acc + (6 - card.grade) * (6 - card.grade),\r\n        0\r\n    );\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce(\r\n        (acc: { sum: number; id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id};\r\n        },\r\n        {sum: 0, id: -1}\r\n    );\r\n    console.log(\"test: \", sum, rand, res);\r\n\r\n    return cards[res.id + 1];\r\n};\r\n\r\nexport const Learn = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const {cards} = useSelector((state: AppStore) => state.cards);\r\n    const {cardPacks} = useSelector((state: AppStore) => state.packs);\r\n    const {packId} = useParams<ParamsType>();\r\n    const history = useHistory();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n\r\n    const currentPack = cardPacks.filter(p => p._id === packId)\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: \"fake\",\r\n        cardsPack_id: \"\",\r\n        answer: \"answer fake\",\r\n        question: \"question fake\",\r\n        grade: 0,\r\n        shots: 0,\r\n        rating: 0,\r\n        updated: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log(\"LearnContainer useEffect\");\r\n\r\n        if (first) {\r\n            dispatch(getCardsTC(packId));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log(\"cards\", cards);\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log(\"LearnContainer useEffect off\");\r\n        };\r\n    }, [dispatch, packId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n        }\r\n    };\r\n\r\n    // customize Radio-button\r\n    const BpIcon = styled('span')(({theme}) => ({\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow:\r\n            theme.palette.mode === 'dark'\r\n                ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n                : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\r\n        backgroundImage:\r\n            theme.palette.mode === 'dark'\r\n                ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\r\n                : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '.Mui-focusVisible &': {\r\n            outline: '2px auto rgba(19,124,189,.6)',\r\n            outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\r\n        },\r\n        'input:disabled ~ &': {\r\n            boxShadow: 'none',\r\n            background:\r\n                theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\r\n        },\r\n    }));\r\n\r\n    const BpCheckedIcon = styled(BpIcon)({\r\n        backgroundColor: '#21268f',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n            display: 'block',\r\n            width: 16,\r\n            height: 16,\r\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n            content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#21268f',\r\n        },\r\n    });\r\n\r\n// Inspired by blueprintjs\r\n    function BpRadio(props: RadioProps) {\r\n        return (\r\n            <Radio\r\n                sx={{\r\n                    '&:hover': {\r\n                        bgcolor: 'transparent',\r\n                    },\r\n                }}\r\n                disableRipple\r\n                color=\"default\"\r\n                checkedIcon={<BpCheckedIcon />}\r\n                icon={<BpIcon />}\r\n                {...props}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card className={styles.card} sx={{maxWidth: 413, minHeight: 300, margin: \"100px auto\"}}>\r\n            <h2>Learn “ {currentPack[0].name} ”</h2>\r\n            {card.question === \"question fake\"\r\n                ?\r\n                <p style={{textAlign: \"center\"}}><b>No questions in this Pack!!!</b></p>\r\n                :\r\n                <p><b>Question</b>: “ {card.question} “</p>\r\n            }\r\n\r\n\r\n            {!isChecked && <CardActions className={styles.actions}>\r\n                <Button\r\n                    className={styles.cancelBtn}\r\n                    style={card.question === \"question fake\" ? {margin: \"0 auto\"} : {margin: \"0\"}}\r\n                    purple\r\n                    onClick={() => {\r\n                        history.goBack();\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                {card.question !== \"question fake\" && <Button onClick={() => setIsChecked(true)}>check</Button>}\r\n            </CardActions>}\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <p><b>Answer</b>: “ {card.answer} “</p>\r\n\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel className={styles.legend} component=\"legend\">Rate yourself:</FormLabel>\r\n\r\n                        <RadioGroup\r\n                            aria-label=\"Rate\"\r\n                            defaultValue=\"Knew the answer\"\r\n                            name=\"radio-buttons-group\"\r\n                        >\r\n\r\n                            {grades.map((g, i) => (\r\n                                <FormControlLabel key={i} value={g} control={<BpRadio />} label={g} />\r\n                            ))}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                    <CardActions className={styles.actions}>\r\n                        <Button\r\n                            className={styles.cancelBtn}\r\n                            purple\r\n                            onClick={() => {\r\n                                history.goBack();\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            className={styles.registerBtn}\r\n                            onClick={onNext}\r\n                            disabled={status === \"loading\"}\r\n                        >\r\n                            next\r\n                        </Button>\r\n                    </CardActions>\r\n                </>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\n//Types\r\ntype ParamsType = {\r\n    packId: string;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { logoutThunk } from \"../../redux/loginReducer\";\r\nimport { navLinksProfile, PATH } from \"../Routes/Routes\";\r\nimport { Person } from \"../Person/Person\";\r\nimport { Packs } from \"../Packs/Packs\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { Cards } from \"../Cards/Cards\";\r\nimport { Learn } from \"../Lern/Learn\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((state: AppStore) => state.login.isAuth);\r\n    const name = useSelector((state: AppStore) => state.profile.profile?.name);\r\n    const photo = useSelector(\r\n        (state: AppStore) => state.profile.profile?.avatar\r\n    );\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n    const logoutHandler = () => {\r\n        dispatch(logoutThunk());\r\n    };\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksProfile}\r\n                className={styles.header}\r\n                profilePage\r\n            />\r\n\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => (\r\n                        <Person\r\n                            photo={photo}\r\n                            name={name}\r\n                            showModalHandler={showModalHandler}\r\n                            logoutHandler={logoutHandler}\r\n                            showModal={showModal}\r\n                            hideModalHandler={hideModalHandler}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS}\r\n                    render={() => <Packs />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Cards />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS_LEARN}\r\n                    render={() => <Learn />}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport styles from \"./Register.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerFailureAC, registerUserTC } from \"../../redux/registerReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { ErrorMes } from \"../Error/ErrorMes\";\r\n\r\nexport const Register = () => {\r\n    const [user, setUser] = useState<InitialValuesType>({\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setUser({\r\n            ...user,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n    const isRegistered = useSelector(\r\n        (state: AppStore) => state.register.isRegistered\r\n    );\r\n    const errorMessage = useSelector((state: AppStore) => state.register.error);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    function handleSubmit(e: MouseEvent<HTMLElement>) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (\r\n            user.email &&\r\n            user.createPassword &&\r\n            user.confirmPassword &&\r\n            user.createPassword === user.confirmPassword\r\n        ) {\r\n            dispatch(registerUserTC(user.email, user.createPassword));\r\n            setUser({ email: \"\", createPassword: \"\", confirmPassword: \"\" });\r\n            setTimeout(() => {\r\n                dispatch(registerFailureAC(\"\"));\r\n            }, 2000);\r\n            setSubmitted(false);\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div>\r\n            {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n            <div className={styles.wrapper}>\r\n                <Card className={styles.register}>\r\n                    <h1>It-incubator</h1>\r\n\r\n                    <div className={styles.formWrapper}>\r\n                        <form>\r\n                            <h2>Sign Up</h2>\r\n                            <div className={styles.formGroup}>\r\n                                <label>\r\n                                    <span>Email</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        value={user.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.email &&\r\n                                        \"Email is required\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"createPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.createPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.createPassword &&\r\n                                        \"Password is required.\"}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Confirm Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.confirmPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        user.confirmPassword !==\r\n                                            user.createPassword &&\r\n                                        user.confirmPassword.length > 1 &&\r\n                                        \"Passwords do not match.\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.confirmPassword &&\r\n                                        \"You should confirm your password.\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                            >\r\n                                <Button\r\n                                    className={styles.cancelBtn}\r\n                                    purple\r\n                                    onClick={() => {\r\n                                        history.goBack();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className={styles.registerBtn}\r\n                                    type={\"submit\"}\r\n                                    onClick={handleSubmit}\r\n                                    disabled={status === \"loading\"}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//Types\r\nexport type InitialValuesType = {\r\n    email: string;\r\n    createPassword: string;\r\n    confirmPassword: string;\r\n};\r\n","import React, {\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    HTMLAttributes,\r\n    useState,\r\n} from \"react\";\r\n\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n>;\r\n\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLSpanElement>,\r\n    HTMLSpanElement\r\n>;\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string;\r\n    spanProps?: DefaultSpanPropsType;\r\n};\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = ({\r\n    autoFocus,\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n    ...restProps\r\n}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const { children, onDoubleClick, className, ...restSpanProps } =\r\n        spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false);\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (\r\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n    ) => {\r\n        setEditMode(true);\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode ? (\r\n                <Input\r\n                    autoFocus\r\n                    onBlur={onBlurCallback}\r\n                    onEnter={onEnterCallback}\r\n                    {...restProps}\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onDoubleClickCallBack}\r\n                    className={spanClassName}\r\n                    {...restSpanProps}\r\n                >\r\n                    <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\r\n                    {children || restProps.value}\r\n                </span>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport s from \"./Radio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Radio: React.FC<RadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            className={s.optionInput}\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <div className={s.customRadios}>{mappedOptions}</div>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport s from \"./Select.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => {\r\n        return <option key={i}>{o}</option>;\r\n      })\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n    console.log(\"select \" + e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.select}>\r\n      <select onChange={onChangeCallback} {...restProps}>\r\n        {mappedOptions}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport styles from \"./Range.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n  onChangeRange?: (value: number) => void;\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n  value,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  // const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.sliderTrack}></div>\r\n        <input\r\n          type={\"range\"}\r\n          className={styles.doubleRange}\r\n          onChange={onChangeCallback}\r\n          {...restProps}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport styles from \"./TestPage.module.css\";\r\nimport { navLinksTest } from \"../Routes/Routes\";\r\n\r\nexport const TestPage = () => {\r\n    const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const [rangeValue, setRangeValue] = useState(50);\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>();\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(e.currentTarget.checked);\r\n    };\r\n    const changeHandler = (value: number) => {\r\n        setRangeValue(value);\r\n    };\r\n    const login = () => {\r\n        authAPI\r\n            .login(\"nya-admn@nya.nya\", \"1qazxcvBG\", true)\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const me = () => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const register = () => {\r\n        authAPI\r\n            .register(\"blabla00000@nya.nya\", \"1qazxcvBG\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const changeInfo = () => {\r\n        authAPI\r\n            .changeInfo(\"New Name\", \"https://i.mydramalist.com/67r8d_5_c.jpg\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const logout = () => {\r\n        authAPI\r\n            .logout()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const forgotPassword = () => {\r\n        authAPI\r\n            .forgotPassword(\"blabla@nya.nya\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksTest}\r\n                className={styles.header}\r\n                testPage\r\n            />\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    height: \"80vh\",\r\n                    marginTop: \"5rem\",\r\n                }}\r\n            >\r\n                <Button>button</Button>\r\n                <Checkbox checked={checked} onChange={testOnChange} />\r\n                <EditableSpan />\r\n                <Radio\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <Input />\r\n                <span style={{ fontSize: \"1.7rem\" }}>{rangeValue}</span>\r\n                <Range onChangeRange={changeHandler} value={rangeValue} />\r\n                <Select\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={styles.requestsWrapper}>\r\n                    <Button onClick={login}>Login Request</Button>\r\n                    <Button onClick={register}>Register</Button>\r\n                    <Button onClick={me}>Show User</Button>\r\n                    <Button onClick={changeInfo}>Change Info</Button>\r\n                    <Button onClick={logout}>Logout</Button>\r\n                    <Button onClick={forgotPassword}>Forgot Password</Button>\r\n                </div>\r\n                <div style={{ width: \"800px\" }}>{response}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { CheckEmail } from \"../CheckEmail/CheckEmail\";\r\nimport { ErrorPage } from \"../ErrorPage/ErrorPage\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport { PasswordUpdate } from \"../PasswordUpdate/ParrwordUpdate\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { Register } from \"../Register/Register\";\r\nimport { TestPage } from \"../TestPage/TestPage\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    TEST: \"/test\",\r\n    PASSWORD_UPDATE: \"/password-update/:token\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    PROFILE: \"/profile\",\r\n    PROFILE_PERSON: \"/profile/person\",\r\n    PROFILE_PACKS: \"/profile/packs\",\r\n    PROFILE_PACKS_LEARN: \"/profile/packs/lern/:packId\",\r\n    PROFILE_CARDS: \"/profile/cards/:packId\",\r\n    REGISTER: \"/register\",\r\n    EMAIL_CHECK: \"/check-email\",\r\n    ERROR: \"/error-page\",\r\n};\r\n\r\nexport const navLinksProfile = [\r\n    { path: PATH.PROFILE_PACKS, text: \"Packs list\" },\r\n    { path: PATH.PROFILE_PERSON, text: \"Profile\" },\r\n];\r\n\r\nexport const navLinksTest = [\r\n    { path: PATH.LOGIN, text: \"Login\" },\r\n    { path: PATH.REGISTER, text: \"Register\" },\r\n    { path: PATH.PROFILE, text: \"Profile\" },\r\n    { path: PATH.PASSWORD_UPDATE, text: \"Update Password\" },\r\n    { path: PATH.PASSWORD_RECOVERY, text: \"Recovery Password\" },\r\n    { path: PATH.EMAIL_CHECK, text: \"Check Email\" },\r\n    { path: PATH.ERROR, text: \"ErrorPage\" },\r\n];\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={\"/\"}\r\n                    render={() => <Redirect to={PATH.LOGIN} />}\r\n                />\r\n                <Route exact path={PATH.TEST} render={() => <TestPage />} />\r\n                <Route exact path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route exact path={PATH.REGISTER} render={() => <Register />} />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS_LEARN}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_UPDATE}\r\n                    render={() => <PasswordUpdate />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_RECOVERY}\r\n                    render={() => <PasswordRecovery />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.EMAIL_CHECK}\r\n                    render={() => <CheckEmail />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route exact render={() => <ErrorPage />} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Routes from \"./components/Routes/Routes\";\r\nimport { initializeAppThunk } from \"./redux/appReducer\";\r\nimport { AppStore } from \"./redux/store\";\r\nimport { Preloader } from \"./UI-kit/Preloader/Preloader\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useSelector<AppStore, boolean>(\r\n        (state) => state.app.isInitialized\r\n    );\r\n\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppThunk());\r\n        }\r\n    }, [dispatch, isInitialized]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader />;\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                {status === \"loading\" && <Preloader />}\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes, appReducer } from \"./appReducer\";\r\nimport { ActionCardsTypes, cardsReducer } from \"./cardsReducer\";\r\nimport { ActionForgotTypes, forgotReducer } from \"./forgotReducer\";\r\nimport { ActionLoginTypes, loginReducer } from \"./loginReducer\";\r\nimport { ActionPacksTypes, packsReducer } from \"./packsReducer\";\r\nimport { ActionProfileTypes, profileReducer } from \"./profileReducer\";\r\nimport { ActionRegisterTypes, registerReducer } from \"./registerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof reducers>;\r\nexport type AppActionsType =\r\n    | ActionLoginTypes\r\n    | ActionProfileTypes\r\n    | ActionRegisterTypes\r\n    | ActionAppTypes\r\n    | ActionForgotTypes\r\n    | ActionPacksTypes\r\n    | ActionCardsTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Packs_wrapper__1Hyqu\",\"sidebar\":\"Packs_sidebar__b3wBY\",\"packsList\":\"Packs_packsList__3Hv6X\",\"avatar\":\"Packs_avatar__2rbUT\",\"search\":\"Packs_search__2nBBK\",\"fieldGroup\":\"Packs_fieldGroup__5jhXW\",\"tableWrapper\":\"Packs_tableWrapper__3pwPz\",\"btnWrapper\":\"Packs_btnWrapper__22AOc\",\"sideBtn\":\"Packs_sideBtn__18akZ\",\"active\":\"Packs_active__3E_Xo\",\"showPacksComponent\":\"Packs_showPacksComponent__oW-5S\",\"sliderComponent\":\"Packs_sliderComponent__KRnu6\",\"sliderWrapper\":\"Packs_sliderWrapper__2S3v-\",\"btnsWrapper\":\"Packs_btnsWrapper__25Ego\",\"searchBtn\":\"Packs_searchBtn__2y8Ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2nZF2\",\"login\":\"Login_login__3bGOo\",\"formGroup\":\"Login_formGroup__1mLpb\",\"formGroupButton\":\"Login_formGroupButton__36Uht\",\"formWrapper\":\"Login_formWrapper__3_vIr\",\"shapeIcon\":\"Login_shapeIcon__ttv2N\",\"formGroupPassword\":\"Login_formGroupPassword__3N_L9\",\"navLinkGroup\":\"Login_navLinkGroup__3UUe9\",\"formGroupCheckbox\":\"Login_formGroupCheckbox__1B3Wh\",\"error\":\"Login_error__3S8wI\",\"errorMessage\":\"Login_errorMessage__1eavA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Table_btn__2JHCv\",\"deleteBtn\":\"Table_deleteBtn__23Nnt\",\"narrow\":\"Table_narrow__3XKYg\",\"table\":\"Table_table__2hyAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__3Mzwm\",\"formGroup\":\"Register_formGroup__3NaLC\",\"formWrapper\":\"Register_formWrapper__W0pMq\",\"shapeIcon\":\"Register_shapeIcon__1HD9f\",\"formGroupPassword\":\"Register_formGroupPassword__2lXkl\",\"formGroupButton\":\"Register_formGroupButton__Wu6a-\",\"register\":\"Register_register__13bP2\",\"cancelBtn\":\"Register_cancelBtn__I6ssU\",\"registerBtn\":\"Register_registerBtn__kAj6a\",\"errorMessage\":\"Register_errorMessage__2XUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Password_wrapper__CwIC7\",\"login\":\"Password_login__2Kopu\",\"formGroup\":\"Password_formGroup__1r9mZ\",\"formGroupButton\":\"Password_formGroupButton__1CTkn\",\"formWrapper\":\"Password_formWrapper__xFoHs\",\"shapeIcon\":\"Password_shapeIcon__cEhkM\",\"formGroupEmail\":\"Password_formGroupEmail__3cId9\",\"formGroupPassword\":\"Password_formGroupPassword__2hHk1\",\"navLinkGroup\":\"Password_navLinkGroup__1KeuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Learn_card__2zAt7\",\"actions\":\"Learn_actions__3burl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__1xmS2\",\"wrapper\":\"Profile_wrapper__2Uikn\",\"packsList\":\"Profile_packsList__2OCgf\",\"avatar\":\"Profile_avatar__2kCod\",\"infoBox\":\"Profile_infoBox__2VlGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2m7fh\",\"red\":\"Button_red__3NxY9\",\"purple\":\"Button_purple__1VZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParrwordUpdate_wrapper__1JVPh\",\"emailChecking\":\"ParrwordUpdate_emailChecking__1jv_W\",\"formGroup\":\"ParrwordUpdate_formGroup__18BLr\",\"formGroupButton\":\"ParrwordUpdate_formGroupButton__24Fqd\",\"shapeIcon\":\"ParrwordUpdate_shapeIcon__1AoJb\",\"formGroupPassword\":\"ParrwordUpdate_formGroupPassword__2JdVu\",\"btn\":\"ParrwordUpdate_btn__3HTpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsWrapper\":\"ChangePack_btnsWrapper__AoWiI\",\"wrapper\":\"ChangePack_wrapper__3Nr-P\",\"icon\":\"ChangePack_icon__1ctP6\",\"btn\":\"ChangePack_btn__9FX3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsWrapper\":\"DeletePackModal_btnsWrapper__4L-gV\",\"wrapper\":\"DeletePackModal_wrapper__1eKXl\",\"icon\":\"DeletePackModal_icon__2Ibpy\",\"btn\":\"DeletePackModal_btn__Y5TKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsWrapper\":\"DeleteCardModal_btnsWrapper__1N_EN\",\"wrapper\":\"DeleteCardModal_wrapper__3Ahx1\",\"icon\":\"DeleteCardModal_icon__1tcNc\",\"btn\":\"DeleteCardModal_btn__2GV8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpdateCard_wrapper__12x0V\",\"btn\":\"UpdateCard_btn__Bb8U6\",\"icon\":\"UpdateCard_icon__CFs9V\",\"btnsWrapper\":\"UpdateCard_btnsWrapper__xgSuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cards_wrapper__16gSS\",\"empty\":\"Cards_empty__2q-If\",\"header\":\"Cards_header__2cbgX\",\"btn\":\"Cards_btn__pUb7y\",\"content\":\"Cards_content__uJJrq\",\"goback\":\"Cards_goback__3FFdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2VJhJ\",\"errorCode\":\"Error404_errorCode__1hweM\",\"errorText\":\"Error404_errorText__3oDLo\",\"errorImg\":\"Error404_errorImg__36Ohx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__u9U08\",\"paginator\":\"Paginator_paginator__38pSh\",\"icon\":\"Paginator_icon__1rZ9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1JBTV\",\"container\":\"Range_container__3Gx5H\",\"doubleRange\":\"Range_doubleRange__GRGaW\",\"sliderTrack\":\"Range_sliderTrack__yDQc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CheckEmail_wrapper__OGehe\",\"emailChecking\":\"CheckEmail_emailChecking__3GTFe\",\"iconWrapper\":\"CheckEmail_iconWrapper__30MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__1KeHF\",\"errorInput\":\"Input_errorInput__3awlA\",\"error\":\"Input_error__2tyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3BvH4\",\"modal\":\"Modal_modal__pDR1O\",\"slide-down\":\"Modal_slide-down__2v6xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeUserInfo_wrapper__2nzhx\",\"btn\":\"ChangeUserInfo_btn__7xG9b\",\"icon\":\"ChangeUserInfo_icon__24fT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddPack_wrapper__1j9Ue\",\"btn\":\"AddPack_btn__3Rqha\",\"icon\":\"AddPack_icon__OnKja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCard_wrapper__2HupJ\",\"btn\":\"AddCard_btn__2O0Hi\",\"icon\":\"AddCard_icon__2Lq6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__p8QPx\",\"backdrop\":\"Preloader_backdrop__3CXgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3fXfH\",\"optionInput\":\"Radio_optionInput__1aJb4\",\"click-wave\":\"Radio_click-wave__3DnWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestsWrapper\":\"TestPage_requestsWrapper__oxvBU\",\"header\":\"TestPage_header__cy-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3S60v\"};"],"sourceRoot":""}