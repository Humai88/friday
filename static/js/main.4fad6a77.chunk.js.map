{"version":3,"sources":["components/Register/Register.module.css","components/PasswordRecovery/Password.module.css","components/Profile/Profile.module.css","UI-kit/Button/Button.module.css","components/PasswordUpdate/ParrwordUpdate.module.css","components/ErrorPage/Error404.module.css","UI-kit/Range/Range.module.css","components/CheckEmail/CheckEmail.module.css","UI-kit/Input/Input.module.css","UI-kit/Modal/Modal.module.css","components/changeUserInfo/ChangeUserInfo.module.css","components/Cards/Cards.module.css","UI-kit/Radio/Radio.module.css","components/TestPage/TestPage.module.css","UI-kit/Card/Card.module.css","UI-kit/Select/Select.module.css","components/Login/Login.module.css","redux/loginReducer.ts","UI-kit/Card/Card.tsx","assets/images/mail.svg","components/CheckEmail/CheckEmail.tsx","components/ErrorPage/ErrorPage.tsx","UI-kit/Input/Input.tsx","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","api/api.ts","redux/profileReducer.ts","redux/appReducer.ts","redux/registerReducer.ts","components/Login/Login.tsx","redux/forgotReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","components/PasswordUpdate/ParrwordUpdate.tsx","UI-kit/Modal/Modal.tsx","components/changeUserInfo/ChangeUserInfo.tsx","components/Person/Person.tsx","components/Cards/Cards.tsx","components/Header/Header.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","components/Routes/Routes.tsx","assets/images/puff.svg","UI-kit/Preloader/Preloader.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","Card","className","children","finalClasses","styles","card","CheckEmail","wrapper","emailChecking","iconWrapper","src","email","alt","ErrorPage","s","errorCode","errorText","errorImg","Input","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","purple","finalClassName","default","Checkbox","type","onChangeChecked","checked","label","instance","axios","create","baseURL","withCredentials","authAPI","password","rememberMe","post","name","avatar","put","delete","from","message","resetPasswordToken","initialState","profile","_id","isAdmin","verified","publicCardPacksCount","created","updated","setUserProfileAC","payload","catchErrorAC","isInitialized","status","setAppStatusAC","initializeAppThunk","dispatch","then","res","setStatus","data","catch","err","response","console","log","finally","isAuth","setEmail","SET_EMAIL","setRememberMe","SET_REMEMBER_ME","showErrorMessage","SHOW_ERROR_MESSAGE","SET_AUTH_STATUS","isRegistered","registerSuccessAC","Login","useSelector","state","login","errorMessage","app","isLogin","useDispatch","useState","setPassword","useEffect","to","PATH","PROFILE","formWrapper","action","formGroup","shapeIcon","formGroupCheckbox","formGroupPassword","PASSWORD_RECOVERY","formGroupButton","disabled","onClick","preventDefault","loginUserData","setTimeout","navLinkGroup","REGISTER","initialized","setInitializedAC","setErrorAC","PasswordRecovery","mail","setMail","forgot","EMAIL_CHECK","placeholder","target","formGroupEmail","LOGIN","PasswordUpdate","newPassword","setNewPassword","token","useParams","success","sendNewPasswordThunkCreator","btn","Backdrop","onClose","classes","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","ChangeUserInfo","setName","url","setUrl","required","imgUrl","userData","updatedUser","changeUserInfoTC","icon","Person","props","showModal","hideModalHandler","sidebar","infoBox","photo","showModalHandler","logoutHandler","packsList","Cards","Header","testPage","arrayLinks","map","l","i","path","text","profilePage","activeClassName","Profile","setShowModal","isLoggedIn","navLinksProfile","header","exact","PROFILE_PERSON","render","PROFILE_CARDS","Register","createPassword","confirmPassword","user","setUser","submitted","setSubmitted","handleInputChange","newValue","register","history","useHistory","length","cancelBtn","goBack","registerBtn","registerFailureAC","EditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","fontSize","Radio","options","onChangeOption","onChangeCallback","mappedOptions","o","optionInput","customRadios","Select","select","Range","onChangeRange","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","setChecked","setResponse","navLinksTest","display","flexDirection","justifyContent","alignItems","height","marginTop","requestsWrapper","JSON","stringify","width","TEST","PASSWORD_UPDATE","ERROR","Routes","Preloader","loader","App","position","top","textAlign","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window"],"mappings":"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","file":"static/js/main.4fad6a77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__3Mzwm\",\"formGroup\":\"Register_formGroup__3NaLC\",\"formWrapper\":\"Register_formWrapper__W0pMq\",\"shapeIcon\":\"Register_shapeIcon__1HD9f\",\"formGroupPassword\":\"Register_formGroupPassword__2lXkl\",\"formGroupButton\":\"Register_formGroupButton__Wu6a-\",\"register\":\"Register_register__13bP2\",\"cancelBtn\":\"Register_cancelBtn__I6ssU\",\"registerBtn\":\"Register_registerBtn__kAj6a\",\"errorMessage\":\"Register_errorMessage__2XUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Password_wrapper__CwIC7\",\"login\":\"Password_login__2Kopu\",\"formGroup\":\"Password_formGroup__1r9mZ\",\"formGroupButton\":\"Password_formGroupButton__1CTkn\",\"formWrapper\":\"Password_formWrapper__xFoHs\",\"shapeIcon\":\"Password_shapeIcon__cEhkM\",\"formGroupEmail\":\"Password_formGroupEmail__3cId9\",\"formGroupPassword\":\"Password_formGroupPassword__2hHk1\",\"navLinkGroup\":\"Password_navLinkGroup__1KeuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__1xmS2\",\"wrapper\":\"Profile_wrapper__2Uikn\",\"sidebar\":\"Profile_sidebar__3qBu8\",\"packsList\":\"Profile_packsList__2OCgf\",\"avatar\":\"Profile_avatar__2kCod\",\"infoBox\":\"Profile_infoBox__2VlGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2m7fh\",\"red\":\"Button_red__3NxY9\",\"purple\":\"Button_purple__1VZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParrwordUpdate_wrapper__1JVPh\",\"emailChecking\":\"ParrwordUpdate_emailChecking__1jv_W\",\"formGroup\":\"ParrwordUpdate_formGroup__18BLr\",\"formGroupButton\":\"ParrwordUpdate_formGroupButton__24Fqd\",\"shapeIcon\":\"ParrwordUpdate_shapeIcon__1AoJb\",\"formGroupPassword\":\"ParrwordUpdate_formGroupPassword__2JdVu\",\"btn\":\"ParrwordUpdate_btn__3HTpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2VJhJ\",\"errorCode\":\"Error404_errorCode__1hweM\",\"errorText\":\"Error404_errorText__3oDLo\",\"errorImg\":\"Error404_errorImg__36Ohx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1JBTV\",\"container\":\"Range_container__3Gx5H\",\"doubleRange\":\"Range_doubleRange__GRGaW\",\"sliderTrack\":\"Range_sliderTrack__yDQc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CheckEmail_wrapper__OGehe\",\"emailChecking\":\"CheckEmail_emailChecking__3GTFe\",\"iconWrapper\":\"CheckEmail_iconWrapper__30MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__1KeHF\",\"errorInput\":\"Input_errorInput__3awlA\",\"error\":\"Input_error__2tyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3BvH4\",\"modal\":\"Modal_modal__pDR1O\",\"slide-down\":\"Modal_slide-down__2v6xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeUserInfo_wrapper__2nzhx\",\"btn\":\"ChangeUserInfo_btn__7xG9b\",\"icon\":\"ChangeUserInfo_icon__24fT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cards_wrapper__16gSS\",\"sidebar\":\"Cards_sidebar__zyOSU\",\"packsList\":\"Cards_packsList__2oJ7e\",\"avatar\":\"Cards_avatar__1XeO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3fXfH\",\"optionInput\":\"Radio_optionInput__1aJb4\",\"click-wave\":\"Radio_click-wave__3DnWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestsWrapper\":\"TestPage_requestsWrapper__oxvBU\",\"header\":\"TestPage_header__cy-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3S60v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select___hJwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2nZF2\",\"login\":\"Login_login__3bGOo\",\"formGroup\":\"Login_formGroup__1mLpb\",\"formGroupButton\":\"Login_formGroupButton__36Uht\",\"formWrapper\":\"Login_formWrapper__3_vIr\",\"shapeIcon\":\"Login_shapeIcon__ttv2N\",\"formGroupPassword\":\"Login_formGroupPassword__3N_L9\",\"navLinkGroup\":\"Login_navLinkGroup__3UUe9\",\"formGroupCheckbox\":\"Login_formGroupCheckbox__1B3Wh\",\"error\":\"Login_error__3S8wI\",\"errorMessage\":\"Login_errorMessage__1eavA\"};","import { ThunkType } from \"./store\";\r\nimport { authAPI, UserType } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setUserProfileAC } from \"./profileReducer\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_EMAIL = \"Login/SET-EMAIL\",\r\n    SET_REMEMBER_ME = \"Login/SET-REMEMBER-ME\",\r\n    SHOW_ERROR_MESSAGE = \"Login/SHOW-ERROR-MESSAGE\",\r\n    SET_AUTH_STATUS = \"Login/SET-AUTH-STATUS\",\r\n    SAVE_DATA_USER = \"Login/SAVE-DATA-USER\",\r\n}\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    data: {\r\n        email: \"\",\r\n        password: \"\",\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n};\r\n\r\nexport const loginReducer = (\r\n    state: LoginInitialStateType = initialState,\r\n    action: ActionLoginTypes\r\n): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_EMAIL:\r\n        case ACTIONS_TYPE.SET_REMEMBER_ME:\r\n        case ACTIONS_TYPE.SHOW_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload.data,\r\n                },\r\n            };\r\n        case ACTIONS_TYPE.SET_AUTH_STATUS: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setEmail = (email: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_EMAIL,\r\n        payload: {\r\n            data: { email },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setRememberMe = (rememberMe: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_REMEMBER_ME,\r\n        payload: {\r\n            data: { rememberMe },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const showErrorMessage = (error: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SHOW_ERROR_MESSAGE,\r\n        payload: {\r\n            data: { error },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const saveDataUser = (data: UserType) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SAVE_DATA_USER,\r\n        payload: { data },\r\n    } as const;\r\n};\r\n\r\nexport const setStatus = (isAuth: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_AUTH_STATUS,\r\n        payload: { isAuth },\r\n    } as const;\r\n};\r\n\r\n// Thunk\r\nexport const loginUserData = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(showErrorMessage(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            dispatch(setStatus(false));\r\n            dispatch(setRememberMe(false));\r\n            dispatch(setEmail(\"\"));\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : err.message + \", more details in the console\";\r\n            console.log(\"err:\", error);\r\n            dispatch(showErrorMessage(error));\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        });\r\n};\r\n// Types\r\nexport type LoginInitialStateType = { isAuth: boolean; data: DataType };\r\ntype DataType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n    error: string;\r\n};\r\nexport type ActionLoginTypes =\r\n    | ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setRememberMe>\r\n    | ReturnType<typeof showErrorMessage>\r\n    | ReturnType<typeof setStatus>;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\nexport const Card: React.FC<DefaultDivPropsType> = ({\r\n  className,\r\n  children,\r\n}) => {\r\n  const finalClasses = `${styles.card} ${className ? className : \"\"}`;\r\n  return <div className={finalClasses}>{children}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mail.995de1e6.svg\";","import React from \"react\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport styles from \"./CheckEmail.module.css\";\r\nimport email from \"./../../assets/images/mail.svg\";\r\n\r\nexport const CheckEmail = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <div className={styles.iconWrapper}>\r\n                    <img src={email} alt=\"Sending messafe\" />\r\n                </div>\r\n                <h2>Check Email</h2>\r\n                <p>\r\n                    We've sent an email with instructions to example@gmail.com\r\n                </p>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.errorCode}>404</div>\r\n      <div className={s.errorText}>There is nothing to do here...</div>\r\n      <img\r\n        src=\"https://www.seekpng.com/png/full/359-3590327_shopify-stores-sad-robot-shopify.png\"\r\n        alt=\"robot\"\r\n        className={s.errorImg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Input: React.FC<InputPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    onEnter && e.key === \"Enter\" && onEnter();\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n  purple?: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({\r\n  red,\r\n  purple,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${\r\n    red\r\n      ? `${s.default} ${s.red}`\r\n      : purple\r\n      ? `${s.default} ${s.purple}`\r\n      : s.default\r\n  } ${className}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n      <label className={s.label}></label>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nlet smtp_login = process.env.REACT_APP_SMTP_LOGIN;\r\nlet backend_URL_ADDRESS = process.env.REACT_APP_BACKEND_URL;\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:3000/\",\r\n    // backendURL: backend_URL_ADDRESS,\r\n    withCredentials: true,\r\n});\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    me() {\r\n        return instance.post<UserType>(`auth/me`);\r\n    },\r\n    changeInfo(name: string, avatar: string) {\r\n        return instance.put<ChangeInfoResponseType>(`auth/me`, {\r\n            name,\r\n            avatar,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`);\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ForgotPasswordResponseType>(`auth/forgot`, {\r\n            email,\r\n            from: \"ai73a@yandex.by\",\r\n            message: `<div style=\"background-color: #d9d9f1; margin: 0 auto; padding: 2.5rem; display-flex;  flex-direction: column; align-items: center; justify-content: center; border-radius: 8px\"><h2>Forgot your password?</h2><p>That's ok, it happens! Click on the button below to reset your password.</p> <a href='http://localhost:3000/?#/password-update/$token$'><button style=\"background-color: #21268f; color: #ececf9; padding: 10px 20px; border-radius: 8px;  text-decoration: none;  border: none; cursor:pointer; border-radius: 30px;\">Reset your password</button></a></div>`,\r\n        });\r\n    },\r\n    resetPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResetPasswordResponseType>(\r\n            `auth/set-new-password`,\r\n            {\r\n                password,\r\n                resetPasswordToken,\r\n            }\r\n        );\r\n    },\r\n};\r\n\r\n//Types\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    avatar: string;\r\n    error: string;\r\n};\r\n\r\nexport type AddedUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: 0;\r\n    created: Date;\r\n    updated: Date;\r\n};\r\nexport type RegisterResponseType = {\r\n    addedUser: AddedUserType;\r\n    error?: string;\r\n};\r\n\r\nexport type ChangeInfoResponseType = {\r\n    updatedUser: UserType;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\nexport type LogoutResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\nexport type ForgotPasswordResponseType = {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n    error?: string;\r\n};\r\nexport type ResetPasswordResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\n","import { authAPI, UserType } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: null,\r\n        email: null,\r\n        rememberMe: null,\r\n        isAdmin: null,\r\n        name: null,\r\n        verified: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        avatar: null,\r\n    },\r\n    error: \"\",\r\n};\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ActionProfileTypes\r\n): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile,\r\n            };\r\n        case \"CATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n        case \"CHANGE_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.userData,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setUserProfileAC = (profile: DataUserType) => {\r\n    return { type: \"SET_USER_PROFILE\", payload: { profile } } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n    return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\n\r\nexport const changeUserDataAC = (userData: DataUserType) => {\r\n    return {\r\n        type: \"CHANGE_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const setAuthTC = (): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\nexport const changeUserInfoTC = (name: string, imgUrl: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .changeInfo(name, imgUrl)\r\n            .then((res) => {\r\n                dispatch(changeUserDataAC(res.data.updatedUser));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionProfileTypes =\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof catchErrorAC>\r\n    | ReturnType<typeof changeUserDataAC>;\r\nexport type ProfileInitialStateType = {\r\n    profile: DataUserType;\r\n    error: string;\r\n};\r\ntype DataUserType = {\r\n    _id: string | null;\r\n    email: string | null;\r\n    rememberMe: boolean | null;\r\n    isAdmin: boolean | null;\r\n    name: string | null;\r\n    verified: boolean | null;\r\n    publicCardPacksCount: number | null;\r\n    created: Date | null;\r\n    updated: Date | null;\r\n    avatar: string | null;\r\n};\r\n","import { authAPI } from \"../api/api\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { setAuthTC, setUserProfileAC } from \"./profileReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    isInitialized: false,\r\n    status: \"idle\",\r\n};\r\n\r\nexport const appReducer = (\r\n    state = initialState,\r\n    action: ActionAppTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALISATION\":\r\n            return { ...state, isInitialized: true };\r\n        default:\r\n            return state;\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.payload.status,\r\n            };\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setIsInitializedAC = () => {\r\n    return {\r\n        type: \"SET-INITIALISATION\",\r\n    } as const;\r\n};\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        payload: {\r\n            status,\r\n        },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\n\r\nexport const initializeAppThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAuthTC());\r\n    dispatch(setIsInitializedAC());\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes =\r\n    | ReturnType<typeof setIsInitializedAC>\r\n    | ReturnType<typeof setAppStatusAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    isInitialized: boolean;\r\n    status: RequestStatusType;\r\n};\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: RegisterInitialStateType = {\r\n    error: \"\",\r\n    isRegistered: false,\r\n};\r\n\r\nexport const registerReducer = (\r\n    state = initialState,\r\n    action: ActionRegisterTypes\r\n): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isRegistered: action.payload.isRegistered,\r\n            };\r\n        case \"REGISTER_FAILURE\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerFailureAC = (error: string) => {\r\n    return {\r\n        type: \"REGISTER_FAILURE\",\r\n        payload: { error },\r\n    } as const;\r\n};\r\nexport const registerSuccessAC = (isRegistered: boolean) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: { isRegistered },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const registerUserTC = (email: string, password: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .register(email, password)\r\n            .then((res) => {\r\n                dispatch(registerSuccessAC(true));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(registerFailureAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionRegisterTypes =\r\n    | ReturnType<typeof registerFailureAC>\r\n    | ReturnType<typeof registerSuccessAC>;\r\n\r\nexport type RegisterInitialStateType = { isRegistered: boolean; error: string };\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport {\r\n    loginUserData,\r\n    setEmail,\r\n    setRememberMe,\r\n    showErrorMessage,\r\n} from \"../../redux/loginReducer\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { registerSuccessAC } from \"../../redux/registerReducer\";\r\n\r\nexport const Login = () => {\r\n    const email = useSelector((state: AppStore) => state.login.data.email);\r\n    const rememberMe = useSelector(\r\n        (state: AppStore) => state.login.data.rememberMe\r\n    );\r\n    const errorMessage = useSelector(\r\n        (state: AppStore) => state.login.data.error\r\n    );\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const isLogin = useSelector((state: AppStore) => state.login.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(registerSuccessAC(false));\r\n    }, [])\r\n\r\n    const onCheckboxClick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRememberMe(e.currentTarget.checked));\r\n    };\r\n\r\n    const onEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value));\r\n    };\r\n\r\n    const onPasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitClick = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        dispatch(loginUserData(email, password, rememberMe));\r\n        dispatch(showErrorMessage(errorMessage));\r\n\r\n        setTimeout(() => {\r\n            dispatch(showErrorMessage(\"\"));\r\n        }, 3000);\r\n    };\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Sign In</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={email}\r\n                                    onChange={onEmailInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                        >\r\n                            <label>\r\n                                <span>Password</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={onPasswordInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupCheckbox}`}\r\n                        >\r\n                            <label>\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={onCheckboxClick}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupPassword}`}\r\n                        >\r\n                            {errorMessage && (\r\n                                <span className={styles.errorMessage}>{errorMessage}</span>\r\n                            )}\r\n                            <NavLink to={PATH.PASSWORD_RECOVERY}>\r\n                                Forgot Password\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                        >\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                disabled={status === \"loading\"}\r\n                                onClick={onSubmitClick}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <p>\r\n                    Don’t have an account?\r\n                </p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.REGISTER}> Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { ThunkType } from \"./store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\n\r\nconst initialState: AuthInitialStateType = {\r\n    initialized: false, // transfer to succesful succesful page\r\n    error: false, // show error page\r\n};\r\n\r\nexport const forgotReducer = (\r\n    state = initialState,\r\n    action: ActionForgotTypes\r\n): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"setInitialized\":\r\n            return { ...state, initialized: action.initialized };\r\n\r\n        case \"setError\":\r\n            return { ...state, error: action.error };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Thunk one love)))\r\nexport const sendEmailThunkCreator =\r\n    (email: string) => (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .forgotPassword(email)\r\n            .then(() => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const sendNewPasswordThunkCreator =\r\n    (email: string, token: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .resetPassword(email, token)\r\n            .then((res) => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n//Action Creators\r\n\r\nexport const setInitializedAC = (initialized: boolean) => {\r\n    return { type: \"setInitialized\", initialized } as const;\r\n};\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>;\r\n\r\nexport const setErrorAC = (error: boolean) => {\r\n    return { type: \"setError\", error } as const;\r\n};\r\nexport type seErrorAT = ReturnType<typeof setErrorAC>;\r\n\r\nexport type ActionForgotTypes = setInitializedAT | seErrorAT;\r\n\r\n// Types\r\n\r\nexport type AuthInitialStateType = {\r\n    initialized: boolean;\r\n    error: boolean;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Password.module.css\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendEmailThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialized = useSelector<AppStore, boolean>(\r\n        (state) => state.forgot.initialized\r\n    );\r\n    const error = useSelector<AppStore, boolean>((state) => state.forgot.error);\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    if (initialized) {\r\n        return <Redirect to={PATH.EMAIL_CHECK} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n    const buttonCallback = () => {\r\n        dispatch(sendEmailThunkCreator(mail));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Forgot your password?</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={\"......\"}\r\n                                    onChange={(e) => setMail(e.target.value)}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupEmail}`}\r\n                        >\r\n                            <span>\r\n                                Enter your email address and we will send you\r\n                                further instructions\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                >\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        type={\"submit\"}\r\n                        onClick={buttonCallback}\r\n                    >\r\n                        Send instructions\r\n                    </Button>\r\n                </div>\r\n\r\n                <p>Did you remember your password?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.LOGIN}> Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { sendNewPasswordThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport styles from \"./ParrwordUpdate.module.css\";\r\n\r\nexport const PasswordUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const { token } = useParams<TokenType>();\r\n    const success = useSelector((state: AppStore) => state.forgot.initialized);\r\n    const handleInputNewPassChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    };\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const dispatch = useDispatch();\r\n    const submitHandler = () => {\r\n        dispatch(sendNewPasswordThunkCreator(newPassword, token));\r\n    };\r\n    if (success === true) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Create new password</h2>\r\n                <div className={`${styles.formGroup} ${styles.shapeIcon}`}>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <br />\r\n                        <Input\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassChange}\r\n                            value={newPassword}\r\n                        />\r\n                    </label>\r\n                    <p>\r\n                        Create new password and we will send you futher\r\n                        instructions to email\r\n                    </p>\r\n                </div>\r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={status === \"loading\"}\r\n                    className={styles.btn}\r\n                >\r\n                    Create new password\r\n                </Button>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Types\r\ntype TokenType = {\r\n    token: string;\r\n};\r\n","import { DetailedHTMLProps, Fragment, HTMLAttributes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop: React.FC<ModalPropsType> = ({ onClose }) => {\r\n    return <div className={classes.backdrop} onClick={onClose} />;\r\n};\r\n\r\nconst ModalOverlay: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({ onClose, children }) => {\r\n    return (\r\n        <Fragment>\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <Backdrop onClose={onClose} />,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <ModalOverlay>{children}</ModalOverlay>,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\ntype ModalPropsType = DefaultDivPropsType & { onClose: () => void };\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserInfoTC } from \"../../redux/profileReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangeUserInfo.module.css\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const ChangeUserInfo: React.FC<ChangeUserInfoPropsType> = ({\r\n    onClose,\r\n}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const handleInputUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(e.currentTarget.value);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if (name || url) {\r\n            dispatch(changeUserInfoTC(name, url));\r\n            setName(\"\");\r\n            setUrl(\"\");\r\n        }\r\n\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new name</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputNameChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={name}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter image url</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputUrlChange}\r\n                        name=\"url\"\r\n                        required\r\n                        value={url}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Submit\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChangeUserInfoPropsType = { onClose: () => void };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RequestStatusType } from \"../../redux/appReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { ChangeUserInfo } from \"../changeUserInfo/ChangeUserInfo\";\r\nimport styles from \"../Profile/Profile.module.css\";\r\n\r\ntype PersonPropsType = {\r\n    photo?: string | null;\r\n    name?: string | null;\r\n    showModalHandler: () => void;\r\n    logoutHandler: () => void;\r\n    showModal: boolean;\r\n    hideModalHandler: () => void;\r\n};\r\n\r\nexport const Person = (props: PersonPropsType) => {\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.showModal && (\r\n                <ChangeUserInfo onClose={props.hideModalHandler} />\r\n            )}\r\n            <div className={styles.sidebar}>\r\n                <div className={styles.infoBox}>\r\n                    <img\r\n                        className={styles.avatar}\r\n                        src={\r\n                            props.photo == null\r\n                                ? \"https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png\"\r\n                                : props.photo\r\n                        }\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <h3>{props.name}</h3>\r\n                    <h4 onClick={props.showModalHandler}>Edit profile</h4>\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        onClick={props.logoutHandler}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.packsList}></div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from \"./Cards.module.css\"\r\n\r\nconst Cards = () => {\r\n    return (\r\n\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.sidebar}>\r\n            </div>\r\n            <div className={styles.packsList}>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype NavLinksTestType = {\r\n    path: string\r\n    text: string\r\n};\r\n\r\ntype PropsType = HTMLAttributes<HTMLElement> & {\r\n    arrayLinks: NavLinksTestType[]\r\n    testPage?: boolean\r\n    profilePage?: boolean\r\n}\r\n\r\nexport const Header: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <header className={props.className}>\r\n            {props.testPage && props.arrayLinks.map((l, i) => <NavLink key={i} to={l.path}>{l.text}</NavLink>)}\r\n\r\n            {props.profilePage &&\r\n            <div className=\"container inner-header\">\r\n                <h1>It-incubator</h1>\r\n                <nav className=\"profile-nav\">\r\n                    {props.arrayLinks.map((l, i) => <NavLink\r\n                        key={i} activeClassName={\"active\"}\r\n                        to={l.path}>{l.text}\r\n                    </NavLink>)}\r\n                </nav>\r\n            </div>}\r\n        </header>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { logoutThunk } from \"../../redux/loginReducer\";\r\nimport { navLinksProfile, PATH } from \"../Routes/Routes\";\r\nimport { Person } from \"../Person/Person\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport { Header } from \"../Header/Header\";\r\n\r\nexport const Profile = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((state: AppStore) => state.login.isAuth);\r\n    const name = useSelector((state: AppStore) => state.profile.profile?.name);\r\n    const photo = useSelector(\r\n        (state: AppStore) => state.profile.profile?.avatar\r\n    );\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n    const logoutHandler = () => {\r\n        dispatch(logoutThunk());\r\n    };\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksProfile}\r\n                className={styles.header}\r\n                profilePage\r\n            />\r\n\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => (\r\n                        <Person\r\n                            photo={photo}\r\n                            name={name}\r\n                            showModalHandler={showModalHandler}\r\n                            logoutHandler={logoutHandler}\r\n                            showModal={showModal}\r\n                            hideModalHandler={hideModalHandler}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Cards />}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport styles from \"./Register.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUserTC } from \"../../redux/registerReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const Register = () => {\r\n    const [user, setUser] = useState<InitialValuesType>({\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setUser({\r\n            ...user,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n    const isRegistered = useSelector(\r\n        (state: AppStore) => state.register.isRegistered\r\n    );\r\n    const errorMessage = useSelector((state: AppStore) => state.register.error);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    function handleSubmit(e: MouseEvent<HTMLElement>) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (\r\n            user.email &&\r\n            user.createPassword &&\r\n            user.confirmPassword &&\r\n            user.createPassword === user.confirmPassword\r\n        ) {\r\n            dispatch(registerUserTC(user.email, user.createPassword));\r\n            setUser({ email: \"\", createPassword: \"\", confirmPassword: \"\" });\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapper}>\r\n                <Card className={styles.register}>\r\n                    <h1>It-incubator</h1>\r\n\r\n                    <div className={styles.formWrapper}>\r\n                        <form>\r\n                            <h2>Sign Up</h2>\r\n                            <div className={styles.formGroup}>\r\n                                <label>\r\n                                    <span>Email</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        value={user.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.email &&\r\n                                        \"Email is required\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"createPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.createPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.createPassword &&\r\n                                        \"Password is required.\"}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Confirm Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.confirmPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        user.confirmPassword !==\r\n                                            user.createPassword &&\r\n                                        user.confirmPassword.length > 1 &&\r\n                                        \"Passwords do not match.\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.confirmPassword &&\r\n                                        \"You should confirm your password.\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                            >\r\n                                <Button\r\n                                    className={styles.cancelBtn}\r\n                                    purple\r\n                                    onClick={() => {\r\n                                        history.goBack();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className={styles.registerBtn}\r\n                                    type={\"submit\"}\r\n                                    onClick={handleSubmit}\r\n                                    disabled={status === \"loading\"}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            {errorMessage && (\r\n                <div className={styles.errorMessage}>{errorMessage}</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n//Types\r\nexport type InitialValuesType = {\r\n    email: string;\r\n    createPassword: string;\r\n    confirmPassword: string;\r\n};\r\n","import React, {\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  HTMLAttributes,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLSpanElement>,\r\n  HTMLSpanElement\r\n>;\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n  spanProps?: DefaultSpanPropsType;\r\n};\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = ({\r\n  autoFocus,\r\n  onBlur,\r\n  onEnter,\r\n  spanProps,\r\n  ...restProps\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { children, onDoubleClick, className, ...restSpanProps } =\r\n    spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    onEnter && onEnter();\r\n  };\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false);\r\n\r\n    onBlur && onBlur(e);\r\n  };\r\n  const onDoubleClickCallBack = (\r\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => {\r\n    setEditMode(true);\r\n\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <Input\r\n          autoFocus\r\n          onBlur={onBlurCallback}\r\n          onEnter={onEnterCallback}\r\n          {...restProps}\r\n        />\r\n      ) : (\r\n        <span\r\n          onDoubleClick={onDoubleClickCallBack}\r\n          className={spanClassName}\r\n          {...restSpanProps}\r\n        >\r\n          <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\r\n          {children || restProps.value}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport s from \"./Radio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Radio: React.FC<RadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            className={s.optionInput}\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <div className={s.customRadios}>{mappedOptions}</div>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport s from \"./Select.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => {\r\n        return <option key={i}>{o}</option>;\r\n      })\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n    console.log(\"select \" + e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.select}>\r\n      <select onChange={onChangeCallback} {...restProps}>\r\n        {mappedOptions}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport styles from \"./Range.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n  onChangeRange?: (value: number) => void;\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n  value,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  // const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.sliderTrack}></div>\r\n        <input\r\n          type={\"range\"}\r\n          className={styles.doubleRange}\r\n          onChange={onChangeCallback}\r\n          {...restProps}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport styles from \"./TestPage.module.css\";\r\nimport { navLinksTest } from \"../Routes/Routes\";\r\n\r\nexport const TestPage = () => {\r\n    const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const [rangeValue, setRangeValue] = useState(50);\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>();\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(e.currentTarget.checked);\r\n    };\r\n    const changeHandler = (value: number) => {\r\n        setRangeValue(value);\r\n    };\r\n    const login = () => {\r\n        authAPI\r\n            .login(\"nya-admn@nya.nya\", \"1qazxcvBG\", true)\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const me = () => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const register = () => {\r\n        authAPI\r\n            .register(\"blabla00000@nya.nya\", \"1qazxcvBG\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const changeInfo = () => {\r\n        authAPI\r\n            .changeInfo(\"New Name\", \"https://i.mydramalist.com/67r8d_5_c.jpg\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const logout = () => {\r\n        authAPI\r\n            .logout()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const forgotPassword = () => {\r\n        authAPI\r\n            .forgotPassword(\"blabla@nya.nya\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksTest}\r\n                className={styles.header}\r\n                testPage\r\n            />\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    height: \"80vh\",\r\n                    marginTop: \"5rem\",\r\n                }}\r\n            >\r\n                <Button>button</Button>\r\n                <Checkbox checked={checked} onChange={testOnChange} />\r\n                <EditableSpan />\r\n                <Radio\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <Input />\r\n                <span style={{ fontSize: \"1.7rem\" }}>{rangeValue}</span>\r\n                <Range onChangeRange={changeHandler} value={rangeValue} />\r\n                <Select\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={styles.requestsWrapper}>\r\n                    <Button onClick={login}>Login Request</Button>\r\n                    <Button onClick={register}>Register</Button>\r\n                    <Button onClick={me}>Show User</Button>\r\n                    <Button onClick={changeInfo}>Change Info</Button>\r\n                    <Button onClick={logout}>Logout</Button>\r\n                    <Button onClick={forgotPassword}>Forgot Password</Button>\r\n                </div>\r\n                <div style={{ width: \"800px\" }}>{response}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport { CheckEmail } from \"../CheckEmail/CheckEmail\";\r\nimport { ErrorPage } from \"../ErrorPage/ErrorPage\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport { PasswordUpdate } from \"../PasswordUpdate/ParrwordUpdate\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { Register } from \"../Register/Register\";\r\nimport { TestPage } from \"../TestPage/TestPage\";\r\nimport React from \"react\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport { Person } from \"../Person/Person\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    TEST: \"/test\",\r\n    PASSWORD_UPDATE: \"/password-update/:token\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    PROFILE: \"/profile\",\r\n    PROFILE_PERSON: \"/profile/person\",\r\n    PROFILE_CARDS: \"/profile/cards\",\r\n    REGISTER: \"/register\",\r\n    EMAIL_CHECK: \"/check-email\",\r\n    ERROR: \"/error-page\",\r\n};\r\n\r\nexport const navLinksProfile = [\r\n    {path: PATH.PROFILE_CARDS, text: \"Packs list\"},\r\n    {path: PATH.PROFILE_PERSON, text: \"Profile\"},\r\n];\r\n\r\nexport const navLinksTest = [\r\n    {path: PATH.LOGIN, text: \"Login\"},\r\n    {path: PATH.REGISTER, text: \"Register\"},\r\n    {path: PATH.PROFILE, text: \"Profile\"},\r\n    {path: PATH.PASSWORD_UPDATE, text: \"Update Password\"},\r\n    {path: PATH.PASSWORD_RECOVERY, text: \"Recovery Password\"},\r\n    {path: PATH.EMAIL_CHECK, text: \"Check Email\"},\r\n    {path: PATH.ERROR, text: \"ErrorPage\"},\r\n];\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={\"/\"}\r\n                    render={() => <Redirect to={PATH.LOGIN} />}\r\n                />\r\n                <Route exact path={PATH.TEST} render={() => <TestPage />} />\r\n                <Route exact path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route exact path={PATH.REGISTER} render={() => <Register />} />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_UPDATE}\r\n                    render={() => <PasswordUpdate />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_RECOVERY}\r\n                    render={() => <PasswordRecovery />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.EMAIL_CHECK}\r\n                    render={() => <CheckEmail />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route exact render={() => <ErrorPage />} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/puff.6b477021.svg\";","import React from \"react\";\r\nimport styles from \"./Preloader.module.css\";\r\nimport loader from \"./../../assets/images/puff.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={loader} alt=\"loading\" />;\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Routes from \"./components/Routes/Routes\";\r\nimport { initializeAppThunk } from \"./redux/appReducer\";\r\nimport { AppStore } from \"./redux/store\";\r\nimport { Preloader } from \"./UI-kit/Preloader/Preloader\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useSelector<AppStore, boolean>(\r\n        (state) => state.app.isInitialized\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppThunk());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"fixed\",\r\n                    top: \"30%\",\r\n                    textAlign: \"center\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <Preloader />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes, appReducer } from \"./appReducer\";\r\nimport { ActionForgotTypes, forgotReducer } from \"./forgotReducer\";\r\nimport { ActionLoginTypes, loginReducer } from \"./loginReducer\";\r\nimport { ActionProfileTypes, profileReducer } from \"./profileReducer\";\r\nimport { ActionRegisterTypes, registerReducer } from \"./registerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof reducers>;\r\nexport type AppActionsType =\r\n    | ActionLoginTypes\r\n    | ActionProfileTypes\r\n    | ActionRegisterTypes\r\n    | ActionAppTypes\r\n    | ActionForgotTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}