{"version":3,"sources":["components/Login/Login.module.css","components/Packs/Packs.module.css","components/Register/Register.module.css","components/PasswordRecovery/Password.module.css","components/Table/Table.module.css","components/Profile/Profile.module.css","UI-kit/Button/Button.module.css","components/PasswordUpdate/ParrwordUpdate.module.css","components/Cards/Cards.module.css","components/ErrorPage/Error404.module.css","components/Paginator/Paginator.module.css","UI-kit/Range/Range.module.css","components/CheckEmail/CheckEmail.module.css","UI-kit/Input/Input.module.css","UI-kit/Modal/Modal.module.css","components/changeUserInfo/ChangeUserInfo.module.css","components/Packs/UpdatePack.module.css","components/Cards/AddCard.module.css","UI-kit/Preloader/Preloader.module.css","UI-kit/Radio/Radio.module.css","components/TestPage/TestPage.module.css","UI-kit/Card/Card.module.css","components/Error/ErrorMes.module.css","UI-kit/Select/Select.module.css","redux/loginReducer.ts","UI-kit/Card/Card.tsx","assets/images/mail.svg","components/CheckEmail/CheckEmail.tsx","components/ErrorPage/ErrorPage.tsx","UI-kit/Input/Input.tsx","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","api/api.ts","redux/profileReducer.ts","redux/appReducer.ts","redux/registerReducer.ts","components/Login/Login.tsx","redux/forgotReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","components/PasswordUpdate/ParrwordUpdate.tsx","UI-kit/Modal/Modal.tsx","components/changeUserInfo/ChangeUserInfo.tsx","components/Person/Person.tsx","redux/packsReducer.ts","UI-kit/RangeUI/RangeUI.tsx","components/Error/ErrorMes.tsx","components/Paginator/Paginator.tsx","assets/images/icon-cards.svg","helpers/helpers.ts","assets/images/puff.svg","UI-kit/Preloader/Preloader.tsx","redux/cardsReducer.ts","components/Table/Table.tsx","components/Packs/UpdatePack.tsx","components/Packs/Packs.tsx","components/Header/Header.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","components/Cards/AddCard.tsx","components/Cards/Cards.tsx","components/Routes/Routes.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","Card","className","children","finalClasses","styles","card","CheckEmail","wrapper","emailChecking","iconWrapper","src","email","alt","ErrorPage","s","errorCode","errorText","errorImg","Input","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","purple","finalClassName","default","Checkbox","type","onChangeChecked","checked","label","instance","axios","create","baseURL","process","withCredentials","authAPI","password","rememberMe","post","name","avatar","put","delete","from","message","resetPasswordToken","packsAPI","currentPage","pageCount","packName","userId","min","max","get","cardsPack","packId","_id","cardsAPI","cardsPack_id","question","answer","id","initialState","profile","isAdmin","verified","publicCardPacksCount","created","updated","setUserProfileAC","payload","isInitialized","status","setAppStatusAC","catchErrorAC","initializeAppThunk","dispatch","promise","then","res","setStatus","data","catch","err","response","console","log","finally","Promise","all","isAuth","setEmail","SET_EMAIL","setRememberMe","SET_REMEMBER_ME","showErrorMessage","SHOW_ERROR_MESSAGE","SET_AUTH_STATUS","isRegistered","registerFailureAC","registerSuccessAC","Login","useSelector","state","login","errorMessage","app","isLogin","useDispatch","useState","setPassword","useEffect","to","PATH","PROFILE","formWrapper","action","formGroup","shapeIcon","formGroupCheckbox","formGroupPassword","PASSWORD_RECOVERY","formGroupButton","disabled","onClick","preventDefault","loginUserData","setTimeout","navLinkGroup","REGISTER","initialized","setInitializedAC","setErrorAC","PasswordRecovery","mail","setMail","forgot","EMAIL_CHECK","placeholder","target","formGroupEmail","LOGIN","PasswordUpdate","newPassword","setNewPassword","token","useParams","success","sendNewPasswordThunkCreator","btn","Backdrop","onClose","classes","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","ChangeUserInfo","setName","url","setUrl","required","imgUrl","userData","updatedUser","changeUserInfoTC","icon","Person","props","showModal","hideModalHandler","infoBox","photo","showModalHandler","logoutHandler","cardPacks","user_id","user_name","private","cardsCount","Date","minCardsCount","maxCardsCount","cardPacksTotalCount","packsId","searchPacks","setPacksAC","setPacksTotalCountAC","getPacksTC","getState","packs","setRangeValuesAC","RangeUi","onChangeRange","Slider","color","event","newValue","valueLabelDisplay","sx","backgroundColor","width","height","top","opacity","ErrorMes","Paginator","currentItem","itemCount","totalItemCount","onChangeItemHandler","portionSize","pagesCount","Math","ceil","pages","i","push","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","trimString","string","length","substring","Preloader","img","loader","cards","grade","shots","rating","packUserId","getCardsTC","setCardsAC","cardsTotalCount","Table","headers","userIdFromCards","table","header","index","scope","pack","toString","cardsIcon","editBtn","deleteBtn","title","renderPacks","cardId","cardsPackId","renderCards","UpdatePack","setTitle","newPackName","Packs","setShowModal","searchPack","setSearchPack","totalPacksCount","onChangePageHandler","useCallback","pageNumber","setCurrentPageAC","getMyPacksHandler","getAllPacksHandler","setValue","onChangeSuperDoubleRange","setMinValueAC","setMaxValueAC","sidebar","btnWrapper","sideBtn","active","showPacksComponent","sliderComponent","sliderWrapper","RangeUI","packsList","search","searchValue","callSetSearchPack","btnsWrapper","searchBtn","tableWrapper","Header","testPage","arrayLinks","l","path","text","profilePage","activeClassName","Profile","isLoggedIn","navLinksProfile","exact","PROFILE_PERSON","render","PROFILE_PACKS","Register","createPassword","confirmPassword","user","setUser","submitted","setSubmitted","handleInputChange","register","history","useHistory","cancelBtn","goBack","registerBtn","EditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","fontSize","Radio","options","onChangeOption","onChangeCallback","mappedOptions","o","optionInput","customRadios","Select","select","Range","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","setChecked","setResponse","navLinksTest","display","flexDirection","justifyContent","alignItems","marginTop","requestsWrapper","JSON","stringify","AddCard","setQuestion","setAnswer","addCardTC","Cards","empty","TEST","PASSWORD_UPDATE","PROFILE_CARDS","ERROR","Routes","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,UAAY,yBAAyB,gBAAkB,+BAA+B,YAAc,2BAA2B,UAAY,yBAAyB,kBAAoB,iCAAiC,aAAe,4BAA4B,kBAAoB,iCAAiC,MAAQ,qBAAqB,aAAe,8B,iBCArbD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,QAAU,uBAAuB,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,sBAAsB,aAAe,4BAA4B,WAAa,0BAA0B,QAAU,uBAAuB,OAAS,sBAAsB,mBAAqB,kCAAkC,gBAAkB,+BAA+B,cAAgB,6BAA6B,YAAc,2BAA2B,UAAY,2B,qBCAnhBD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,YAAc,8BAA8B,UAAY,4BAA4B,kBAAoB,oCAAoC,gBAAkB,kCAAkC,SAAW,2BAA2B,UAAY,4BAA4B,YAAc,8BAA8B,aAAe,iC,iBCAvaD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,UAAY,4BAA4B,gBAAkB,kCAAkC,YAAc,8BAA8B,UAAY,4BAA4B,eAAiB,iCAAiC,kBAAoB,oCAAoC,aAAe,iC,kBCA/XD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,UAAY,yBAAyB,QAAU,yB,gBCAvHD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,wBAAwB,QAAU,2B,gBCAxKD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,oBAAoB,OAAS,yB,gBCAvFD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,cAAgB,sCAAsC,UAAY,kCAAkC,gBAAkB,wCAAwC,UAAY,kCAAkC,kBAAoB,0CAA0C,IAAM,8B,gBCA5UD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,OAAS,sBAAsB,IAAM,mBAAmB,QAAU,yB,mBCAlJD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,UAAY,4BAA4B,SAAW,6B,gBCAjJD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,UAAY,6BAA6B,KAAO,0B,gBCAjHD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,YAAc,2BAA2B,YAAc,6B,kBCA/ID,EAAOC,QAAU,CAAC,QAAU,4BAA4B,cAAgB,kCAAkC,YAAc,kC,gBCAxHD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,MAAQ,uB,gBCAxGD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,aAAa,4B,gBCA/FD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,IAAM,4BAA4B,KAAO,+B,gBCArGD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,IAAM,wBAAwB,KAAO,2B,gBCA7FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,wB,uCCAvFD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,SAAW,8B,gBCA1DD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,YAAc,2BAA2B,aAAa,4B,gBCAnHD,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,OAAS,2B,yBCA/ED,EAAOC,QAAU,CAAC,KAAO,qB,oCCAzBD,EAAOC,QAAU,CAAC,MAAQ,0B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,kHCIfC,E,sFCECC,EAAsC,SAAC,GAG7C,IAFLC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMC,EAAY,UAAMC,IAAOC,KAAb,YAAqBJ,GAAwB,IAC/D,OAAO,qBAAKA,UAAWE,EAAhB,SAA+BD,K,iBCZzB,MAA0B,iCCK5BI,EAAa,WACtB,OACI,qBAAKL,UAAWG,IAAOG,QAAvB,SACI,eAAC,EAAD,CAAMN,UAAWG,IAAOI,cAAxB,UACI,8CACA,qBAAKP,UAAWG,IAAOK,YAAvB,SACI,qBAAKC,IAAKC,EAAOC,IAAI,sBAEzB,6CACA,iG,iBCXHC,EAAY,WACvB,OACE,sBAAKZ,UAAWa,IAAEP,QAAlB,UACE,qBAAKN,UAAWa,IAAEC,UAAlB,iBACA,qBAAKd,UAAWa,IAAEE,UAAlB,4CACA,qBACEN,IAAI,oFACJE,IAAI,QACJX,UAAWa,IAAEG,e,iJCSRC,EAAkC,SAAC,GASzC,IARLC,EAQI,EARJA,SACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,WACAC,EAKI,EALJA,QACAC,EAII,EAJJA,MACAtB,EAGI,EAHJA,UACAuB,EAEI,EAFJA,cACGC,EACC,iBAUEC,EAAkB,UAAMZ,IAAES,MAAR,YAAiBC,GAAgC,IACnEG,EAAmB,UAAMJ,EAAQT,IAAEc,WAAad,IAAEe,WAA/B,YACvB5B,GAAwB,IAG1B,OACE,qCACE,mCACEkB,SAjBmB,SAACW,GACxBX,GAAYA,EAASW,GACrBV,GAAgBA,EAAaU,EAAEC,cAAcC,QAgBzCX,WAdqB,SAACS,GAC1BT,GAAcA,EAAWS,GACzBR,GAAqB,UAAVQ,EAAEG,KAAmBX,KAa5BrB,UAAW0B,GACPF,IAELF,GAAS,sBAAMtB,UAAWyB,EAAjB,SAAsCH,Q,gDCvCzCW,EAAoC,SAAC,GAK3C,IAJLC,EAII,EAJJA,IACAC,EAGI,EAHJA,OACAnC,EAEI,EAFJA,UACGwB,EACC,iBACEY,EAAc,UAClBF,EAAG,UACIrB,IAAEwB,QADN,YACiBxB,IAAEqB,KAClBC,EAAM,UACHtB,IAAEwB,QADC,YACUxB,IAAEsB,QAClBtB,IAAEwB,QALY,YAMhBrC,GAEJ,OAAO,oCAAQA,UAAWoC,GAAoBZ,K,gGCVnCc,EAAwC,SAAC,GAQhD,EAPJC,KAOK,IANLrB,EAMI,EANJA,SACAsB,EAKI,EALJA,gBACAxC,EAII,EAJJA,UAEAC,GAEI,EAHJsB,cAGI,EAFJtB,UACGuB,EACC,iBAMEE,EAAmB,UAAM1B,GAAwB,IAEvD,OACE,qCACE,mCACEuC,KAAM,WACNrB,SAXmB,SAACW,GACxBX,GAAYA,EAASW,GACrBW,GAAmBA,EAAgBX,EAAEC,cAAcW,UAU/CzC,UAAW0B,GACPF,IAELvB,GAAY,sBAAMD,UAAWa,IAAEU,cAAnB,SAAmCtB,IAChD,uBAAOD,UAAWa,IAAE6B,QAAgB,Q,QCtCpCC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAHsBC,uCAItBC,iBAAiB,IAERC,EAAU,SACbvC,EAAewC,EAAkBC,GACnC,OAAOR,EAASS,KAAT,aAAsC,CACzC1C,QACAwC,WACAC,gBALCF,EAAU,SAQVvC,EAAewC,GACpB,OAAOP,EAASS,KAAT,gBAAqD,CACxD1C,QACAwC,cAXCD,EAAU,WAef,OAAON,EAASS,KAAT,YAfFH,EAAU,SAiBRI,EAAcC,GACrB,OAAOX,EAASY,IAAT,UAAgD,CACnDF,OACAC,YApBCL,EAAU,WAwBf,OAAON,EAASa,OAAT,YAxBFP,EAAU,SA0BJvC,GACX,OAAOiC,EAASS,KAAT,cAAyD,CAC5D1C,QACA+C,KAAM,kBACNC,QAAQ,wjBA9BPT,EAAU,SAiCLC,EAAkBS,GAC5B,OAAOhB,EAASS,KAAT,wBAEH,CACIF,WACAS,wBAMHC,EAAW,SAEhBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAOvB,EAASwB,IAAT,+BACqBL,EADrB,iBACuCD,EADvC,qBAC+DE,EAD/D,oBACmFC,EADnF,gBACiGC,EADjG,gBAC4GC,KAV9GN,EAAW,SAaZP,GACJ,OAAOV,EAASS,KAAT,aAAiD,CACpDgB,UAAW,CAAEf,WAfZO,EAAW,SAkBTS,GACP,OAAO1B,EAASa,OAAT,wBACca,KApBhBT,EAAW,SAuBTU,EAAajB,GACpB,OAAOV,EAASY,IAAT,aAAoD,CACvDa,UAAW,CACPE,MACAjB,WAMHkB,EAAW,SACXF,EAAgBR,EAAqBC,GAC1C,OAAOnB,EAASwB,IAAT,kCACwBE,EADxB,sBAC4CP,EAD5C,iBAC8DD,KAHhEU,EAAW,SAMZC,EAAsBC,EAAkBC,GAC5C,OAAO/B,EAASS,KAAT,aAAmD,CACtDhD,KAAM,CAAEoE,eAAcC,WAAUC,aAR/BH,EAAW,SAWTI,GACP,OAAOhC,EAASa,OAAT,wBAA0DmB,KAZ5DJ,GAAW,SAcTD,EAAaG,EAAkBC,GACtC,OAAO/B,EAASY,IAAT,aAAoD,CACvDnD,KAAM,CAAEkE,MAAKG,WAAUC,aChG7BE,GAAwC,CAC1CC,QAAS,CACLP,IAAK,KACL5D,MAAO,KACPyC,WAAY,KACZ2B,QAAS,KACTzB,KAAM,KACN0B,SAAU,KACVC,qBAAsB,KACtBC,QAAS,KACTC,QAAS,KACT5B,OAAQ,OAyBH6B,GAAmB,SAACN,GAC7B,MAAO,CAAEtC,KAAM,mBAAoB6C,QAAS,CAAEP,aCvC5CD,GAAoC,CACtCS,eAAe,EACfC,OAAQ,OACRhE,MAAO,IAgCEiE,GAAiB,SAACD,GAC3B,MAAO,CACH/C,KAAM,aACN6C,QAAS,CACLE,YAICE,GAAe,SAAClE,GACzB,MAAO,CAAEiB,KAAM,cAAe6C,QAAS,CAAE9D,WAIhCmE,GAAqB,kBAAiB,SAACC,GAChD,IAAMC,EAAUD,GDET,SAACA,GACJA,EAASH,GAAe,YAExBtC,IAEK2C,MAAK,SAACC,GACHH,EAASI,IAAU,IACnBJ,EAASP,GAAiBU,EAAIE,UAEjCC,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBClBpCe,QAAQC,IAAI,CAACZ,IAAUC,MAAK,WACxBF,EApBG,CACHnD,KAAM,6B,SV9BFzC,K,4BAAAA,E,wCAAAA,E,8CAAAA,E,wCAAAA,E,uCAAAA,M,KAQZ,IAAM8E,GAAe,CACjB4B,QAAQ,EACRT,KAAM,CACFrF,MAAO,GACPwC,SAAU,GACVC,YAAY,EACZ7B,MAAO,KAgCFmF,GAAW,SAAC/F,GACrB,MAAO,CACH6B,KAAMzC,EAAa4G,UACnBtB,QAAS,CACLW,KAAM,CAAErF,YAKPiG,GAAgB,SAACxD,GAC1B,MAAO,CACHZ,KAAMzC,EAAa8G,gBACnBxB,QAAS,CACLW,KAAM,CAAE5C,iBAKP0D,GAAmB,SAACvF,GAC7B,MAAO,CACHiB,KAAMzC,EAAagH,mBACnB1B,QAAS,CACLW,KAAM,CAAEzE,YAYPwE,GAAY,SAACU,GACtB,MAAO,CACHjE,KAAMzC,EAAaiH,gBACnB3B,QAAS,CAAEoB,YWpFb5B,GAAyC,CAC3CtD,MAAO,GACP0F,cAAc,GAwBLC,GAAoB,SAAC3F,GAC9B,MAAO,CACHiB,KAAM,mBACN6C,QAAS,CAAE9D,WAGN4F,GAAoB,SAACF,GAC9B,MAAO,CACHzE,KAAM,mBACN6C,QAAS,CAAE4B,kBC3BNG,GAAQ,WACjB,IAAMzG,EAAQ0G,aAAY,SAACC,GAAD,OAAqBA,EAAMC,MAAMvB,KAAKrF,SAC1DyC,EAAaiE,aACf,SAACC,GAAD,OAAqBA,EAAMC,MAAMvB,KAAK5C,cAEpCoE,EAAeH,aACjB,SAACC,GAAD,OAAqBA,EAAMC,MAAMvB,KAAKzE,SAEpCgE,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UACpDmC,EAAUL,aAAY,SAACC,GAAD,OAAqBA,EAAMC,MAAMd,UAEvDd,EAAWgC,cACjB,EAAgCC,mBAAiB,IAAjD,mBAAOzE,EAAP,KAAiB0E,EAAjB,KAEAC,qBAAU,WACNnC,EAASwB,IAAkB,MAC5B,CAACxB,IA0BJ,OAAI+B,EACO,cAAC,IAAD,CAAUK,GAAIC,GAAKC,UAI1B,qBAAKhI,UAAWG,IAAOG,QAAvB,SACI,sBAAKN,UAAWG,IAAOmH,MAAvB,UACI,8CAEA,qBAAKtH,UAAWG,IAAO8H,YAAvB,SACI,uBAAMC,OAAO,IAAb,UACI,yCAEA,qBAAKlI,UAAWG,IAAOgI,UAAvB,SACI,kCACI,yCACA,uBACA,cAAC,EAAD,CACI5F,KAAK,OACLR,MAAOrB,EACPQ,SAxCX,SAACW,GAClB6D,EAASe,GAAS5E,EAAEC,cAAcC,WAyCV,sBAAM/B,UAAWG,IAAOmB,aAIhC,qBACItB,UAAS,UAAKG,IAAOgI,UAAZ,YAAyBhI,IAAOiI,WAD7C,SAGI,kCACI,4CACA,uBACA,cAAC,EAAD,CACI7F,KAAK,WACLR,MAAOmB,EACPhC,SAnDR,SAACW,GACrB+F,EAAY/F,EAAEC,cAAcC,UAoDJ,sBAAM/B,UAAWG,IAAOmB,aAIhC,qBACItB,UAAS,UAAKG,IAAOgI,UAAZ,YAAyBhI,IAAOkI,mBAD7C,SAGI,kCACI,cAAC,EAAD,CACI5F,QAASU,EACTjC,SAvER,SAACW,GACrB6D,EAASiB,GAAc9E,EAAEC,cAAcW,aAwEf,oDAIR,sBACIzC,UAAS,UAAKG,IAAOgI,UAAZ,YAAyBhI,IAAOmI,mBAD7C,UAGKf,GACG,sBAAMvH,UAAWG,IAAOoH,aAAxB,SAAuCA,IAE3C,cAAC,IAAD,CAASO,GAAIC,GAAKQ,kBAAlB,gCAKJ,qBACIvI,UAAS,UAAKG,IAAOgI,UAAZ,YAAyBhI,IAAOqI,iBAD7C,SAGI,cAAC,EAAD,CACIjG,KAAM,SACNkG,SAAqB,YAAXnD,EACVoD,QAlFN,SAClB7G,GAEAA,EAAE8G,iBACFjD,EZ+CqB,SACzBhF,EACAwC,EACAC,GAEA,OAAO,SAACuC,GACJA,EAASH,GAAe,YACxBtC,EACWvC,EAAOwC,EAAUC,GACvByC,MAAK,SAACC,GACHH,EAASI,IAAU,IACnBJ,EAASP,GAAiBU,EAAIE,UAEjCC,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASmB,GAAiBvF,OAE7B+E,SAAQ,WACLX,EAASH,GAAe,kBYpEvBqD,CAAclI,EAAOwC,EAAUC,IACxCuC,EAASmB,GAAiBU,IAE1BsB,YAAW,WACPnD,EAASmB,GAAiB,OAC3B,MAsEiB,0BAWZ,4DAIA,qBAAK7G,UAAWG,IAAO2I,aAAvB,SACI,cAAC,IAAD,CAAShB,GAAIC,GAAKgB,SAAlB,8B,oBCpIdnE,GAAqC,CACvCoE,aAAa,EACb1H,OAAO,GAsDE2H,GAAmB,SAACD,GAC7B,MAAO,CAAEzG,KAAM,iBAAkByG,gBAIxBE,GAAa,SAAC5H,GACvB,MAAO,CAAEiB,KAAM,WAAYjB,UCxDlB6H,GAAmB,WAC5B,MAAwBxB,mBAAiB,IAAzC,mBAAOyB,EAAP,KAAaC,EAAb,KAEM3D,EAAWgC,cAEXsB,EAAc5B,aAChB,SAACC,GAAD,OAAWA,EAAMiC,OAAON,eAEtB1H,EAAQ8F,aAA+B,SAACC,GAAD,OAAWA,EAAMiC,OAAOhI,SAC/DgE,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UAC1D,GAAI0D,EACA,OAAO,cAAC,IAAD,CAAUlB,GAAIC,GAAKwB,cAG9B,GAAIjI,EACA,OAAO,cAAC,IAAD,CAAUwG,GAAIC,GAAKC,UAM9B,OACI,qBAAKhI,UAAWG,KAAOG,QAAvB,SACI,sBAAKN,UAAWG,KAAOmH,MAAvB,UACI,8CAEA,qBAAKtH,UAAWG,KAAO8H,YAAvB,SACI,uBAAMC,OAAO,IAAb,UACI,uDAEA,qBAAKlI,UAAWG,KAAOgI,UAAvB,SACI,kCACI,yCACA,uBACA,cAAC,EAAD,CACI5F,KAAK,OACLiH,YAAa,SACbtI,SAAU,SAACW,GAAD,OAAOwH,EAAQxH,EAAE4H,OAAO1H,eAK9C,qBACI/B,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOuJ,gBAD7C,SAGI,6GAOZ,qBACI1J,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOqI,iBAD7C,SAGI,cAAC,EAAD,CACIC,SAAqB,YAAXnD,EACV/C,KAAM,SACNmG,QAzCG,WDAvB,IAAChI,ECCGgF,GDDHhF,ECCkC0I,EDDhB,SAAC1D,GAChBA,EAASH,GAAe,YACxBtC,EACoBvC,GACfkF,MAAK,WACFF,EAASuD,IAAiB,OAE7BjD,OAAM,WACHN,EAASwD,IAAW,OAEvB7C,SAAQ,WACLX,EAASH,GAAe,qBC2BpB,iCASJ,gEAEA,qBAAKvF,UAAWG,KAAO2I,aAAvB,SACI,cAAC,IAAD,CAAShB,GAAIC,GAAK4B,MAAlB,qC,oBCnEPC,GAAiB,WAC1B,MAAsCjC,mBAAiB,IAAvD,mBAAOkC,EAAP,KAAoBC,EAApB,KACQC,EAAUC,cAAVD,MACFE,EAAU7C,aAAY,SAACC,GAAD,OAAqBA,EAAMiC,OAAON,eAIxD1D,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UACpDI,EAAWgC,cAIjB,OAAgB,IAAZuC,EACO,cAAC,IAAD,CAAUnC,GAAIC,GAAK4B,QAG1B,qBAAK3J,UAAWG,KAAOG,QAAvB,SACI,eAAC,EAAD,CAAMN,UAAWG,KAAOI,cAAxB,UACI,8CACA,qDACA,sBAAKP,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOiI,WAA9C,UACI,kCACI,4CACA,uBACA,cAAC,EAAD,CACI7F,KAAK,WACLrB,SAtBS,SAACW,GAC9BiI,EAAejI,EAAEC,cAAcC,QAsBXA,MAAO8H,OAGf,yGAKJ,cAAC,EAAD,CACInB,QA3BM,WAClBhD,EFuBJ,SAAChF,EAAeqJ,GAAhB,OACA,SAACrE,GACGA,EAASH,GAAe,YACxBtC,EACmBvC,EAAOqJ,GACrBnE,MAAK,SAACC,GACHH,EAASuD,IAAiB,OAE7BjD,OAAM,WACHN,EAASwD,IAAW,OAEvB7C,SAAQ,WACLX,EAASH,GAAe,kBEnCvB2E,CAA4BL,EAAaE,KA2BtCtB,SAAqB,YAAXnD,EACVtF,UAAWG,KAAOgK,IAHtB,uC,wCCzCHC,GAAqC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjD,OAAO,qBAAKrK,UAAWsK,KAAQC,SAAU7B,QAAS2B,KAGzCG,GAA8C,SAAC,GAAkB,IAAhBvK,EAAe,EAAfA,SAC1D,OACI,qBAAKD,UAAWsK,KAAQG,MAAxB,SACI,qBAAKzK,UAAWsK,KAAQI,QAAxB,SAAkCzK,OAKxC0K,GAAgBC,SAASC,eAAe,YAEjCC,GAAkC,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,QAASpK,EAAe,EAAfA,SACvD,OACI,eAAC,WAAD,WACK0K,GACKI,IAASC,aACL,cAAC,GAAD,CAAUX,QAASA,IACnBM,IAEJ,KACLA,GACKI,IAASC,aACL,cAAC,GAAD,UAAe/K,IACf0K,IAEJ,S,6BCxBLM,GAAoD,SAAC,GAE3D,IADHZ,EACE,EADFA,QAEA,EAAwB1C,mBAAS,IAAjC,mBAAOtE,EAAP,KAAa6H,EAAb,KACA,EAAsBvD,mBAAS,IAA/B,mBAAOwD,EAAP,KAAYC,EAAZ,KACM1F,EAAWgC,cAmBjB,OACI,cAAC,GAAD,CAAO2C,QAASA,EAAhB,SACI,sBAAKrK,UAAWG,KAAOG,QAAvB,UACI,kCACI,kDACA,uBACA,cAAC,EAAD,CACIY,SAxBU,SAACW,GAC3BqJ,EAAQrJ,EAAEC,cAAcC,QAwBRsB,KAAK,OACLgI,UAAQ,EACRtJ,MAAOsB,OAGf,kCACI,mDACA,uBACA,cAAC,EAAD,CACInC,SA/BS,SAACW,GAC1BuJ,EAAOvJ,EAAEC,cAAcC,QA+BPsB,KAAK,MACLgI,UAAQ,EACRtJ,MAAOoJ,OAIf,cAAC,EAAD,CAAQzC,QAlCE,YACdrF,GAAQ8H,KACRzF,ERkDoB,SAACrC,EAAciI,GAC3C,OAAO,SAAC5F,GACJA,EAASH,GAAe,YACxBtC,EACgBI,EAAMiI,GACjB1F,MAAK,SAACC,GACHH,EAnCL,CACHnD,KAAM,mBACN6C,QAAS,CAAEmG,SAiCuB1F,EAAIE,KAAKyF,kBAEtCxF,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,kBQlEnBkG,CAAiBpI,EAAM8H,IAChCD,EAAQ,IACRE,EAAO,KAGXf,KA2BwCrK,UAAWG,KAAOgK,IAAlD,oBAGA,8BACI,cAAC,KAAD,CAASzB,QAAS2B,EAASrK,UAAWG,KAAOuL,eC7CpDC,GAAS,SAACC,GACnB,IAAMtG,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UAC1D,OACI,sBAAKtF,UAAWG,KAAOG,QAAvB,UACKsL,EAAMC,WACH,cAAC,GAAD,CAAgBxB,QAASuB,EAAME,mBAGnC,sBAAK9L,UAAWG,KAAO4L,QAAvB,UACI,qBACI/L,UAAWG,KAAOmD,OAClB7C,IACmB,MAAfmL,EAAMI,MACA,2FACAJ,EAAMI,MAEhBrL,IAAI,WAER,6BAAKiL,EAAMvI,OACX,oBAAIqF,QAASkD,EAAMK,iBAAnB,0BACA,cAAC,EAAD,CACIxD,SAAqB,YAAXnD,EACVoD,QAASkD,EAAMM,cAFnB,2BChCVtH,GAAoC,CACtCuH,UAAW,CACP,CACI7H,IAAK,GACL8H,QAAS,GACTC,UAAW,GACXC,SAAS,EACTjJ,KAAM,GACNkJ,WAAY,EACZrH,QAAS,IAAIsH,OAGrBC,cAAe,EACfC,cAAe,IACf7I,YAAa,EACbC,UAAW,GACX6I,oBAAqB,EACrB3I,OAAQ,GACR4I,QAAS,GACTC,YAAa,IAgDJC,GAAa,SAACX,GACvB,MAAO,CAAC5J,KAAM,YAAa6C,QAAS,CAAC+G,eAW5BY,GAAuB,SAACJ,GACjC,MAAO,CACHpK,KAAM,wBACN6C,QAAS,CACLuH,yBAsCCK,GACT,kBAAiB,SAACtH,EAAUuH,GACxB,IAAMC,EAAQD,IAAWC,MACnBrJ,EAAcqJ,EAAMrJ,YACpBC,EAAYoJ,EAAMpJ,UAClBC,EAAWmJ,EAAML,YACjB5I,EAAMiJ,EAAMT,cACZvI,EAAMgJ,EAAMR,cAClBhH,EAASH,GAAe,YAExB3B,EACcC,EAAaC,EAAWC,EAAU,GAAIE,EAAKC,GACpD0B,MAAK,SAACC,GACHH,EAASoH,GAAWjH,EAAIE,KAAKoG,YAC7BzG,EAASqH,GAAqBlH,EAAIE,KAAK4G,sBACvCjH,EAzCgB,SAACzB,EAAaC,GAC1C,MAAO,CACH3B,KAAM,mBACN6C,QAAS,CACLnB,MACAC,QAoCaiJ,CAAiBlJ,EAAKC,OAElC8B,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,mB,8BC5FzB6H,GA/CsC,SAAC,GAGO,IAFHC,EAEE,EAFFA,cACAtL,EACE,EADFA,MAMtD,OACI,8BACI,cAACuL,GAAA,EAAD,CACItN,UAAWG,KAAOmN,OAClBC,MAAO,UACPxL,MAAOA,EACPb,SAVS,SAACsM,EAAcC,GAChCJ,GAAiBA,EAAcI,IAUvBC,kBAAkB,KAClBC,GAAI,CACAJ,MAAO,UACP,qBAAsB,CAClBK,gBAAiB,WAErB,qCAAsC,CAClCA,gBAAiB,QACjBC,MAAO,GACPC,OAAQ,IAEZ,6DACI,CACIF,gBAAiB,UACjBC,MAAO,GACPC,OAAQ,GACRC,KAAM,GAEd,2CAA4C,CACxCF,MAAO,EACPC,OAAQ,GAEZ,8BAA+B,CAC3BF,gBAAiB,UACjBI,QAAS,U,oBC3CpBC,GAA0C,SAAC,GAAkB,IAAhBhO,EAAe,EAAfA,SACtD,OAAO,qBAAKD,UAAWG,KAAOmB,MAAvB,SAA+BrB,K,oBCJ7BiO,GAA0C,SAACtC,GAUpD,IATA,IACIuC,EAKAvC,EALAuC,YACAC,EAIAxC,EAJAwC,UACAC,EAGAzC,EAHAyC,eACAC,EAEA1C,EAFA0C,oBACAC,EACA3C,EADA2C,YAEAC,EAAaC,KAAKC,KAAKL,EAAiBD,GACxCO,EAAkB,GACbC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,MAA0CjH,mBAAS,GAAnD,mBAAOmH,EAAP,KAAsBC,EAAtB,KACIC,EAAeP,KAAKC,KAAKF,EAAaD,GACtCU,GAAyBH,EAAgB,GAAKP,EAAc,EAC5DW,EAAyBJ,EAAgBP,EAE7C,OACI,sBAAKvO,UAAWG,KAAOgP,UAAvB,UACKL,EAAgB,GACb,cAAC,KAAD,CACI9O,UAAWG,KAAOuL,KAClBhD,QAAS,WACLqG,EAAiBD,EAAgB,IAHzC,sBAUHH,EACIS,QACG,SAACC,GAAD,OACIA,GAAKJ,GACLI,GAAKH,KAEZI,KAAI,SAACD,GACF,OACI,sBAEIrP,UACImO,IAAgBkB,EAAIlP,KAAOoP,aAAe,GAE9C7G,QAAS,WACL4F,EAAoBe,IAN5B,SASKA,GARIA,MAYpBL,EAAeF,GACZ,cAAC,KAAD,CACI9O,UAAWG,KAAOuL,KAClBhD,QAAS,WACLqG,EAAiBD,EAAgB,IAHzC,sB,oBCzDD,OAA0B,uCCA9BU,GAAa,SAAUC,EAAgBC,GAC9C,OAAOD,EAAOC,OAASA,EACjBD,EAAOE,UAAU,EAAGD,GAAU,MAC9BD,GCHK,OAA0B,iC,oBCK5BG,GAAY,WACrB,IAAMjF,EAAgBC,SAASC,eAAe,YAC9C,OACI,cAAC,WAAD,UACKF,GACGI,IAASC,aACL,qBAAKhL,UAAWG,KAAOoK,SAAvB,SACI,qBACIvK,UAAWG,KAAO0P,IAClBpP,IAAKqP,GACLnP,IAAI,cAGZgK,MCdd/F,GAAoC,CACtCmL,MAAO,CACH,CACIzL,IAAK,GACLE,aAAc,GACdE,OAAQ,GACRD,SAAU,GACVuL,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRhL,QAAS,IAAIsH,OAGrBC,cAAe,EACfC,cAAe,EACf7I,YAAa,EACbC,UAAW,GACXyI,WAAY,EACZ4D,WAAY,IAiEHC,GACT,SAAC/L,GAAD,OACA,SAACqB,EAAUuH,GACP,IAAM8C,EAAQ9C,IAAW8C,MACnBlM,EAAckM,EAAMlM,YACpBC,EAAYiM,EAAMjM,UACxB4B,EAASH,GAAe,YACxBhB,EACcF,EAAQR,EAAaC,GAC9B8B,MAAK,SAACC,GACHH,EAxCU,SAACqK,GACvB,MAAO,CAAExN,KAAM,YAAa6C,QAAS,CAAE2K,UAuClBM,CAAWxK,EAAIE,KAAKgK,QAC7BrK,EA5BL,CACHnD,KAAM,cACN6C,QAAS,CACLpB,OAyByB6B,EAAIE,KAAKoK,cAC9BzK,EArBL,CACHnD,KAAM,wBACN6C,QAAS,CACLmH,WAkB6B1G,EAAIE,KAAKuK,sBAErCtK,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,mBCjG3BgL,GAAkC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAAStD,EAAmB,EAAnBA,MAAO6C,EAAY,EAAZA,MACxDrK,EAAWgC,cACXpC,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UACpDtB,EAASoD,aAAY,SAACC,GAAD,OAAqBA,EAAMxC,QAAQA,QAAQP,OAChEmM,EAAkBrJ,aACpB,SAACC,GAAD,OAAqBA,EAAM0I,MAAMI,cAiHrC,OACI,wBAAOnQ,UAAWG,KAAOuQ,MAAzB,UACgB,YAAXpL,GAAwB,cAAC,GAAD,IACzB,gCACI,6BACKkL,EAAQlB,KAAI,SAACqB,EAAQC,GAClB,OACI,oBAAIC,MAAM,MAAV,SACKF,GADgBC,UAOrC,kCACK1D,GA7HO,SAACA,GACjB,OAAOA,EAAMoC,KAAI,SAACwB,GAAD,OACb,+BACI,6BAAKtB,GAAWsB,EAAKzN,KAAM,KAC3B,6BAAKyN,EAAKvE,aACV,6BAAKiD,GAAWsB,EAAK5L,QAAQ6L,WAAY,MACzC,6BAAKvB,GAAWsB,EAAKzE,UAAW,MAChC,6BACI,cAAC,IAAD,CAASvE,GAAE,yBAAoBgJ,EAAKxM,KAApC,SACI,qBAAK7D,IAAKuQ,GAAWrQ,IAAI,cAGjC,6BACI,wBAAQX,UAAWG,KAAO8Q,QAA1B,qBAEJ,6BACKH,EAAK1E,UAAYpI,EACd,wBACIhE,UAAWG,KAAO+Q,UAClBxI,QAAS,WTmKjC,IAACrE,ESlK2BqB,GTkK3BrB,ESlKiDyM,EAAKxM,ITmKnD,SAACoB,GACGA,EAASH,GAAe,YACxB3B,EACgBS,GACXuB,MAAK,SAACC,GACHH,EAASsH,SAEZhH,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBSjLZsD,YAAW,WACPnD,EAASF,GAAa,OACvB,MANX,oBAYA,KAGR,6BACKsL,EAAK1E,UAAYpI,EACd,wBACIhE,UAAWG,KAAO8Q,QAClBvI,QAAS,WTsKjC,IAACrE,EAAgB8M,ESrKWzL,GTqK3BrB,ESpK4CyM,EAAKxM,IToKjC6M,ESpKsC,mBTqKnD,SAACzL,GACGA,EAASH,GAAe,YACxB3B,EACgBS,EAAQ8M,GACnBvL,MAAK,SAACC,GACHH,EAASsH,SAEZhH,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBSlLZsD,YAAW,WACPnD,EAASF,GAAa,OACvB,MARX,kBAcA,OA9CHsL,EAAKxM,QA2HA8M,CAAYlE,GACrB6C,GAtEO,SAACA,GACjB,OAAOA,EAAMT,KAAI,SAAClP,GAAD,OACb,+BACI,6BAAKoP,GAAWpP,EAAKqE,SAAU,MAC/B,6BAAKrE,EAAKsE,SACV,6BAAK8K,GAAWpP,EAAK8E,QAAQ6L,WAAY,MACzC,6BAAK3Q,EAAK8P,SACV,6BACKO,IAAoBzM,EACjB,wBACIhE,UAAWG,KAAO+Q,UAClBxI,QAAS,WD8CjC,IAAC2I,EAAgBC,EC7CW5L,GD6C3B2L,EC5C4CjR,EAAKkE,ID4CjCgN,EC5CsClR,EAAKoE,aD6C5D,SAACkB,GACGA,EAASH,GAAe,YACxBhB,EACgB8M,GACXzL,MAAK,SAACC,GACHH,EAAS0K,GAAWkB,OAEvBtL,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBC1DRsD,YAAW,WACPnD,EAASF,GAAa,OACvB,MARX,oBAcA,KAGR,6BACKiL,IAAoBzM,EACjB,wBACIhE,UAAWG,KAAO8Q,QAClBvI,QAAS,WD+CjC,IACI2I,EACAC,EACA7M,EACAC,EClDwBgB,GD+CxB2L,EC7CgCjR,EAAKkE,ID8CrCgN,EC7CgClR,EAAKoE,aD8CrCC,EC7CgC,uBD8ChCC,EC7CgC,qBD+CpC,SAACgB,GACGA,EAASH,GAAe,YACxBhB,GACgB8M,EAAQ5M,EAAUC,GAC7BkB,MAAK,SAACC,GACHH,EAAS0K,GAAWkB,OAEvBtL,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBC3DRsD,YAAW,WACPnD,EAASF,GAAa,OACvB,MAbX,kBAmBA,OA7CHpF,EAAKkE,QAoEAiN,CAAYxB,U,wCCzIzByB,GAA6C,SAAC,GAAiB,IAAfnH,EAAc,EAAdA,QACzD,EAA0B1C,mBAAS,IAAnC,mBAAOwJ,EAAP,KAAcM,EAAd,KAIM/L,EAAWgC,cAMjB,OACI,cAAC,GAAD,CAAO2C,QAASA,EAAhB,SACI,sBAAKrK,UAAWG,KAAOG,QAAvB,UACI,kCACI,sDACA,uBACA,cAAC,EAAD,CACIY,SAhBM,SAACW,GACvB4P,EAAS5P,EAAEC,cAAcC,QAgBTsB,KAAK,OACLgI,UAAQ,EACRtJ,MAAOoP,OAIf,cAAC,EAAD,CAAQzI,QAlBE,WVsKtB,IAACgJ,EUrKGhM,GVqKHgM,EUrKsBP,EVsKnB,SAACzL,GACGA,EAASH,GAAe,YACxB3B,EACa8N,GACR9L,MAAK,SAACC,GACHH,EAASsH,SAEZhH,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,oBUpLpC8E,KAgBwCrK,UAAWG,KAAOgK,IAAlD,gBAGA,8BACI,cAAC,KAAD,CAASzB,QAAS2B,EAASrK,UAAWG,KAAOuL,eCnBpDiG,GAAQ,WACjB,MAAkChK,oBAAS,GAA3C,mBAAOkE,EAAP,KAAkB+F,EAAlB,KACA,EAAoCjK,mBAAS,IAA7C,mBAAOkK,EAAP,KAAmBC,EAAnB,KACMvK,EAAeH,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlG,SAC1D4L,EAAQ9F,aAAY,SAACC,GAAD,OAAqBA,EAAM6F,MAAMf,aACrDlI,EAAMmD,aAAY,SAACC,GAAD,OAAqBA,EAAM6F,MAAMT,iBACnDvI,EAAMkD,aAAY,SAACC,GAAD,OAAqBA,EAAM6F,MAAMR,iBACnD5I,EAAYsD,aAAY,SAACC,GAAD,OAAqBA,EAAM6F,MAAMpJ,aACzDiO,EAAkB3K,aACpB,SAACC,GAAD,OAAqBA,EAAM6F,MAAMP,uBAE/B9I,EAAcuD,aAChB,SAACC,GAAD,OAAqBA,EAAM6F,MAAMrJ,eAG/B6B,EAAWgC,cACjBG,qBAAU,WACNnC,EAASsH,QACV,CAACtH,IAEJ,IAAMsM,EAAsBC,uBACxB,SAACC,GACGxM,EXkCoB,SAAC7B,GAC7B,MAAO,CACHtB,KAAM,mBACN6C,QAAS,CACLvB,gBWtCSsO,CAAiBD,IAC1BxM,EAASsH,QAEb,CAACtH,IAkBC0M,EAAoBH,uBAAY,WAClCvM,GX2Fa,SAACA,EAAUuH,GACxB,IAAMC,EAAQD,IAAWC,MACnBrJ,EAAcqJ,EAAMrJ,YACpBC,EAAYoJ,EAAMpJ,UAClBE,EAASiJ,IAAWpI,QAAQA,QAAQP,IACpCP,EAAWmJ,EAAML,YACjB5I,EAAMiJ,EAAMT,cACZvI,EAAMgJ,EAAMR,cAClBhH,EAASH,GAAe,YACxB3B,EACcC,EAAaC,EAAWC,EAAUC,EAAQC,EAAKC,GACxD0B,MAAK,SAACC,GACHH,EAASoH,GAAWjH,EAAIE,KAAKoG,YAC7BzG,EAASqH,GAAqBlH,EAAIE,KAAK4G,yBAE1C3G,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,sBWjHjC,CAACG,IACE2M,EAAqBJ,uBAAY,WACnCvM,EAASsH,QACV,CAACtH,IAEJ,EAA0BiC,mBAAmB,CAAC1D,EAAKC,IAAnD,mBAAOnC,EAAP,KAAcuQ,EAAd,KAEMC,EAA2BN,uBAC7B,SAAClQ,GACG2D,EXmCiB,SAAC3D,GAC1B,MAAO,CACHQ,KAAM,gBACN6C,QAAS,CACLrD,UWvCSyQ,CAAczQ,EAAM,KAC7B2D,EX0CiB,SAAC3D,GAC1B,MAAO,CACHQ,KAAM,gBACN6C,QAAS,CACLrD,UW9CS0Q,CAAc1Q,EAAM,KAC7BuQ,EAASvQ,KAEb,CAAC2D,IAGL,OACI,sBAAK1F,UAAWG,KAAOG,QAAvB,UACKiH,GAAgB,cAAC,GAAD,UAAWA,IAC3BsE,GACG,cAAC,GAAD,CACIxB,QAAS,WACLuH,GAAa,MAIzB,sBAAK5R,UAAWG,KAAOuS,QAAvB,UACI,kDACA,sBAAK1S,UAAWG,KAAOwS,WAAvB,UACI,qBAAKjK,QAAS0J,EAAmBpS,UAAWG,KAAOyS,QAAnD,gBAGA,qBAAKlK,QAAS2J,EAAoBrS,UAAWG,KAAO0S,OAApD,oBAIJ,qBAAK7S,UAAWG,KAAO2S,mBAAvB,SACI,oDAGJ,sBAAK9S,UAAWG,KAAO4S,gBAAvB,UACI,iDACA,qBAAK/S,UAAWG,KAAO6S,cAAvB,SACI,cAACC,GAAD,CACIlR,MAAOA,EACPsL,cAAekF,YAK/B,sBAAKvS,UAAWG,KAAO+S,UAAvB,UACI,4CACA,sBAAKlT,UAAWG,KAAOgT,OAAvB,UACI,uBACI5Q,KAAK,OACLiH,YAAY,YACZtI,SAAU,SAACW,GAAD,OAzEJ,SAACE,GACvB+P,EAAc/P,GACd2D,EX2CG,CACHnD,KAAM,mBACN6C,QAAS,CACLgO,YW9CsBvB,KAwENwB,CAAkBxR,EAAEC,cAAcC,UAG1C,sBAAK/B,UAAWG,KAAOmT,YAAvB,UACI,cAAC,EAAD,CACItT,UAAWG,KAAOoT,UAClB7K,QAAS,kBAAMhD,EAASsH,OAF5B,oBAMA,cAAC,EAAD,CACIhN,UAAWG,KAAOoT,UAClB7K,QAAS,WACLkJ,GAAa,IAHrB,gCAUR,sBAAK5R,UAAWG,KAAOqT,aAAvB,UACI,cAAC,GAAD,CAAOhD,QA1FP,CACZ,YACA,cACA,UACA,aACA,QACA,UACA,GACA,IAkFqCtD,MAAOA,IAChC,cAAC,GAAD,CACIiB,YAAatK,EACbuK,UAAWtK,EACXuK,eAAgB0D,EAChBxD,YAAa,GACbD,oBAAqB0D,cCtIhCyB,GAA8B,SAAC7H,GACxC,OACI,yBAAQ5L,UAAW4L,EAAM5L,UAAzB,UACK4L,EAAM8H,UACH9H,EAAM+H,WAAWrE,KAAI,SAACsE,EAAGhF,GAAJ,OACjB,cAAC,IAAD,CAAiB9G,GAAI8L,EAAEC,KAAvB,SACKD,EAAEE,MADOlF,MAKrBhD,EAAMmI,aACH,sBAAK/T,UAAU,yBAAf,UACI,8CACA,qBAAKA,UAAU,cAAf,SACK4L,EAAM+H,WAAWrE,KAAI,SAACsE,EAAGhF,GAAJ,OAClB,cAAC,IAAD,CAEIoF,gBAAiB,SACjBlM,GAAI8L,EAAEC,KAHV,SAKKD,EAAEE,MAJElF,eCnBxBqF,GAAU,WACnB,MAAkCtM,oBAAS,GAA3C,mBAAOkE,EAAP,KAAkB+F,EAAlB,KACMlM,EAAWgC,cACXwM,EAAa9M,aAAY,SAACC,GAAD,OAAqBA,EAAMC,MAAMd,UAC1DnD,EAAO+D,aAAY,SAACC,GAAD,uBAAqBA,EAAMxC,QAAQA,eAAnC,aAAqB,EAAuBxB,QAC/D2I,EAAQ5E,aACV,SAACC,GAAD,uBAAqBA,EAAMxC,QAAQA,eAAnC,aAAqB,EAAuBvB,UAG1C2I,EAAmB,WACrB2F,GAAa,IAEX9F,EAAmB,WACrB8F,GAAa,IAEX1F,EAAgB,WAClBxG,GhC4FoC,SAACA,GACzCA,EAASH,GAAe,YACxBtC,IAEK2C,MAAK,SAACC,GACHH,EAASI,IAAU,IACnBJ,EAASiB,IAAc,IACvBjB,EAASe,GAAS,QAErBT,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASmB,GAAiBvF,OAE7B+E,SAAQ,WACLX,EAASH,GAAe,qBgC3GhC,OAAK2O,EAKD,qCACI,cAAC,GAAD,CACIP,WAAYQ,GACZnU,UAAWG,KAAOwQ,OAClBoD,aAAW,IAGf,eAAC,IAAD,WACI,cAAC,IAAD,CACIK,OAAK,EACLP,KAAM9L,GAAKsM,eACXC,OAAQ,kBACJ,cAAC,GAAD,CACItI,MAAOA,EACP3I,KAAMA,EACN4I,iBAAkBA,EAClBC,cAAeA,EACfL,UAAWA,EACXC,iBAAkBA,OAK9B,cAAC,IAAD,CACIsI,OAAK,EACLP,KAAM9L,GAAKwM,cACXD,OAAQ,kBAAM,cAAC,GAAD,aA9BnB,cAAC,IAAD,CAAUxM,GAAIC,GAAK4B,S,4BClBrB6K,GAAW,WACpB,MAAwB7M,mBAA4B,CAChDjH,MAAO,GACP+T,eAAgB,GAChBC,gBAAiB,KAHrB,mBAAOC,EAAP,KAAaC,EAAb,KAKA,EAAkCjN,oBAAS,GAA3C,mBAAOkN,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,SAAClT,GACvB,MAAwBA,EAAEC,cAAlBuB,EAAR,EAAQA,KACFoK,EADN,EAAc1L,MAEd6S,EAAQ,2BACDD,GADA,mBAEFtR,EAAOoK,MAGVzG,EAAeI,aACjB,SAACC,GAAD,OAAqBA,EAAM2N,SAAShO,gBAElCO,EAAeH,aAAY,SAACC,GAAD,OAAqBA,EAAM2N,SAAS1T,SAC/DoE,EAAWgC,cACXuN,EAAUC,cACV5P,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UAmB1D,OAAI0B,EACO,cAAC,IAAD,CAAUc,GAAIC,GAAK4B,QAG1B,gCACKpC,GAAgB,cAAC,GAAD,UAAWA,IAC5B,qBAAKvH,UAAWG,KAAOG,QAAvB,SACI,eAAC,EAAD,CAAMN,UAAWG,KAAO6U,SAAxB,UACI,8CAEA,qBAAKhV,UAAWG,KAAO8H,YAAvB,SACI,iCACI,yCACA,sBAAKjI,UAAWG,KAAOgI,UAAvB,UACI,kCACI,yCACA,uBACA,cAAC,EAAD,CACIjH,SAAU6T,EACV1R,KAAK,QACLd,KAAK,OACL8I,UAAQ,EACRtJ,MAAO4S,EAAKjU,WAIpB,8BACKmU,IACIF,EAAKjU,OACN,yBAIZ,sBACIV,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOiI,WAD7C,UAGI,kCACI,4CACA,uBACA,cAAC,EAAD,CACIlH,SAAU6T,EACV1R,KAAK,iBACLd,KAAK,WACL8I,UAAQ,EACRtJ,MAAO4S,EAAKF,oBAIpB,8BACKI,IACIF,EAAKF,gBACN,6BAGZ,sBACIzU,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOiI,WAD7C,UAGI,kCACI,oDACA,uBACA,cAAC,EAAD,CACIlH,SAAU6T,EACV1R,KAAK,kBACLd,KAAK,WACL8I,UAAQ,EACRtJ,MAAO4S,EAAKD,qBAIpB,8BACKG,GACGF,EAAKD,kBACDC,EAAKF,gBACTE,EAAKD,gBAAgBhF,OAAS,GAC9B,4BAGR,8BACKmF,IACIF,EAAKD,iBACN,yCAIZ,sBACI1U,UAAS,UAAKG,KAAOgI,UAAZ,YAAyBhI,KAAOqI,iBAD7C,UAGI,cAAC,EAAD,CACIxI,UAAWG,KAAOgV,UAClBhT,QAAM,EACNuG,QAAS,WACLuM,EAAQG,UAJhB,oBASA,cAAC,EAAD,CACIpV,UAAWG,KAAOkV,YAClB9S,KAAM,SACNmG,QArHhC,SAAsB7G,GtBSI,IAACnB,EAAewC,EsBRtCrB,EAAE8G,iBACFmM,GAAa,GAETH,EAAKjU,OACLiU,EAAKF,gBACLE,EAAKD,iBACLC,EAAKF,iBAAmBE,EAAKD,kBAE7BhP,GtBAmBhF,EsBAKiU,EAAKjU,MtBAKwC,EsBAEyR,EAAKF,etBC1C,SAAC/O,GACJA,EAASH,GAAe,YACxBtC,EACcvC,EAAOwC,GAChB0C,MAAK,SAACC,GACHH,EAASwB,IAAkB,OAE9BlB,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASuB,GAAkB3F,OAE9B+E,SAAQ,WACLX,EAASH,GAAe,oBsBf5BqP,EAAQ,CAAElU,MAAO,GAAI+T,eAAgB,GAAIC,gBAAiB,KAC1D7L,YAAW,WACPnD,EAASuB,GAAkB,OAC5B,KACH6N,GAAa,KAwGWrM,SAAqB,YAAXnD,EAJd,uC,4FCzHnBgQ,GAA2C,SAAC,GAMnD,EALFC,UAKG,IAJHC,EAIE,EAJFA,OACAnU,EAGE,EAHFA,QACAoU,EAEE,EAFFA,UACGjU,EACD,kBACF,EAAgCmG,oBAAkB,GAAlD,mBAAO+N,EAAP,KAAiBC,EAAjB,KACA,EACIF,GAAa,GADTxV,EAAR,EAAQA,SAAU2V,EAAlB,EAAkBA,cAAe5V,EAAjC,EAAiCA,UAAc6V,EAA/C,kBAmBMtU,EAAmB,+KAAN,WAA4CvB,GAE/D,OACI,mCACK0V,EACG,cAAC,EAAD,aACIH,WAAS,EACTC,OApBO,SAAC3T,GACpB8T,GAAY,GAEZH,GAAUA,EAAO3T,IAkBLR,QAxBQ,WACpBA,GAAWA,MAwBKG,IAGR,+CACIoU,cArBc,SAC1B/T,GAEA8T,GAAY,GAEZC,GAAiBA,EAAc/T,IAiBnB7B,UAAWuB,GACPsU,GAHR,cAKI,cAAC,KAAD,CAAQC,MAAO,CAAEC,SAAU,YAAe,IACzC9V,GAAYuB,EAAUO,a,qFCxD9BiU,GAAkC,SAAC,GAQ1C,EAPJzT,KAOK,IANLc,EAMI,EANJA,KACA4S,EAKI,EALJA,QACAlU,EAII,EAJJA,MACAb,EAGI,EAHJA,SACAgV,EAEI,EAFJA,eAGMC,GADF,kBACqB,SAACtU,GACxBX,GAAYA,EAASW,GACrBqU,GAAkBA,EAAerU,EAAEC,cAAcC,SAG7CqU,EAAuBH,EACzBA,EAAQ3G,KAAI,SAAC+G,EAAGzH,GAAJ,OACV,kCACE,uBACE5O,UAAWa,KAAEyV,YACb/T,KAAK,QACLc,KAAMA,EACNtB,MAAOsU,EACP5T,QAASV,IAAUsU,EACnBnV,SAAUiV,IAEXE,IATShT,EAAO,IAAMuL,MAY3B,GAEJ,OAAO,qBAAK5O,UAAWa,KAAE0V,aAAlB,SAAiCH,K,+DC9B7BI,GAAoC,SAAC,GAK3C,IAJLP,EAII,EAJJA,QACA/U,EAGI,EAHJA,SACAgV,EAEI,EAFJA,eACG1U,EACC,kBACE4U,EAAuBH,EACzBA,EAAQ3G,KAAI,SAAC+G,EAAGzH,GACd,OAAO,iCAAiByH,GAAJzH,MAEtB,GAQJ,OACE,qBAAK5O,UAAWa,KAAE4V,OAAlB,SACE,gDAAQvV,SARa,SAACW,GACxBX,GAAYA,EAASW,GACrBqU,GAAkBA,EAAerU,EAAEC,cAAcC,OACjDoE,QAAQC,IAAI,UAAYvE,EAAEC,cAAcC,SAKEP,GAAxC,aACG4U,Q,+ECtBIM,GAAkC,SAAC,GAO1C,EANJnU,KAMK,IALLrB,EAKI,EALJA,SACAmM,EAII,EAJJA,cAGG7L,GACC,EAHJxB,UAGI,EAFJ+B,MAEI,mBAQJ,OACE,qBAAK/B,UAAWG,KAAOG,QAAvB,SACE,sBAAKN,UAAWG,KAAOwW,UAAvB,UACE,qBAAK3W,UAAWG,KAAOyW,cACvB,mCACErU,KAAM,QACNvC,UAAWG,KAAO0W,YAClB3V,SAdiB,SAACW,GACxBX,GAAYA,EAASW,GACrBwL,GAAiBA,GAAexL,EAAEC,cAAcC,SAatCP,U,oBC1BDsV,GAAW,WACpB,IAAMC,EAAgB,CAAC,QAAS,QAAS,UACzC,EAAgCpP,mBAASoP,EAAI,IAA7C,mBAAOhV,EAAP,KAAcmU,EAAd,KACA,EAAoCvO,mBAAS,IAA7C,mBAAOqP,EAAP,KAAmBC,EAAnB,KACA,EAA8BtP,oBAAkB,GAAhD,mBAAOlF,EAAP,KAAgByU,EAAhB,KACA,EAAgCvP,qBAAhC,mBAAOzB,EAAP,KAAiBiR,EAAjB,KAoEA,OACI,qCACI,cAAC,GAAD,CACIxD,WAAYyD,GACZpX,UAAWG,KAAOwQ,OAClB+C,UAAQ,IAGZ,sBACIoC,MAAO,CACHuB,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZ1J,OAAQ,OACR2J,UAAW,QAPnB,UAUI,cAAC,EAAD,qBACA,cAAC,EAAD,CAAUhV,QAASA,EAASvB,SAtFnB,SAACW,GAClBqV,EAAWrV,EAAEC,cAAcW,YAsFnB,cAAC,GAAD,IACA,cAAC,GAAD,CACIV,MAAOA,EACPkU,QAASc,EACTb,eAAgBA,IAEpB,cAAC,EAAD,IACA,sBAAMJ,MAAO,CAAEC,SAAU,UAAzB,SAAsCiB,IACtC,cAAC,GAAD,CAAO3J,cA5FG,SAACtL,GACnBkV,EAAclV,IA2F+BA,MAAOiV,IAC5C,cAAC,GAAD,CACIjV,MAAOA,EACPkU,QAASc,EACTb,eAAgBA,IAEpB,sBAAKlW,UAAWG,KAAOuX,gBAAvB,UACI,cAAC,EAAD,CAAQhP,QAhGV,WACVzF,EACW,mBAAoB,aAAa,GACvC2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OAyFR,2BACA,cAAC,EAAD,CAAQyC,QA7EP,WACbzF,EACc,sBAAuB,aAChC2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OAsER,sBACA,cAAC,EAAD,CAAQyC,QAxFb,WACPzF,IAEK2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OAiFR,uBACA,cAAC,EAAD,CAAQyC,QArEL,WACfzF,EACgB,WAAY,2CACvB2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OA8DR,yBACA,cAAC,EAAD,CAAQyC,QA5DT,WACXzF,IAEK2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OAqDR,oBACA,cAAC,EAAD,CAAQyC,QAnDD,WACnBzF,EACoB,kBACf2C,MAAK,SAACC,GACHsR,EAAYQ,KAAKC,UAAU/R,EAAIE,UAElCC,OAAM,SAACC,GACJE,QAAQC,IAAIH,OA4CR,gCAEJ,qBAAK6P,MAAO,CAAEjI,MAAO,SAArB,SAAiC3H,W,oBCvHpC2R,GAA0C,SAAC,GAGjD,IAFHxN,EAEE,EAFFA,QACAhG,EACE,EADFA,OAEA,EAAgCsD,mBAAS,IAAzC,mBAAOlD,EAAP,KAAiBqT,EAAjB,KACA,EAA4BnQ,mBAAS,IAArC,mBAAOjD,EAAP,KAAeqT,EAAf,KAOMrS,EAAWgC,cAMjB,OACI,cAAC,GAAD,CAAO2C,QAASA,EAAhB,SACI,sBAAKrK,UAAWG,KAAOG,QAAvB,UACI,kCACI,kDACA,uBACA,cAAC,EAAD,CACIY,SAnBc,SAACW,GAC/BiW,EAAYjW,EAAEC,cAAcC,QAmBZsB,KAAK,WACLgI,UAAQ,EACRtJ,MAAO0C,OAGf,kCACI,gDACA,uBAEA,cAAC,EAAD,CACIvD,SA3BY,SAACW,GAC7BkW,EAAUlW,EAAEC,cAAcC,QA2BVsB,KAAK,SACLgI,UAAQ,EACRtJ,MAAO2C,OAIf,cAAC,EAAD,CAAQgE,QA7BE,WAClBhD,EZyFJ,SAAC4L,EAAqB7M,EAAkBC,GAAxC,OACA,SAACgB,GACGA,EAASH,GAAe,YACxBhB,EACa+M,EAAa7M,EAAUC,GAC/BkB,MAAK,SAACC,GACHH,EAAS0K,GAAWkB,OAEvBtL,OAAM,SAACC,GACJ,IAAM3E,EAAQ2E,EAAIC,SACZD,EAAIC,SAASH,KAAKzE,MAClB2E,EAAIvC,QAAU,gCACpByC,QAAQC,IAAI,OAAQ9E,GACpBoE,EAASF,GAAalE,OAEzB+E,SAAQ,WACLX,EAASH,GAAe,kBYzGvByS,CAAU3T,EAAQI,EAAUC,IACrC2F,KA2BwCrK,UAAWG,KAAOgK,IAAlD,gBAGA,8BACI,cAAC,KAAD,CAASzB,QAAS2B,EAASrK,UAAWG,KAAOuL,e,oBCxCpDuM,GAAQ,WACjB,IAAMvS,EAAWgC,cACTrD,EAAW2F,cAAX3F,OACFL,EAASoD,aAAY,SAACC,GAAD,OAAqBA,EAAMxC,QAAQA,QAAQP,OAChEmM,EAAkBrJ,aACpB,SAACC,GAAD,OAAqBA,EAAM0I,MAAMI,cAE/B4B,EAAkB3K,aACpB,SAACC,GAAD,OAAqBA,EAAM0I,MAAMxD,cAE/B1I,EAAcuD,aAChB,SAACC,GAAD,OAAqBA,EAAM0I,MAAMlM,eAG/BC,EAAYsD,aAAY,SAACC,GAAD,OAAqBA,EAAM0I,MAAMjM,aAMzDiM,EAAQ3I,aAAY,SAACC,GAAD,OAAqBA,EAAM0I,MAAMA,SAC3D,EAAkCpI,oBAAS,GAA3C,mBAAOkE,EAAP,KAAkB+F,EAAlB,KACMrK,EAAeH,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlG,SAChEuG,qBAAU,WACNnC,EAAS0K,GAAW/L,IACpBwE,YAAW,WACPnD,EAASF,GAAa,OACvB,OACJ,CAACE,EAAUrB,IAWd,OACI,qCACKkD,GAAgB,cAAC,GAAD,UAAWA,IAC3BsE,GACG,cAAC,GAAD,CACIxB,QAAS,WACLuH,GAAa,IAEjBvN,OAAQA,IAGhB,cAAC,GAAD,CACIsP,WAAYQ,GACZnU,UAAWG,KAAOwQ,OAClBoD,aAAW,IAEf,sBAAK/T,UAAWG,KAAOuK,QAAvB,UACK1G,IAAWyM,GACR,cAAC,EAAD,CACIzQ,UAAWG,KAAOgK,IAClBzB,QAAS,WACLkJ,GAAa,IAHrB,sBASJ,cAAC,EAAD,CAAM5R,UAAWG,KAAOG,QAAxB,SACsB,IAAjByP,EAAML,OACH,qBAAK1P,UAAWG,KAAO+X,MAAvB,SACI,kEAGJ,gCACI,cAAC,GAAD,CAAO1H,QA3Cf,CACZ,WACA,SACA,eACA,QACA,UACA,IAqC6CT,MAAOA,IAChC,cAAC,GAAD,CACI5B,YAAatK,EACbuK,UAAWtK,EACXuK,eAAgB0D,EAChBxD,YAAa,GACbD,oBAhEA,SAAC4D,GACzBxM,Eb6BwB,SAAC7B,GAC7B,MAAO,CACHtB,KAAM,mBACN6C,QAAS,CACLvB,gBajCKsO,CAAiBD,IAC1BxM,EAAS0K,GAAW/L,mBCtBf0D,GAAO,CAChB4B,MAAO,SACPwO,KAAM,QACNC,gBAAiB,0BACjB7P,kBAAmB,qBACnBP,QAAS,WACTqM,eAAgB,kBAChBE,cAAe,iBACf8D,cAAe,yBACftP,SAAU,YACVQ,YAAa,eACb+O,MAAO,eAGEnE,GAAkB,CAC3B,CAAEN,KAAM9L,GAAKwM,cAAeT,KAAM,cAClC,CAAED,KAAM9L,GAAKsM,eAAgBP,KAAM,YAG1BsD,GAAe,CACxB,CAAEvD,KAAM9L,GAAK4B,MAAOmK,KAAM,SAC1B,CAAED,KAAM9L,GAAKgB,SAAU+K,KAAM,YAC7B,CAAED,KAAM9L,GAAKC,QAAS8L,KAAM,WAC5B,CAAED,KAAM9L,GAAKqQ,gBAAiBtE,KAAM,mBACpC,CAAED,KAAM9L,GAAKQ,kBAAmBuL,KAAM,qBACtC,CAAED,KAAM9L,GAAKwB,YAAauK,KAAM,eAChC,CAAED,KAAM9L,GAAKuQ,MAAOxE,KAAM,cA8DfyE,GA3DA,WACX,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CACInE,OAAK,EACLP,KAAM,IACNS,OAAQ,kBAAM,cAAC,IAAD,CAAUxM,GAAIC,GAAK4B,WAErC,cAAC,IAAD,CAAOyK,OAAK,EAACP,KAAM9L,GAAKoQ,KAAM7D,OAAQ,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOF,OAAK,EAACP,KAAM9L,GAAK4B,MAAO2K,OAAQ,kBAAM,cAAC,GAAD,OAC7C,cAAC,IAAD,CAAOF,OAAK,EAACP,KAAM9L,GAAKgB,SAAUuL,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKC,QACXsM,OAAQ,kBAAM,cAAC,IAAD,CAAUxM,GAAIC,GAAKsM,oBAErC,cAAC,IAAD,CACID,OAAK,EACLP,KAAM9L,GAAKsM,eACXC,OAAQ,kBAAM,cAAC,GAAD,OAElB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKwM,cACXD,OAAQ,kBAAM,cAAC,GAAD,OAElB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKsQ,cACX/D,OAAQ,kBAAM,cAAC,GAAD,OAElB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKqQ,gBACX9D,OAAQ,kBAAM,cAAC,GAAD,OAElB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKQ,kBACX+L,OAAQ,kBAAM,cAAC,GAAD,OAElB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKwB,YACX+K,OAAQ,kBAAM,cAAC,EAAD,OAGlB,cAAC,IAAD,CACIF,OAAK,EACLP,KAAM9L,GAAKC,QACXsM,OAAQ,kBAAM,cAAC,IAAD,CAAUxM,GAAIC,GAAKsM,oBAErC,cAAC,IAAD,CAAOD,OAAK,EAACE,OAAQ,kBAAM,cAAC,EAAD,aCxD5BkE,OA5Bf,WACI,IAAM9S,EAAWgC,cACXrC,EAAgB+B,aAClB,SAACC,GAAD,OAAWA,EAAMG,IAAInC,iBAGzBc,QAAQC,IAAIf,GAEZ,IAAMC,EAAS8B,aAAY,SAACC,GAAD,OAAqBA,EAAMG,IAAIlC,UAO1D,OANAuC,qBAAU,WACDxC,GACDK,EAASD,QAEd,CAACC,IAECL,EAID,cAAC,IAAD,UACI,sBAAKrF,UAAU,MAAf,UACgB,YAAXsF,GAAwB,cAAC,GAAD,IACzB,cAAC,GAAD,SAND,cAAC,GAAD,K,kBCdTmT,GAAWC,aAAgB,CAC7BpR,M3CWwB,WAGC,IAFzBD,EAEwB,uDAFOzC,GAC/BsD,EACwB,uCACxB,OAAQA,EAAO3F,MACX,KAAKzC,EAAa4G,UAClB,KAAK5G,EAAa8G,gBAClB,KAAK9G,EAAagH,mBACd,OAAO,2BACAO,GADP,IAEItB,KAAK,2BACEsB,EAAMtB,MACNmC,EAAO9C,QAAQW,QAG9B,KAAKjG,EAAaiH,gBACd,OAAO,2BACAM,GADP,IAEIb,OAAQ0B,EAAO9C,QAAQoB,SAI/B,QACI,OAAOa,I2CjCf2N,ShCJ2B,WAGC,IAF5B3N,EAE2B,uDAFnBzC,GACRsD,EAC2B,uCAC3B,OAAQA,EAAO3F,MACX,IAAK,mBACD,OAAO,2BACA8E,GADP,IAEIL,aAAckB,EAAO9C,QAAQ4B,eAErC,IAAK,mBACD,OAAO,2BACAK,GADP,IAEI/F,MAAO4G,EAAO9C,QAAQ9D,QAG9B,QACI,OAAO+F,IgCZfiC,O9BJyB,WAGD,IAFxBjC,EAEuB,uDAFfzC,GACRsD,EACuB,uCACvB,OAAQA,EAAO3F,MACX,IAAK,iBACD,OAAO,2BAAK8E,GAAZ,IAAmB2B,YAAad,EAAOc,cAE3C,IAAK,WACD,OAAO,2BAAK3B,GAAZ,IAAmB/F,MAAO4G,EAAO5G,QAErC,QACI,OAAO+F,I8BPfxC,QlCK0B,WAGC,IAF3BwC,EAE0B,uDAFlBzC,GACRsD,EAC0B,uCAC1B,OAAQA,EAAO3F,MACX,IAAK,mBACD,OAAO,2BACA8E,GADP,IAEIxC,QAASqD,EAAO9C,QAAQP,UAEhC,IAAK,mBACD,OAAO,2BACAwC,GADP,IAEIxC,QAASqD,EAAO9C,QAAQmG,WAEhC,QACI,OAAOlE,IkCpBfG,IjCPsB,WAGC,IAFvBH,EAEsB,uDAFdzC,GACRsD,EACsB,uCACtB,OAAQA,EAAO3F,MACX,IAAK,qBACD,OAAO,2BAAK8E,GAAZ,IAAmBhC,eAAe,IACtC,IAAK,cACD,OAAO,2BACAgC,GADP,IAEI/F,MAAO4G,EAAO9C,QAAQ9D,QAG9B,IAAK,aACD,OAAO,2BACA+F,GADP,IAEI/B,OAAQ4C,EAAO9C,QAAQE,SAE/B,QACI,OAAO+B,IiCXf6F,MxBSwB,WAGD,IAFvB7F,EAEsB,uDAFdzC,GACRsD,EACsB,uCACtB,OAAQA,EAAO3F,MACX,IAAK,YACD,OAAO,2BACA8E,GADP,IAEI8E,UAAWjE,EAAO9C,QAAQ+G,UAAUmD,KAAI,SAACD,GAAD,OAAOA,OAEvD,IAAK,mBACD,OAAO,2BAAIhI,GAAX,IAAkBwF,YAAa3E,EAAO9C,QAAQgO,cAClD,IAAK,mBACD,OAAO,2BACA/L,GADP,IAEIxD,YAAaqE,EAAO9C,QAAQvB,cAEpC,IAAK,wBACD,OAAO,2BACAwD,GADP,IAEIsF,oBAAqBzE,EAAO9C,QAAQuH,sBAE5C,IAAK,mBACD,OAAO,2BACAtF,GADP,IAEIoF,cAAevE,EAAO9C,QAAQnB,IAC9ByI,cAAexE,EAAO9C,QAAQlB,MAEtC,IAAK,gBACD,OAAO,2BACAmD,GADP,IAEIoF,cAAevE,EAAO9C,QAAQrD,QAGtC,IAAK,gBACD,OAAO,2BACAsF,GADP,IAEIqF,cAAexE,EAAO9C,QAAQrD,QAEtC,QACI,OAAOsF,IwBhDf0I,MhBOwB,WAGD,IAFvB1I,EAEsB,uDAFdzC,GACRsD,EACsB,uCACtB,OAAQA,EAAO3F,MACX,IAAK,YACD,OAAO,2BACA8E,GADP,IAEI0I,MAAO7H,EAAO9C,QAAQ2K,MAAMT,KAAI,SAACD,GAAD,OAAOA,OAE/C,IAAK,mBACD,OAAO,2BACAhI,GADP,IAEIxD,YAAaqE,EAAO9C,QAAQvB,cAEpC,IAAK,wBACD,OAAO,2BACAwD,GADP,IAEIkF,WAAYrE,EAAO9C,QAAQmH,aAEnC,IAAK,cACD,OAAO,2BACAlF,GADP,IAEI8I,WAAYjI,EAAO9C,QAAQpB,SAGnC,QACI,OAAOqD,MgB/BbsR,GAAQC,aAAYH,GAAUI,aAAgBC,OAErCH,MAcfI,OAAOJ,MAAQA,GC9Bf5N,IAASuJ,OACP,cAAC,IAAD,CAAUqE,MAAOA,GAAjB,SACE,cAAC,GAAD,MAGF/N,SAASC,eAAe,W","file":"static/js/main.5afae54d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2nZF2\",\"login\":\"Login_login__3bGOo\",\"formGroup\":\"Login_formGroup__1mLpb\",\"formGroupButton\":\"Login_formGroupButton__36Uht\",\"formWrapper\":\"Login_formWrapper__3_vIr\",\"shapeIcon\":\"Login_shapeIcon__ttv2N\",\"formGroupPassword\":\"Login_formGroupPassword__3N_L9\",\"navLinkGroup\":\"Login_navLinkGroup__3UUe9\",\"formGroupCheckbox\":\"Login_formGroupCheckbox__1B3Wh\",\"error\":\"Login_error__3S8wI\",\"errorMessage\":\"Login_errorMessage__1eavA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Packs_wrapper__1Hyqu\",\"sidebar\":\"Packs_sidebar__b3wBY\",\"packsList\":\"Packs_packsList__3Hv6X\",\"avatar\":\"Packs_avatar__2rbUT\",\"search\":\"Packs_search__2nBBK\",\"tableWrapper\":\"Packs_tableWrapper__3pwPz\",\"btnWrapper\":\"Packs_btnWrapper__22AOc\",\"sideBtn\":\"Packs_sideBtn__18akZ\",\"active\":\"Packs_active__3E_Xo\",\"showPacksComponent\":\"Packs_showPacksComponent__oW-5S\",\"sliderComponent\":\"Packs_sliderComponent__KRnu6\",\"sliderWrapper\":\"Packs_sliderWrapper__2S3v-\",\"btnsWrapper\":\"Packs_btnsWrapper__25Ego\",\"searchBtn\":\"Packs_searchBtn__2y8Ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__3Mzwm\",\"formGroup\":\"Register_formGroup__3NaLC\",\"formWrapper\":\"Register_formWrapper__W0pMq\",\"shapeIcon\":\"Register_shapeIcon__1HD9f\",\"formGroupPassword\":\"Register_formGroupPassword__2lXkl\",\"formGroupButton\":\"Register_formGroupButton__Wu6a-\",\"register\":\"Register_register__13bP2\",\"cancelBtn\":\"Register_cancelBtn__I6ssU\",\"registerBtn\":\"Register_registerBtn__kAj6a\",\"errorMessage\":\"Register_errorMessage__2XUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Password_wrapper__CwIC7\",\"login\":\"Password_login__2Kopu\",\"formGroup\":\"Password_formGroup__1r9mZ\",\"formGroupButton\":\"Password_formGroupButton__1CTkn\",\"formWrapper\":\"Password_formWrapper__xFoHs\",\"shapeIcon\":\"Password_shapeIcon__cEhkM\",\"formGroupEmail\":\"Password_formGroupEmail__3cId9\",\"formGroupPassword\":\"Password_formGroupPassword__2hHk1\",\"navLinkGroup\":\"Password_navLinkGroup__1KeuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Table_btn__2JHCv\",\"table\":\"Table_table__2hyAW\",\"deleteBtn\":\"Table_deleteBtn__23Nnt\",\"editBtn\":\"Table_editBtn___uLUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__1xmS2\",\"wrapper\":\"Profile_wrapper__2Uikn\",\"packsList\":\"Profile_packsList__2OCgf\",\"avatar\":\"Profile_avatar__2kCod\",\"infoBox\":\"Profile_infoBox__2VlGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2m7fh\",\"red\":\"Button_red__3NxY9\",\"purple\":\"Button_purple__1VZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParrwordUpdate_wrapper__1JVPh\",\"emailChecking\":\"ParrwordUpdate_emailChecking__1jv_W\",\"formGroup\":\"ParrwordUpdate_formGroup__18BLr\",\"formGroupButton\":\"ParrwordUpdate_formGroupButton__24Fqd\",\"shapeIcon\":\"ParrwordUpdate_shapeIcon__1AoJb\",\"formGroupPassword\":\"ParrwordUpdate_formGroupPassword__2JdVu\",\"btn\":\"ParrwordUpdate_btn__3HTpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cards_wrapper__16gSS\",\"empty\":\"Cards_empty__2q-If\",\"header\":\"Cards_header__2cbgX\",\"btn\":\"Cards_btn__pUb7y\",\"content\":\"Cards_content__uJJrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2VJhJ\",\"errorCode\":\"Error404_errorCode__1hweM\",\"errorText\":\"Error404_errorText__3oDLo\",\"errorImg\":\"Error404_errorImg__36Ohx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__u9U08\",\"paginator\":\"Paginator_paginator__38pSh\",\"icon\":\"Paginator_icon__1rZ9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1JBTV\",\"container\":\"Range_container__3Gx5H\",\"doubleRange\":\"Range_doubleRange__GRGaW\",\"sliderTrack\":\"Range_sliderTrack__yDQc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CheckEmail_wrapper__OGehe\",\"emailChecking\":\"CheckEmail_emailChecking__3GTFe\",\"iconWrapper\":\"CheckEmail_iconWrapper__30MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__1KeHF\",\"errorInput\":\"Input_errorInput__3awlA\",\"error\":\"Input_error__2tyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3BvH4\",\"modal\":\"Modal_modal__pDR1O\",\"slide-down\":\"Modal_slide-down__2v6xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeUserInfo_wrapper__2nzhx\",\"btn\":\"ChangeUserInfo_btn__7xG9b\",\"icon\":\"ChangeUserInfo_icon__24fT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpdatePack_wrapper__3Xvar\",\"btn\":\"UpdatePack_btn__1KRFg\",\"icon\":\"UpdatePack_icon__2heAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCard_wrapper__2HupJ\",\"btn\":\"AddCard_btn__2O0Hi\",\"icon\":\"AddCard_icon__2Lq6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__p8QPx\",\"backdrop\":\"Preloader_backdrop__3CXgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3fXfH\",\"optionInput\":\"Radio_optionInput__1aJb4\",\"click-wave\":\"Radio_click-wave__3DnWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestsWrapper\":\"TestPage_requestsWrapper__oxvBU\",\"header\":\"TestPage_header__cy-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3S60v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorMes_error__2nnof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select___hJwW\"};","import { ThunkType } from \"./store\";\r\nimport { authAPI, UserType } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { setUserProfileAC } from \"./profileReducer\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_EMAIL = \"Login/SET-EMAIL\",\r\n    SET_REMEMBER_ME = \"Login/SET-REMEMBER-ME\",\r\n    SHOW_ERROR_MESSAGE = \"Login/SHOW-ERROR-MESSAGE\",\r\n    SET_AUTH_STATUS = \"Login/SET-AUTH-STATUS\",\r\n    SAVE_DATA_USER = \"Login/SAVE-DATA-USER\",\r\n}\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    data: {\r\n        email: \"\",\r\n        password: \"\",\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n};\r\n\r\nexport const loginReducer = (\r\n    state: LoginInitialStateType = initialState,\r\n    action: ActionLoginTypes\r\n): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_EMAIL:\r\n        case ACTIONS_TYPE.SET_REMEMBER_ME:\r\n        case ACTIONS_TYPE.SHOW_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload.data,\r\n                },\r\n            };\r\n        case ACTIONS_TYPE.SET_AUTH_STATUS: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setEmail = (email: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_EMAIL,\r\n        payload: {\r\n            data: { email },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setRememberMe = (rememberMe: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_REMEMBER_ME,\r\n        payload: {\r\n            data: { rememberMe },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const showErrorMessage = (error: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SHOW_ERROR_MESSAGE,\r\n        payload: {\r\n            data: { error },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const saveDataUser = (data: UserType) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SAVE_DATA_USER,\r\n        payload: { data },\r\n    } as const;\r\n};\r\n\r\nexport const setStatus = (isAuth: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_AUTH_STATUS,\r\n        payload: { isAuth },\r\n    } as const;\r\n};\r\n\r\n// Thunk\r\nexport const loginUserData = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(showErrorMessage(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutThunk = (): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            dispatch(setStatus(false));\r\n            dispatch(setRememberMe(false));\r\n            dispatch(setEmail(\"\"));\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : err.message + \", more details in the console\";\r\n            console.log(\"err:\", error);\r\n            dispatch(showErrorMessage(error));\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        });\r\n};\r\n// Types\r\nexport type LoginInitialStateType = { isAuth: boolean; data: DataType };\r\ntype DataType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n    error: string;\r\n};\r\nexport type ActionLoginTypes =\r\n    | ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setRememberMe>\r\n    | ReturnType<typeof showErrorMessage>\r\n    | ReturnType<typeof setStatus>;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\nexport const Card: React.FC<DefaultDivPropsType> = ({\r\n  className,\r\n  children,\r\n}) => {\r\n  const finalClasses = `${styles.card} ${className ? className : \"\"}`;\r\n  return <div className={finalClasses}>{children}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mail.995de1e6.svg\";","import React from \"react\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport styles from \"./CheckEmail.module.css\";\r\nimport email from \"./../../assets/images/mail.svg\";\r\n\r\nexport const CheckEmail = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <div className={styles.iconWrapper}>\r\n                    <img src={email} alt=\"Sending messafe\" />\r\n                </div>\r\n                <h2>Check Email</h2>\r\n                <p>\r\n                    We've sent an email with instructions to example@gmail.com\r\n                </p>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.errorCode}>404</div>\r\n      <div className={s.errorText}>There is nothing to do here...</div>\r\n      <img\r\n        src=\"https://www.seekpng.com/png/full/359-3590327_shopify-stores-sad-robot-shopify.png\"\r\n        alt=\"robot\"\r\n        className={s.errorImg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Input: React.FC<InputPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    onEnter && e.key === \"Enter\" && onEnter();\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n  purple?: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({\r\n  red,\r\n  purple,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${\r\n    red\r\n      ? `${s.default} ${s.red}`\r\n      : purple\r\n      ? `${s.default} ${s.purple}`\r\n      : s.default\r\n  } ${className}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n      <label className={s.label}></label>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nlet backend_URL_ADDRESS = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst instance = axios.create({\r\n    baseURL: backend_URL_ADDRESS,\r\n    withCredentials: true,\r\n});\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    me() {\r\n        return instance.post<UserType>(`auth/me`);\r\n    },\r\n    changeInfo(name: string, avatar: string) {\r\n        return instance.put<ChangeInfoResponseType>(`auth/me`, {\r\n            name,\r\n            avatar,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`);\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ForgotPasswordResponseType>(`auth/forgot`, {\r\n            email,\r\n            from: \"ai73a@yandex.by\",\r\n            message: `<div style=\"background-color: #d9d9f1; margin: 0 auto; padding: 2.5rem; display-flex;  flex-direction: column; align-items: center; justify-content: center; border-radius: 8px\"><h2>Forgot your password?</h2><p>That's ok, it happens! Click on the button below to reset your password.</p> <a href='http://localhost:3000/?#/password-update/$token$'><button style=\"background-color: #21268f; color: #ececf9; padding: 10px 20px; border-radius: 8px;  text-decoration: none;  border: none; cursor:pointer; border-radius: 30px;\">Reset your password</button></a></div>`,\r\n        });\r\n    },\r\n    resetPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResetPasswordResponseType>(\r\n            `auth/set-new-password`,\r\n            {\r\n                password,\r\n                resetPasswordToken,\r\n            }\r\n        );\r\n    },\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks(\r\n        currentPage: number,\r\n        pageCount: number,\r\n        packName: string,\r\n        userId: string | null,\r\n        min: number,\r\n        max: number\r\n    ) {\r\n        return instance.get<PacksResponseType>(\r\n            `cards/pack?pageCount=${pageCount}&page=${currentPage}&packName=${packName}&user_id=${userId}&min=${min}&max=${max}`\r\n        );\r\n    },\r\n    addPack(name: string) {\r\n        return instance.post<AddPackResponseType>(`cards/pack`, {\r\n            cardsPack: { name },\r\n        });\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<DeletedPackResponseType>(\r\n            `cards/pack?id=${packId}`\r\n        );\r\n    },\r\n    updatePack(_id: string, name: string) {\r\n        return instance.put<UpdatedPackResponseType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name,\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\nexport const cardsAPI = {\r\n    getCards(packId: string, currentPage: number, pageCount: number) {\r\n        return instance.get<GetCadrsResponseType>(\r\n            `cards/card?cardsPack_id=${packId}&pageCount=${pageCount}&page=${currentPage}`\r\n        );\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post<AddedCardResponseType>(`cards/card`, {\r\n            card: { cardsPack_id, question, answer },\r\n        });\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete<DeletedCardResponseType>(`cards/card?id=${id}`);\r\n    },\r\n    updateCard(_id: string, question: string, answer: string) {\r\n        return instance.put<UpdatedCardResponseType>(`cards/card`, {\r\n            card: { _id, question, answer },\r\n        });\r\n    },\r\n};\r\n\r\n//Types\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    avatar: string;\r\n    error: string;\r\n};\r\n\r\nexport type AddedUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: 0;\r\n    created: Date;\r\n    updated: Date;\r\n};\r\nexport type RegisterResponseType = {\r\n    addedUser: AddedUserType;\r\n    error?: string;\r\n};\r\n\r\nexport type ChangeInfoResponseType = {\r\n    updatedUser: UserType;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\nexport type LogoutResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\nexport type ForgotPasswordResponseType = {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n    error?: string;\r\n};\r\nexport type ResetPasswordResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\n\r\nexport type CardsPackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    type: string;\r\n    rating: 0;\r\n    updated: Date;\r\n};\r\nexport type PacksResponseType = {\r\n    cardPacks: CardsPackType[];\r\n    page: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    token: string;\r\n};\r\nexport type AddPackResponseType = {\r\n    newCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type DeletedPackResponseType = {\r\n    deletedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\nexport type UpdatedPackResponseType = {\r\n    updatedCardsPack: CardsPackType;\r\n    token: string;\r\n};\r\n\r\nexport type GetCadrsResponseType = {\r\n    cards: CardType[];\r\n    packUserId: string;\r\n    page: number;\r\n    pageCount: number;\r\n    cardsTotalCount: number;\r\n    minGrade: number;\r\n    maxGrade: number;\r\n};\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n    type: string;\r\n    rating: number;\r\n    updated: Date;\r\n};\r\nexport type AddedCardResponseType = {\r\n    newCard: CardType;\r\n};\r\nexport type DeletedCardResponseType = {\r\n    deletedCard: CardType;\r\n};\r\nexport type UpdatedCardResponseType = {\r\n    updatedCard: CardType;\r\n};\r\n","import { authAPI } from \"../api/api\";\r\nimport { catchErrorAC, setAppStatusAC } from \"./appReducer\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: null,\r\n        email: null,\r\n        rememberMe: null,\r\n        isAdmin: null,\r\n        name: null,\r\n        verified: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        avatar: null,\r\n    },\r\n};\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ActionProfileTypes\r\n): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile,\r\n            };\r\n        case \"CHANGE_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.userData,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setUserProfileAC = (profile: DataUserType) => {\r\n    return { type: \"SET_USER_PROFILE\", payload: { profile } } as const;\r\n};\r\n\r\nexport const changeUserDataAC = (userData: DataUserType) => {\r\n    return {\r\n        type: \"CHANGE_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const setAuthTC = (): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                dispatch(setStatus(true));\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\nexport const changeUserInfoTC = (name: string, imgUrl: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .changeInfo(name, imgUrl)\r\n            .then((res) => {\r\n                dispatch(changeUserDataAC(res.data.updatedUser));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionProfileTypes =\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof changeUserDataAC>;\r\nexport type ProfileInitialStateType = {\r\n    profile: DataUserType;\r\n};\r\ntype DataUserType = {\r\n    _id: string | null;\r\n    email: string | null;\r\n    rememberMe: boolean | null;\r\n    isAdmin: boolean | null;\r\n    name: string | null;\r\n    verified: boolean | null;\r\n    publicCardPacksCount: number | null;\r\n    created: Date | null;\r\n    updated: Date | null;\r\n    avatar: string | null;\r\n};\r\n","import { setAuthTC } from \"./profileReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    isInitialized: false,\r\n    status: \"idle\",\r\n    error: \"\",\r\n};\r\n\r\nexport const appReducer = (\r\n    state = initialState,\r\n    action: ActionAppTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALISATION\":\r\n            return { ...state, isInitialized: true };\r\n        case \"CATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.payload.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setIsInitializedAC = () => {\r\n    return {\r\n        type: \"SET-INITIALISATION\",\r\n    } as const;\r\n};\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        payload: {\r\n            status,\r\n        },\r\n    } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n    return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\n// Thunks\r\n\r\nexport const initializeAppThunk = (): ThunkType => (dispatch) => {\r\n    const promise = dispatch(setAuthTC());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(setIsInitializedAC());\r\n    });\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes =\r\n    | ReturnType<typeof setIsInitializedAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof catchErrorAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    isInitialized: boolean;\r\n    status: RequestStatusType;\r\n    error: string;\r\n};\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: RegisterInitialStateType = {\r\n    error: \"\",\r\n    isRegistered: false,\r\n};\r\n\r\nexport const registerReducer = (\r\n    state = initialState,\r\n    action: ActionRegisterTypes\r\n): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isRegistered: action.payload.isRegistered,\r\n            };\r\n        case \"REGISTER_FAILURE\":\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerFailureAC = (error: string) => {\r\n    return {\r\n        type: \"REGISTER_FAILURE\",\r\n        payload: { error },\r\n    } as const;\r\n};\r\nexport const registerSuccessAC = (isRegistered: boolean) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: { isRegistered },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const registerUserTC = (email: string, password: string): ThunkType => {\r\n    return (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .register(email, password)\r\n            .then((res) => {\r\n                dispatch(registerSuccessAC(true));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(registerFailureAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionRegisterTypes =\r\n    | ReturnType<typeof registerFailureAC>\r\n    | ReturnType<typeof registerSuccessAC>;\r\n\r\nexport type RegisterInitialStateType = { isRegistered: boolean; error: string };\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { loginUserData, setEmail, setRememberMe, showErrorMessage, } from \"../../redux/loginReducer\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { registerSuccessAC } from \"../../redux/registerReducer\";\r\n\r\nexport const Login = () => {\r\n    const email = useSelector((state: AppStore) => state.login.data.email);\r\n    const rememberMe = useSelector(\r\n        (state: AppStore) => state.login.data.rememberMe\r\n    );\r\n    const errorMessage = useSelector(\r\n        (state: AppStore) => state.login.data.error\r\n    );\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const isLogin = useSelector((state: AppStore) => state.login.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(registerSuccessAC(false));\r\n    }, [dispatch])\r\n\r\n    const onCheckboxClick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRememberMe(e.currentTarget.checked));\r\n    };\r\n\r\n    const onEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value));\r\n    };\r\n\r\n    const onPasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitClick = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        dispatch(loginUserData(email, password, rememberMe));\r\n        dispatch(showErrorMessage(errorMessage));\r\n\r\n        setTimeout(() => {\r\n            dispatch(showErrorMessage(\"\"));\r\n        }, 3000);\r\n    };\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Sign In</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={email}\r\n                                    onChange={onEmailInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                        >\r\n                            <label>\r\n                                <span>Password</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={onPasswordInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupCheckbox}`}\r\n                        >\r\n                            <label>\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={onCheckboxClick}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupPassword}`}\r\n                        >\r\n                            {errorMessage && (\r\n                                <span className={styles.errorMessage}>{errorMessage}</span>\r\n                            )}\r\n                            <NavLink to={PATH.PASSWORD_RECOVERY}>\r\n                                Forgot Password\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                        >\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                disabled={status === \"loading\"}\r\n                                onClick={onSubmitClick}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <p>\r\n                    Don’t have an account?\r\n                </p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.REGISTER}> Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { ThunkType } from \"./store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { setAppStatusAC } from \"./appReducer\";\r\n\r\nconst initialState: AuthInitialStateType = {\r\n    initialized: false, // transfer to succesful succesful page\r\n    error: false, // show error page\r\n};\r\n\r\nexport const forgotReducer = (\r\n    state = initialState,\r\n    action: ActionForgotTypes\r\n): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"setInitialized\":\r\n            return { ...state, initialized: action.initialized };\r\n\r\n        case \"setError\":\r\n            return { ...state, error: action.error };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Thunk one love)))\r\nexport const sendEmailThunkCreator =\r\n    (email: string) => (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .forgotPassword(email)\r\n            .then(() => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const sendNewPasswordThunkCreator =\r\n    (email: string, token: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        authAPI\r\n            .resetPassword(email, token)\r\n            .then((res) => {\r\n                dispatch(setInitializedAC(true));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setErrorAC(true));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n//Action Creators\r\n\r\nexport const setInitializedAC = (initialized: boolean) => {\r\n    return { type: \"setInitialized\", initialized } as const;\r\n};\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>;\r\n\r\nexport const setErrorAC = (error: boolean) => {\r\n    return { type: \"setError\", error } as const;\r\n};\r\nexport type seErrorAT = ReturnType<typeof setErrorAC>;\r\n\r\nexport type ActionForgotTypes = setInitializedAT | seErrorAT;\r\n\r\n// Types\r\n\r\nexport type AuthInitialStateType = {\r\n    initialized: boolean;\r\n    error: boolean;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Password.module.css\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendEmailThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialized = useSelector<AppStore, boolean>(\r\n        (state) => state.forgot.initialized\r\n    );\r\n    const error = useSelector<AppStore, boolean>((state) => state.forgot.error);\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    if (initialized) {\r\n        return <Redirect to={PATH.EMAIL_CHECK} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.PROFILE} />;\r\n    }\r\n    const buttonCallback = () => {\r\n        dispatch(sendEmailThunkCreator(mail));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Forgot your password?</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={\"......\"}\r\n                                    onChange={(e) => setMail(e.target.value)}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupEmail}`}\r\n                        >\r\n                            <span>\r\n                                Enter your email address and we will send you\r\n                                further instructions\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                >\r\n                    <Button\r\n                        disabled={status === \"loading\"}\r\n                        type={\"submit\"}\r\n                        onClick={buttonCallback}\r\n                    >\r\n                        Send instructions\r\n                    </Button>\r\n                </div>\r\n\r\n                <p>Did you remember your password?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={PATH.LOGIN}> Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { sendNewPasswordThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport styles from \"./ParrwordUpdate.module.css\";\r\n\r\nexport const PasswordUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const { token } = useParams<TokenType>();\r\n    const success = useSelector((state: AppStore) => state.forgot.initialized);\r\n    const handleInputNewPassChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value);\r\n    };\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const dispatch = useDispatch();\r\n    const submitHandler = () => {\r\n        dispatch(sendNewPasswordThunkCreator(newPassword, token));\r\n    };\r\n    if (success === true) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Create new password</h2>\r\n                <div className={`${styles.formGroup} ${styles.shapeIcon}`}>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <br />\r\n                        <Input\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassChange}\r\n                            value={newPassword}\r\n                        />\r\n                    </label>\r\n                    <p>\r\n                        Create new password and we will send you futher\r\n                        instructions to email\r\n                    </p>\r\n                </div>\r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={status === \"loading\"}\r\n                    className={styles.btn}\r\n                >\r\n                    Create new password\r\n                </Button>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Types\r\ntype TokenType = {\r\n    token: string;\r\n};\r\n","import { DetailedHTMLProps, Fragment, HTMLAttributes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nexport const Backdrop: React.FC<ModalPropsType> = ({ onClose }) => {\r\n    return <div className={classes.backdrop} onClick={onClose} />;\r\n};\r\n\r\nexport const ModalOverlay: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({ onClose, children }) => {\r\n    return (\r\n        <Fragment>\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <Backdrop onClose={onClose} />,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <ModalOverlay>{children}</ModalOverlay>,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\ntype ModalPropsType = DefaultDivPropsType & { onClose?: () => void };\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserInfoTC } from \"../../redux/profileReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangeUserInfo.module.css\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const ChangeUserInfo: React.FC<ChangeUserInfoPropsType> = ({\r\n    onClose,\r\n}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const handleInputUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(e.currentTarget.value);\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if (name || url) {\r\n            dispatch(changeUserInfoTC(name, url));\r\n            setName(\"\");\r\n            setUrl(\"\");\r\n        }\r\n\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new name</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputNameChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={name}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter image url</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputUrlChange}\r\n                        name=\"url\"\r\n                        required\r\n                        value={url}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Submit\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChangeUserInfoPropsType = { onClose: () => void };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { ChangeUserInfo } from \"../changeUserInfo/ChangeUserInfo\";\r\nimport styles from \"../Profile/Profile.module.css\";\r\n\r\ntype PersonPropsType = {\r\n    photo?: string | null;\r\n    name?: string | null;\r\n    showModalHandler: () => void;\r\n    logoutHandler: () => void;\r\n    showModal: boolean;\r\n    hideModalHandler: () => void;\r\n};\r\n\r\nexport const Person = (props: PersonPropsType) => {\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.showModal && (\r\n                <ChangeUserInfo onClose={props.hideModalHandler} />\r\n            )}\r\n\r\n            <div className={styles.infoBox}>\r\n                <img\r\n                    className={styles.avatar}\r\n                    src={\r\n                        props.photo == null\r\n                            ? \"https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png\"\r\n                            : props.photo\r\n                    }\r\n                    alt=\"avatar\"\r\n                />\r\n                <h3>{props.name}</h3>\r\n                <h4 onClick={props.showModalHandler}>Edit profile</h4>\r\n                <Button\r\n                    disabled={status === \"loading\"}\r\n                    onClick={props.logoutHandler}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import {packsAPI} from \"../api/api\";\r\nimport {catchErrorAC, setAppStatusAC} from \"./appReducer\";\r\nimport {AppStore, ThunkType} from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"\",\r\n            user_id: \"\",\r\n            user_name: \"\",\r\n            private: false,\r\n            name: \"\",\r\n            cardsCount: 0,\r\n            updated: new Date(),\r\n        },\r\n    ],\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    cardPacksTotalCount: 0,\r\n    userId: \"\",\r\n    packsId: \"\",\r\n    searchPacks: \"\",\r\n};\r\n\r\nexport const packsReducer = (\r\n    state = initialState,\r\n    action: ActionPacksTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_PACKS\":\r\n            return {\r\n                ...state,\r\n                cardPacks: action.payload.cardPacks.map((p) => p),\r\n            };\r\n        case \"SET_SEARCH_PACKS\":\r\n            return {...state, searchPacks: action.payload.searchValue};\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n            };\r\n        case \"SET_PACKS_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksTotalCount: action.payload.cardPacksTotalCount,\r\n            };\r\n        case \"SET_RANGE_VALUES\":\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.payload.min,\r\n                maxCardsCount: action.payload.max,\r\n            };\r\n        case \"SET_MIN_VALUE\":\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.payload.value,\r\n                // minCardsCount: sorted1[0].cardsCount,\r\n            };\r\n        case \"SET_MAX_VALUE\":\r\n            return {\r\n                ...state,\r\n                maxCardsCount: action.payload.value,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setPacksAC = (cardPacks: PackType[]) => {\r\n    return {type: \"SET_PACKS\", payload: {cardPacks}} as const;\r\n};\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_PAGE\",\r\n        payload: {\r\n            currentPage,\r\n        },\r\n    } as const;\r\n};\r\nexport const setPacksTotalCountAC = (cardPacksTotalCount: number) => {\r\n    return {\r\n        type: \"SET_PACKS_TOTAL_COUNT\",\r\n        payload: {\r\n            cardPacksTotalCount,\r\n        },\r\n    } as const;\r\n};\r\nexport const setSearchPacksAC = (searchValue: string) => {\r\n    return {\r\n        type: \"SET_SEARCH_PACKS\",\r\n        payload: {\r\n            searchValue,\r\n        },\r\n    } as const;\r\n};\r\nexport const setRangeValuesAC = (min: number, max: number) => {\r\n    return {\r\n        type: \"SET_RANGE_VALUES\",\r\n        payload: {\r\n            min,\r\n            max,\r\n        },\r\n    } as const;\r\n};\r\nexport const setMinValueAC = (value: number) => {\r\n    return {\r\n        type: \"SET_MIN_VALUE\",\r\n        payload: {\r\n            value,\r\n        },\r\n    } as const;\r\n};\r\nexport const setMaxValueAC = (value: number) => {\r\n    return {\r\n        type: \"SET_MAX_VALUE\",\r\n        payload: {\r\n            value,\r\n        },\r\n    } as const;\r\n};\r\n// Thunks\r\nexport const getPacksTC =\r\n    (): ThunkType => (dispatch, getState: () => AppStore) => {\r\n        const packs = getState().packs;\r\n        const currentPage = packs.currentPage;\r\n        const pageCount = packs.pageCount;\r\n        const packName = packs.searchPacks;\r\n        const min = packs.minCardsCount;\r\n        const max = packs.maxCardsCount;\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n\r\n        packsAPI\r\n            .getPacks(currentPage, pageCount, packName, \"\", min, max)\r\n            .then((res) => {\r\n                dispatch(setPacksAC(res.data.cardPacks));\r\n                dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount));\r\n                dispatch(setRangeValuesAC(min, max))\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const getMyPacksTC =\r\n    (): ThunkType => (dispatch, getState: () => AppStore) => {\r\n        const packs = getState().packs;\r\n        const currentPage = packs.currentPage;\r\n        const pageCount = packs.pageCount;\r\n        const userId = getState().profile.profile._id;\r\n        const packName = packs.searchPacks;\r\n        const min = packs.minCardsCount;\r\n        const max = packs.maxCardsCount;\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        packsAPI\r\n            .getPacks(currentPage, pageCount, packName, userId, min, max)\r\n            .then((res) => {\r\n                dispatch(setPacksAC(res.data.cardPacks));\r\n                dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\nexport const addPackTC =\r\n    (newPackName: string): ThunkType =>\r\n        (dispatch) => {\r\n            dispatch(setAppStatusAC(\"loading\"));\r\n            packsAPI\r\n                .addPack(newPackName)\r\n                .then((res) => {\r\n                    dispatch(getPacksTC());\r\n                })\r\n                .catch((err) => {\r\n                    const error = err.response\r\n                        ? err.response.data.error\r\n                        : err.message + \", more details in the console\";\r\n                    console.log(\"err:\", error);\r\n                    dispatch(catchErrorAC(error));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setAppStatusAC(\"succeeded\"));\r\n                });\r\n        };\r\nexport const removePackTC =\r\n    (packId: string): ThunkType =>\r\n        (dispatch) => {\r\n            dispatch(setAppStatusAC(\"loading\"));\r\n            packsAPI\r\n                .deletePack(packId)\r\n                .then((res) => {\r\n                    dispatch(getPacksTC());\r\n                })\r\n                .catch((err) => {\r\n                    const error = err.response\r\n                        ? err.response.data.error\r\n                        : err.message + \", more details in the console\";\r\n                    console.log(\"err:\", error);\r\n                    dispatch(catchErrorAC(error));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setAppStatusAC(\"succeeded\"));\r\n                });\r\n        };\r\nexport const updatePackTC =\r\n    (packId: string, title: string): ThunkType =>\r\n        (dispatch) => {\r\n            dispatch(setAppStatusAC(\"loading\"));\r\n            packsAPI\r\n                .updatePack(packId, title)\r\n                .then((res) => {\r\n                    dispatch(getPacksTC());\r\n                })\r\n                .catch((err) => {\r\n                    const error = err.response\r\n                        ? err.response.data.error\r\n                        : err.message + \", more details in the console\";\r\n                    console.log(\"err:\", error);\r\n                    dispatch(catchErrorAC(error));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setAppStatusAC(\"succeeded\"));\r\n                });\r\n        };\r\n\r\n// Types\r\nexport type ActionPacksTypes =\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setPacksTotalCountAC>\r\n    | ReturnType<typeof catchErrorAC>\r\n    | ReturnType<typeof setSearchPacksAC>\r\n    | ReturnType<typeof setRangeValuesAC>\r\n    | ReturnType<typeof setMinValueAC>\r\n    | ReturnType<typeof setMaxValueAC>;\r\nexport type AppInitialStateType = {\r\n    cardPacks: PackType[];\r\n    currentPage: number;\r\n    pageCount: number;\r\n    cardPacksTotalCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    userId: string;\r\n    packsId: string;\r\n    searchPacks: string;\r\n};\r\nexport type PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: false;\r\n    name: string;\r\n    cardsCount: 0;\r\n    updated: Date;\r\n};\r\n","import React from \"react\";\r\n// import {Slider} from \"@material-ui/core\";\r\nimport styles from \"./RangeUI.module.css\";\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void;\r\n    value: number[];\r\n    // min, max, step, disable, ...\r\n};\r\n\r\nconst RangeUi: React.FC<SuperDoubleRangePropsType> = ({\r\n                                                          onChangeRange,\r\n                                                          value,\r\n                                                      }) => {\r\n    const handleChange = (event: Event, newValue: number[] | number) => {\r\n        onChangeRange && onChangeRange(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Slider\r\n                className={styles.Slider}\r\n                color={\"primary\"}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"on\"\r\n                sx={{\r\n                    color: \"#21268F\",\r\n                    \"& .MuiSlider-thumb\": {\r\n                        backgroundColor: \"#21268F\",\r\n                    },\r\n                    \".css-eg0mwd-MuiSlider-thumb::after\": {\r\n                        backgroundColor: \"white\",\r\n                        width: 10,\r\n                        height: 10,\r\n                    },\r\n                    \".css-1kz0hui-MuiSlider-valueLabel.MuiSlider-valueLabelOpen\":\r\n                        {\r\n                            backgroundColor: \"#21268F\",\r\n                            width: 35,\r\n                            height: 25,\r\n                            top: -2,\r\n                        },\r\n                    \".css-1kz0hui-MuiSlider-valueLabel:before\": {\r\n                        width: 0,\r\n                        height: 0,\r\n                    },\r\n                    \".css-14pt78w-MuiSlider-rail\": {\r\n                        backgroundColor: \"#21268F\",\r\n                        opacity: 0.5,\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RangeUi;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./ErrorMes.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\n\r\nexport const ErrorMes: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return <div className={styles.error}>{children}</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = (props) => {\r\n    const {\r\n        currentItem,\r\n        itemCount,\r\n        totalItemCount,\r\n        onChangeItemHandler,\r\n        portionSize,\r\n    } = props;\r\n    let pagesCount = Math.ceil(totalItemCount / itemCount);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && (\r\n                <FaAngleLeft\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1);\r\n                    }}\r\n                >\r\n                    Previous\r\n                </FaAngleLeft>\r\n            )}\r\n\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            key={p}\r\n                            className={\r\n                                currentItem === p ? styles.selectedPage : \"\"\r\n                            }\r\n                            onClick={() => {\r\n                                onChangeItemHandler(p);\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    );\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <FaAngleRight\r\n                    className={styles.icon}\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1);\r\n                    }}\r\n                >\r\n                    Next\r\n                </FaAngleRight>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type PaginatorPropsType = {\r\n    currentItem: number;\r\n    itemCount: number;\r\n    totalItemCount: number;\r\n    portionSize: number;\r\n    onChangeItemHandler: (page: number) => void;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-cards.3f95abc0.svg\";","export let trimString = function (string: string, length: number) {\r\n    return string.length > length\r\n        ? string.substring(0, length) + \"...\"\r\n        : string;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/puff.cf50e627.svg\";","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport loader from \"./../../assets/images/puff.svg\";\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n    const portalElement = document.getElementById(\"overlays\");\r\n    return (\r\n        <Fragment>\r\n            {portalElement &&\r\n                ReactDOM.createPortal(\r\n                    <div className={styles.backdrop}>\r\n                        <img\r\n                            className={styles.img}\r\n                            src={loader}\r\n                            alt=\"loading\"\r\n                        />\r\n                    </div>,\r\n                    portalElement\r\n                )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// {\r\n//   <img className={styles.img} src={loader} alt=\"loading\" />\r\n// }\r\n","import { cardsAPI } from \"../api/api\";\r\nimport { catchErrorAC, setAppStatusAC } from \"./appReducer\";\r\nimport { AppStore, ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    cards: [\r\n        {\r\n            _id: \"\",\r\n            cardsPack_id: \"\",\r\n            answer: \"\",\r\n            question: \"\",\r\n            grade: 0,\r\n            shots: 0,\r\n            rating: 0,\r\n            updated: new Date(),\r\n        },\r\n    ],\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    cardsCount: 0,\r\n    packUserId: \"\",\r\n};\r\n\r\nexport const cardsReducer = (\r\n    state = initialState,\r\n    action: ActionCardsTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: action.payload.cards.map((p) => p),\r\n            };\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n            };\r\n        case \"SET_CARDS_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                cardsCount: action.payload.cardsCount,\r\n            };\r\n        case \"SET_USER_ID\":\r\n            return {\r\n                ...state,\r\n                packUserId: action.payload.userId,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setCardsAC = (cards: CardType[]) => {\r\n    return { type: \"SET_CARDS\", payload: { cards } } as const;\r\n};\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: \"SET_CURRENT_PAGE\",\r\n        payload: {\r\n            currentPage,\r\n        },\r\n    } as const;\r\n};\r\nexport const setUserIdAC = (userId: string) => {\r\n    return {\r\n        type: \"SET_USER_ID\",\r\n        payload: {\r\n            userId,\r\n        },\r\n    } as const;\r\n};\r\nexport const setCardsCountAC = (cardsCount: number) => {\r\n    return {\r\n        type: \"SET_CARDS_TOTAL_COUNT\",\r\n        payload: {\r\n            cardsCount,\r\n        },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const getCardsTC =\r\n    (packId: string): ThunkType =>\r\n    (dispatch, getState: () => AppStore) => {\r\n        const cards = getState().cards;\r\n        const currentPage = cards.currentPage;\r\n        const pageCount = cards.pageCount;\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .getCards(packId, currentPage, pageCount)\r\n            .then((res) => {\r\n                dispatch(setCardsAC(res.data.cards));\r\n                dispatch(setUserIdAC(res.data.packUserId));\r\n                dispatch(setCardsCountAC(res.data.cardsTotalCount));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const addCardTC =\r\n    (cardsPackId: string, question: string, answer: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .addCard(cardsPackId, question, answer)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const deleteCardTC =\r\n    (cardId: string, cardsPackId: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .deleteCard(cardId)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\nexport const updateCardTC =\r\n    (\r\n        cardId: string,\r\n        cardsPackId: string,\r\n        question: string,\r\n        answer: string\r\n    ): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC(\"loading\"));\r\n        cardsAPI\r\n            .updateCard(cardId, question, answer)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(cardsPackId));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC(\"succeeded\"));\r\n            });\r\n    };\r\n\r\n// Types\r\nexport type ActionCardsTypes =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setCardsCountAC>\r\n    | ReturnType<typeof setUserIdAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    cards: CardType[];\r\n    currentPage: number;\r\n    pageCount: number;\r\n    cardsCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    packUserId: string;\r\n};\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n    rating: number;\r\n    updated: Date;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PackType, removePackTC, updatePackTC } from \"../../redux/packsReducer\";\r\nimport styles from \"./Table.module.css\";\r\nimport cardsIcon from \"./../../assets/images/icon-cards.svg\";\r\nimport { trimString } from \"./../../helpers/helpers\";\r\nimport { Preloader } from \"../../UI-kit/Preloader/Preloader\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport { CardType, deleteCardTC, updateCardTC } from \"../../redux/cardsReducer\";\r\n\r\nexport const Table: React.FC<TablePropsType> = ({ headers, packs, cards }) => {\r\n    const dispatch = useDispatch();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    const userId = useSelector((state: AppStore) => state.profile.profile._id);\r\n    const userIdFromCards = useSelector(\r\n        (state: AppStore) => state.cards.packUserId\r\n    );\r\n    // Get packs table body\r\n    const renderPacks = (packs: PackType[]) => {\r\n        return packs.map((pack) => (\r\n            <tr key={pack._id}>\r\n                <td>{trimString(pack.name, 7)}</td>\r\n                <td>{pack.cardsCount}</td>\r\n                <td>{trimString(pack.updated.toString(), 10)}</td>\r\n                <td>{trimString(pack.user_name, 10)}</td>\r\n                <td>\r\n                    <NavLink to={`/profile/cards/${pack._id}`}>\r\n                        <img src={cardsIcon} alt=\"cards\" />\r\n                    </NavLink>\r\n                </td>\r\n                <td>\r\n                    <button className={styles.editBtn}>Learn</button>\r\n                </td>\r\n                <td>\r\n                    {pack.user_id === userId ? (\r\n                        <button\r\n                            className={styles.deleteBtn}\r\n                            onClick={() => {\r\n                                dispatch(removePackTC(pack._id));\r\n                                setTimeout(() => {\r\n                                    dispatch(catchErrorAC(\"\"));\r\n                                }, 2000);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    {pack.user_id === userId ? (\r\n                        <button\r\n                            className={styles.editBtn}\r\n                            onClick={() => {\r\n                                dispatch(\r\n                                    updatePackTC(pack._id, \"Name was updated\")\r\n                                );\r\n                                setTimeout(() => {\r\n                                    dispatch(catchErrorAC(\"\"));\r\n                                }, 2000);\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </td>\r\n            </tr>\r\n        ));\r\n    };\r\n\r\n    // Get cards table body\r\n    const renderCards = (cards: CardType[]) => {\r\n        return cards.map((card) => (\r\n            <tr key={card._id}>\r\n                <td>{trimString(card.question, 10)}</td>\r\n                <td>{card.answer}</td>\r\n                <td>{trimString(card.updated.toString(), 10)}</td>\r\n                <td>{card.rating}</td>\r\n                <td>\r\n                    {userIdFromCards === userId ? (\r\n                        <button\r\n                            className={styles.deleteBtn}\r\n                            onClick={() => {\r\n                                dispatch(\r\n                                    deleteCardTC(card._id, card.cardsPack_id)\r\n                                );\r\n                                setTimeout(() => {\r\n                                    dispatch(catchErrorAC(\"\"));\r\n                                }, 2000);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    {userIdFromCards === userId ? (\r\n                        <button\r\n                            className={styles.editBtn}\r\n                            onClick={() => {\r\n                                dispatch(\r\n                                    updateCardTC(\r\n                                        card._id,\r\n                                        card.cardsPack_id,\r\n                                        \"Question was updated\",\r\n                                        \"Answer was updated\"\r\n                                    )\r\n                                );\r\n                                setTimeout(() => {\r\n                                    dispatch(catchErrorAC(\"\"));\r\n                                }, 2000);\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </td>\r\n            </tr>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <table className={styles.table}>\r\n            {status === \"loading\" && <Preloader />}\r\n            <thead>\r\n                <tr>\r\n                    {headers.map((header, index) => {\r\n                        return (\r\n                            <th scope=\"col\" key={index}>\r\n                                {header}\r\n                            </th>\r\n                        );\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {packs && renderPacks(packs)}\r\n                {cards && renderCards(cards)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n// Types\r\ntype TablePropsType = {\r\n    headers: string[];\r\n    packs?: PackType[];\r\n    cards?: CardType[];\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPackTC } from \"../../redux/packsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./UpdatePack.module.css\";\r\n\r\nexport const UpdatePack: React.FC<UpdateModalPropsType> = ({ onClose }) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(addPackTC(title));\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter pack's title</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={title}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Ok\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n};\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getMyPacksTC,\r\n    getPacksTC,\r\n    setCurrentPageAC,\r\n    setMaxValueAC,\r\n    setMinValueAC,\r\n    setSearchPacksAC,\r\n} from \"../../redux/packsReducer\";\r\nimport {AppStore} from \"../../redux/store\";\r\nimport {Button} from \"../../UI-kit/Button/Button\";\r\nimport RangeUI from \"../../UI-kit/RangeUI/RangeUI\";\r\nimport {ErrorMes} from \"../Error/ErrorMes\";\r\nimport {Paginator} from \"../Paginator/Paginator\";\r\nimport {Table} from \"../Table/Table\";\r\nimport styles from \"./Packs.module.css\";\r\nimport {UpdatePack} from \"./UpdatePack\";\r\n\r\nexport const Packs = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [searchPack, setSearchPack] = useState(\"\");\r\n    const errorMessage = useSelector((state: AppStore) => state.app.error);\r\n    const packs = useSelector((state: AppStore) => state.packs.cardPacks);\r\n    const min = useSelector((state: AppStore) => state.packs.minCardsCount);\r\n    const max = useSelector((state: AppStore) => state.packs.maxCardsCount);\r\n    const pageCount = useSelector((state: AppStore) => state.packs.pageCount);\r\n    const totalPacksCount = useSelector(\r\n        (state: AppStore) => state.packs.cardPacksTotalCount\r\n    );\r\n    const currentPage = useSelector(\r\n        (state: AppStore) => state.packs.currentPage\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPacksTC());\r\n    }, [dispatch]);\r\n\r\n    const onChangePageHandler = useCallback(\r\n        (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n            dispatch(getPacksTC());\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const callSetSearchPack = (value: string) => {\r\n        setSearchPack(value);\r\n        dispatch(setSearchPacksAC(searchPack));\r\n    };\r\n\r\n    const headers = [\r\n        \"Pack Name\",\r\n        \"Cards Count\",\r\n        \"Updated\",\r\n        \"Created By\",\r\n        \"Cards\",\r\n        \"Actions\",\r\n        \"\",\r\n        \"\",\r\n    ];\r\n    const getMyPacksHandler = useCallback(() => {\r\n        dispatch(getMyPacksTC());\r\n    }, [dispatch]);\r\n    const getAllPacksHandler = useCallback(() => {\r\n        dispatch(getPacksTC());\r\n    }, [dispatch]);\r\n\r\n    const [value, setValue] = useState<number[]>([min, max]);\r\n\r\n    const onChangeSuperDoubleRange = useCallback(\r\n        (value: number[]) => {\r\n            dispatch(setMinValueAC(value[0]));\r\n            dispatch(setMaxValueAC(value[1]));\r\n            setValue(value);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n            {showModal && (\r\n                <UpdatePack\r\n                    onClose={() => {\r\n                        setShowModal(false);\r\n                    }}\r\n                />\r\n            )}\r\n            <div className={styles.sidebar}>\r\n                <h3>Show packs cards</h3>\r\n                <div className={styles.btnWrapper}>\r\n                    <div onClick={getMyPacksHandler} className={styles.sideBtn}>\r\n                        My\r\n                    </div>\r\n                    <div onClick={getAllPacksHandler} className={styles.active}>\r\n                        All\r\n                    </div>\r\n                </div>\r\n                <div className={styles.showPacksComponent}>\r\n                    <h3>Show packs cards</h3>\r\n                </div>\r\n\r\n                <div className={styles.sliderComponent}>\r\n                    <h3>Number of cards</h3>\r\n                    <div className={styles.sliderWrapper}>\r\n                        <RangeUI\r\n                            value={value}\r\n                            onChangeRange={onChangeSuperDoubleRange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.packsList}>\r\n                <h1>Packs List</h1>\r\n                <div className={styles.search}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search...\"\r\n                        onChange={(e) =>\r\n                            callSetSearchPack(e.currentTarget.value)\r\n                        }\r\n                    />\r\n                    <div className={styles.btnsWrapper}>\r\n                        <Button\r\n                            className={styles.searchBtn}\r\n                            onClick={() => dispatch(getPacksTC() )}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                        <Button\r\n                            className={styles.searchBtn}\r\n                            onClick={() => {\r\n                                setShowModal(true);\r\n                            }}\r\n                        >\r\n                            Add new pack\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.tableWrapper}>\r\n                    <Table headers={headers} packs={packs}/>\r\n                    <Paginator\r\n                        currentItem={currentPage}\r\n                        itemCount={pageCount}\r\n                        totalItemCount={totalPacksCount}\r\n                        portionSize={10}\r\n                        onChangeItemHandler={onChangePageHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype NavLinksTestType = {\r\n    path: string;\r\n    text: string;\r\n};\r\n\r\ntype PropsType = HTMLAttributes<HTMLElement> & {\r\n    arrayLinks: NavLinksTestType[];\r\n    testPage?: boolean;\r\n    profilePage?: boolean;\r\n};\r\n\r\nexport const Header: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <header className={props.className}>\r\n            {props.testPage &&\r\n                props.arrayLinks.map((l, i) => (\r\n                    <NavLink key={i} to={l.path}>\r\n                        {l.text}\r\n                    </NavLink>\r\n                ))}\r\n\r\n            {props.profilePage && (\r\n                <div className=\"container inner-header\">\r\n                    <h1>It-incubator</h1>\r\n                    <nav className=\"profile-nav\">\r\n                        {props.arrayLinks.map((l, i) => (\r\n                            <NavLink\r\n                                key={i}\r\n                                activeClassName={\"active\"}\r\n                                to={l.path}\r\n                            >\r\n                                {l.text}\r\n                            </NavLink>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            )}\r\n        </header>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { logoutThunk } from \"../../redux/loginReducer\";\r\nimport { navLinksProfile, PATH } from \"../Routes/Routes\";\r\nimport { Person } from \"../Person/Person\";\r\nimport { Packs } from \"../Packs/Packs\";\r\nimport { Header } from \"../Header/Header\";\r\n\r\nexport const Profile = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((state: AppStore) => state.login.isAuth);\r\n    const name = useSelector((state: AppStore) => state.profile.profile?.name);\r\n    const photo = useSelector(\r\n        (state: AppStore) => state.profile.profile?.avatar\r\n    );\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n    const logoutHandler = () => {\r\n        dispatch(logoutThunk());\r\n    };\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksProfile}\r\n                className={styles.header}\r\n                profilePage\r\n            />\r\n\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => (\r\n                        <Person\r\n                            photo={photo}\r\n                            name={name}\r\n                            showModalHandler={showModalHandler}\r\n                            logoutHandler={logoutHandler}\r\n                            showModal={showModal}\r\n                            hideModalHandler={hideModalHandler}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS}\r\n                    render={() => <Packs />}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport styles from \"./Register.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerFailureAC, registerUserTC } from \"../../redux/registerReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { PATH } from \"../Routes/Routes\";\r\nimport { ErrorMes } from \"../Error/ErrorMes\";\r\n\r\nexport const Register = () => {\r\n    const [user, setUser] = useState<InitialValuesType>({\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setUser({\r\n            ...user,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n    const isRegistered = useSelector(\r\n        (state: AppStore) => state.register.isRegistered\r\n    );\r\n    const errorMessage = useSelector((state: AppStore) => state.register.error);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    function handleSubmit(e: MouseEvent<HTMLElement>) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (\r\n            user.email &&\r\n            user.createPassword &&\r\n            user.confirmPassword &&\r\n            user.createPassword === user.confirmPassword\r\n        ) {\r\n            dispatch(registerUserTC(user.email, user.createPassword));\r\n            setUser({ email: \"\", createPassword: \"\", confirmPassword: \"\" });\r\n            setTimeout(() => {\r\n                dispatch(registerFailureAC(\"\"));\r\n            }, 2000);\r\n            setSubmitted(false);\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN} />;\r\n    }\r\n    return (\r\n        <div>\r\n            {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n            <div className={styles.wrapper}>\r\n                <Card className={styles.register}>\r\n                    <h1>It-incubator</h1>\r\n\r\n                    <div className={styles.formWrapper}>\r\n                        <form>\r\n                            <h2>Sign Up</h2>\r\n                            <div className={styles.formGroup}>\r\n                                <label>\r\n                                    <span>Email</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        value={user.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.email &&\r\n                                        \"Email is required\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"createPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.createPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.createPassword &&\r\n                                        \"Password is required.\"}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Confirm Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.confirmPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        user.confirmPassword !==\r\n                                            user.createPassword &&\r\n                                        user.confirmPassword.length > 1 &&\r\n                                        \"Passwords do not match.\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.confirmPassword &&\r\n                                        \"You should confirm your password.\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                            >\r\n                                <Button\r\n                                    className={styles.cancelBtn}\r\n                                    purple\r\n                                    onClick={() => {\r\n                                        history.goBack();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className={styles.registerBtn}\r\n                                    type={\"submit\"}\r\n                                    onClick={handleSubmit}\r\n                                    disabled={status === \"loading\"}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//Types\r\nexport type InitialValuesType = {\r\n    email: string;\r\n    createPassword: string;\r\n    confirmPassword: string;\r\n};\r\n","import React, {\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    HTMLAttributes,\r\n    useState,\r\n} from \"react\";\r\n\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n>;\r\n\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLSpanElement>,\r\n    HTMLSpanElement\r\n>;\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string;\r\n    spanProps?: DefaultSpanPropsType;\r\n};\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = ({\r\n    autoFocus,\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n    ...restProps\r\n}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const { children, onDoubleClick, className, ...restSpanProps } =\r\n        spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false);\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (\r\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n    ) => {\r\n        setEditMode(true);\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode ? (\r\n                <Input\r\n                    autoFocus\r\n                    onBlur={onBlurCallback}\r\n                    onEnter={onEnterCallback}\r\n                    {...restProps}\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onDoubleClickCallBack}\r\n                    className={spanClassName}\r\n                    {...restSpanProps}\r\n                >\r\n                    <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\r\n                    {children || restProps.value}\r\n                </span>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport s from \"./Radio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Radio: React.FC<RadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            className={s.optionInput}\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <div className={s.customRadios}>{mappedOptions}</div>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport s from \"./Select.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => {\r\n        return <option key={i}>{o}</option>;\r\n      })\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n    console.log(\"select \" + e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.select}>\r\n      <select onChange={onChangeCallback} {...restProps}>\r\n        {mappedOptions}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport styles from \"./Range.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n  onChangeRange?: (value: number) => void;\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n  value,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  // const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.sliderTrack}></div>\r\n        <input\r\n          type={\"range\"}\r\n          className={styles.doubleRange}\r\n          onChange={onChangeCallback}\r\n          {...restProps}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport styles from \"./TestPage.module.css\";\r\nimport { navLinksTest } from \"../Routes/Routes\";\r\n\r\nexport const TestPage = () => {\r\n    const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const [rangeValue, setRangeValue] = useState(50);\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>();\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(e.currentTarget.checked);\r\n    };\r\n    const changeHandler = (value: number) => {\r\n        setRangeValue(value);\r\n    };\r\n    const login = () => {\r\n        authAPI\r\n            .login(\"nya-admn@nya.nya\", \"1qazxcvBG\", true)\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const me = () => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const register = () => {\r\n        authAPI\r\n            .register(\"blabla00000@nya.nya\", \"1qazxcvBG\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const changeInfo = () => {\r\n        authAPI\r\n            .changeInfo(\"New Name\", \"https://i.mydramalist.com/67r8d_5_c.jpg\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const logout = () => {\r\n        authAPI\r\n            .logout()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const forgotPassword = () => {\r\n        authAPI\r\n            .forgotPassword(\"blabla@nya.nya\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                arrayLinks={navLinksTest}\r\n                className={styles.header}\r\n                testPage\r\n            />\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    height: \"80vh\",\r\n                    marginTop: \"5rem\",\r\n                }}\r\n            >\r\n                <Button>button</Button>\r\n                <Checkbox checked={checked} onChange={testOnChange} />\r\n                <EditableSpan />\r\n                <Radio\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <Input />\r\n                <span style={{ fontSize: \"1.7rem\" }}>{rangeValue}</span>\r\n                <Range onChangeRange={changeHandler} value={rangeValue} />\r\n                <Select\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={styles.requestsWrapper}>\r\n                    <Button onClick={login}>Login Request</Button>\r\n                    <Button onClick={register}>Register</Button>\r\n                    <Button onClick={me}>Show User</Button>\r\n                    <Button onClick={changeInfo}>Change Info</Button>\r\n                    <Button onClick={logout}>Logout</Button>\r\n                    <Button onClick={forgotPassword}>Forgot Password</Button>\r\n                </div>\r\n                <div style={{ width: \"800px\" }}>{response}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCardTC } from \"../../redux/cardsReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./AddCard.module.css\";\r\n\r\nexport const AddCard: React.FC<UpdateModalPropsType> = ({\r\n    onClose,\r\n    packId,\r\n}) => {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const handleQuestionInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value);\r\n    };\r\n    const handleAnswerInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = () => {\r\n        dispatch(addCardTC(packId, question, answer));\r\n        onClose();\r\n    };\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter question</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleQuestionInputChange}\r\n                        name=\"question\"\r\n                        required\r\n                        value={question}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter answer</span>\r\n                    <br />\r\n\r\n                    <Input\r\n                        onChange={handleAnswerInputChange}\r\n                        name=\"answer\"\r\n                        required\r\n                        value={answer}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Ok\r\n                </Button>\r\n                <div>\r\n                    <FaTimes onClick={onClose} className={styles.icon} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype UpdateModalPropsType = {\r\n    onClose: () => void;\r\n    packId: string;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { catchErrorAC } from \"../../redux/appReducer\";\r\nimport { getCardsTC, setCurrentPageAC } from \"../../redux/cardsReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { ErrorMes } from \"../Error/ErrorMes\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\nimport { navLinksProfile } from \"../Routes/Routes\";\r\nimport { Table } from \"../Table/Table\";\r\nimport { AddCard } from \"./AddCard\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch();\r\n    const { packId } = useParams<PackParamsType>();\r\n    const userId = useSelector((state: AppStore) => state.profile.profile._id);\r\n    const userIdFromCards = useSelector(\r\n        (state: AppStore) => state.cards.packUserId\r\n    );\r\n    const totalPacksCount = useSelector(\r\n        (state: AppStore) => state.cards.cardsCount\r\n    );\r\n    const currentPage = useSelector(\r\n        (state: AppStore) => state.cards.currentPage\r\n    );\r\n\r\n    const pageCount = useSelector((state: AppStore) => state.cards.pageCount);\r\n    const onChangePageHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber));\r\n        dispatch(getCardsTC(packId));\r\n    };\r\n\r\n    const cards = useSelector((state: AppStore) => state.cards.cards);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const errorMessage = useSelector((state: AppStore) => state.app.error);\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(packId));\r\n        setTimeout(() => {\r\n            dispatch(catchErrorAC(\"\"));\r\n        }, 3000);\r\n    }, [dispatch, packId]);\r\n\r\n    const headers = [\r\n        \"Question\",\r\n        \"Answer\",\r\n        \"Last Updated\",\r\n        \"Grade\",\r\n        \"Actions\",\r\n        \"\",\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <ErrorMes>{errorMessage}</ErrorMes>}\r\n            {showModal && (\r\n                <AddCard\r\n                    onClose={() => {\r\n                        setShowModal(false);\r\n                    }}\r\n                    packId={packId}\r\n                />\r\n            )}\r\n            <Header\r\n                arrayLinks={navLinksProfile}\r\n                className={styles.header}\r\n                profilePage\r\n            />\r\n            <div className={styles.content}>\r\n                {userId === userIdFromCards && (\r\n                    <Button\r\n                        className={styles.btn}\r\n                        onClick={() => {\r\n                            setShowModal(true);\r\n                        }}\r\n                    >\r\n                        Add card\r\n                    </Button>\r\n                )}\r\n                <Card className={styles.wrapper}>\r\n                    {cards.length === 0 ? (\r\n                        <div className={styles.empty}>\r\n                            <h2>There is no cards in this pack</h2>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Table headers={headers} cards={cards} />\r\n                            <Paginator\r\n                                currentItem={currentPage}\r\n                                itemCount={pageCount}\r\n                                totalItemCount={totalPacksCount}\r\n                                portionSize={10}\r\n                                onChangeItemHandler={onChangePageHandler}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Card>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n// Types\r\n\r\ntype PackParamsType = {\r\n    packId: string;\r\n};\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { CheckEmail } from \"../CheckEmail/CheckEmail\";\r\nimport { ErrorPage } from \"../ErrorPage/ErrorPage\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport { PasswordUpdate } from \"../PasswordUpdate/ParrwordUpdate\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { Register } from \"../Register/Register\";\r\nimport { TestPage } from \"../TestPage/TestPage\";\r\nimport { Cards } from \"../Cards/Cards\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    TEST: \"/test\",\r\n    PASSWORD_UPDATE: \"/password-update/:token\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    PROFILE: \"/profile\",\r\n    PROFILE_PERSON: \"/profile/person\",\r\n    PROFILE_PACKS: \"/profile/packs\",\r\n    PROFILE_CARDS: \"/profile/cards/:packId\",\r\n    REGISTER: \"/register\",\r\n    EMAIL_CHECK: \"/check-email\",\r\n    ERROR: \"/error-page\",\r\n};\r\n\r\nexport const navLinksProfile = [\r\n    { path: PATH.PROFILE_PACKS, text: \"Packs list\" },\r\n    { path: PATH.PROFILE_PERSON, text: \"Profile\" },\r\n];\r\n\r\nexport const navLinksTest = [\r\n    { path: PATH.LOGIN, text: \"Login\" },\r\n    { path: PATH.REGISTER, text: \"Register\" },\r\n    { path: PATH.PROFILE, text: \"Profile\" },\r\n    { path: PATH.PASSWORD_UPDATE, text: \"Update Password\" },\r\n    { path: PATH.PASSWORD_RECOVERY, text: \"Recovery Password\" },\r\n    { path: PATH.EMAIL_CHECK, text: \"Check Email\" },\r\n    { path: PATH.ERROR, text: \"ErrorPage\" },\r\n];\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path={\"/\"}\r\n                    render={() => <Redirect to={PATH.LOGIN} />}\r\n                />\r\n                <Route exact path={PATH.TEST} render={() => <TestPage />} />\r\n                <Route exact path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route exact path={PATH.REGISTER} render={() => <Register />} />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PERSON}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_PACKS}\r\n                    render={() => <Profile />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE_CARDS}\r\n                    render={() => <Cards />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_UPDATE}\r\n                    render={() => <PasswordUpdate />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_RECOVERY}\r\n                    render={() => <PasswordRecovery />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.EMAIL_CHECK}\r\n                    render={() => <CheckEmail />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={PATH.PROFILE}\r\n                    render={() => <Redirect to={PATH.PROFILE_PERSON} />}\r\n                />\r\n                <Route exact render={() => <ErrorPage />} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Routes from \"./components/Routes/Routes\";\r\nimport { initializeAppThunk } from \"./redux/appReducer\";\r\nimport { AppStore } from \"./redux/store\";\r\nimport { Preloader } from \"./UI-kit/Preloader/Preloader\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useSelector<AppStore, boolean>(\r\n        (state) => state.app.isInitialized\r\n    );\r\n\r\n    console.log(isInitialized);\r\n\r\n    const status = useSelector((state: AppStore) => state.app.status);\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppThunk());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader />;\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                {status === \"loading\" && <Preloader />}\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes, appReducer } from \"./appReducer\";\r\nimport { ActionCardsTypes, cardsReducer } from \"./cardsReducer\";\r\nimport { ActionForgotTypes, forgotReducer } from \"./forgotReducer\";\r\nimport { ActionLoginTypes, loginReducer } from \"./loginReducer\";\r\nimport { ActionPacksTypes, packsReducer } from \"./packsReducer\";\r\nimport { ActionProfileTypes, profileReducer } from \"./profileReducer\";\r\nimport { ActionRegisterTypes, registerReducer } from \"./registerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof reducers>;\r\nexport type AppActionsType =\r\n    | ActionLoginTypes\r\n    | ActionProfileTypes\r\n    | ActionRegisterTypes\r\n    | ActionAppTypes\r\n    | ActionForgotTypes\r\n    | ActionPacksTypes\r\n    | ActionCardsTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}