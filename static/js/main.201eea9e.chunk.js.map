{"version":3,"sources":["components/Register/Register.module.css","components/PasswordRecovery/Password.module.css","components/Profile/Profile.module.css","UI-kit/Button/Button.module.css","components/ErrorPage/Error404.module.css","UI-kit/Range/Range.module.css","components/CheckEmail/CheckEmail.module.css","UI-kit/Input/Input.module.css","UI-kit/Modal/Modal.module.css","components/Cards/Cards.module.css","components/changeUserInfo/ChangeUserInfo.module.css","UI-kit/Radio/Radio.module.css","components/TestPage/TestPage.module.css","UI-kit/Card/Card.module.css","UI-kit/Select/Select.module.css","components/Login/Login.module.css","redux/loginReducer.ts","UI-kit/Card/Card.tsx","assets/images/mail.svg","components/CheckEmail/CheckEmail.tsx","components/ErrorPage/ErrorPage.tsx","UI-kit/Input/Input.tsx","UI-kit/Button/Button.tsx","UI-kit/Checkbox/Checkbox.tsx","api/api.ts","components/Login/Login.tsx","redux/forgotReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","components/PasswordUpdate/ParrwordUpdate.tsx","redux/profileReducer.ts","UI-kit/Modal/Modal.tsx","components/changeUserInfo/ChangeUserInfo.tsx","components/Person/Person.tsx","components/Cards/Cards.tsx","components/Header/Header.tsx","components/Profile/Profile.tsx","redux/registerReducer.ts","components/Register/Register.tsx","UI-kit/EditableSpan/EditableSpan.tsx","UI-kit/Radio/Radio.tsx","UI-kit/Select/Select.tsx","UI-kit/Range/Range.tsx","components/TestPage/TestPage.tsx","components/Routes/Routes.tsx","redux/appReducer.ts","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","Card","className","children","finalClasses","styles","card","CheckEmail","wrapper","emailChecking","iconWrapper","src","email","alt","ErrorPage","s","errorCode","errorText","errorImg","Input","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","purple","finalClassName","default","Checkbox","type","onChangeChecked","checked","label","instance","axios","create","baseURL","withCredentials","authAPI","password","rememberMe","post","name","avatar","put","delete","from","message","initialState","isAuth","data","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","showErrorMessage","SHOW_ERROR_MESSAGE","payload","setStatus","SET_AUTH_STATUS","loginUserData","dispatch","then","res","SAVE_DATA_USER","catch","err","response","console","log","Login","useSelector","state","login","errorMessage","isLogin","useDispatch","useState","setPassword","to","formWrapper","action","formGroup","SET_EMAIL","setEmail","shapeIcon","formGroupCheckbox","SET_REMEMBER_ME","setRememberMe","formGroupPassword","formGroupButton","onClick","preventDefault","setTimeout","navLinkGroup","initialized","setInitializedAC","setErrorAC","PasswordRecovery","mail","setMail","forgot","placeholder","target","formGroupEmail","PasswordUpdate","profile","catchErrorAC","Backdrop","onClose","classes","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","ChangeUserInfo","imgUrl","changes","setChanges","handleInputChange","newValue","required","userData","updatedUser","btn","Person","props","showModal","hideModalHandler","sidebar","infoBox","photo","showModalHandler","logoutHandler","packsList","Cards","Header","testPage","arrayLinks","map","l","i","path","text","profilePage","activeClassName","Profile","setShowModal","token","isLoggedIn","useEffect","navLinksProfile","header","exact","PATH","PROFILE_PERSON","render","PROFILE_CARDS","addedUser","__v","isRegistered","Register","createPassword","confirmPassword","user","setUser","submitted","setSubmitted","register","length","cancelBtn","registerBtn","registerFailureAC","EditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","fontSize","Radio","options","onChangeOption","onChangeCallback","mappedOptions","o","optionInput","customRadios","Select","select","Range","onChangeRange","container","sliderTrack","doubleRange","TestPage","arr","rangeValue","setRangeValue","setChecked","setResponse","navLinksTest","display","flexDirection","justifyContent","alignItems","height","marginTop","requestsWrapper","JSON","stringify","width","LOGIN","TEST","PASSWORD_UPDATE","PASSWORD_RECOVERY","PROFILE","REGISTER","EMAIL_CHECK","ERROR","Routes","isInitialized","App","finally","reducers","combineReducers","app","store","createStore","applyMiddleware","thunkMiddleware","window"],"mappings":"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","file":"static/js/main.201eea9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__3Mzwm\",\"formGroup\":\"Register_formGroup__3NaLC\",\"formWrapper\":\"Register_formWrapper__W0pMq\",\"shapeIcon\":\"Register_shapeIcon__1HD9f\",\"formGroupPassword\":\"Register_formGroupPassword__2lXkl\",\"formGroupButton\":\"Register_formGroupButton__Wu6a-\",\"register\":\"Register_register__13bP2\",\"cancelBtn\":\"Register_cancelBtn__I6ssU\",\"registerBtn\":\"Register_registerBtn__kAj6a\",\"errorMessage\":\"Register_errorMessage__2XUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Password_wrapper__CwIC7\",\"login\":\"Password_login__2Kopu\",\"formGroup\":\"Password_formGroup__1r9mZ\",\"formGroupButton\":\"Password_formGroupButton__1CTkn\",\"formWrapper\":\"Password_formWrapper__xFoHs\",\"shapeIcon\":\"Password_shapeIcon__cEhkM\",\"formGroupEmail\":\"Password_formGroupEmail__3cId9\",\"formGroupPassword\":\"Password_formGroupPassword__2hHk1\",\"navLinkGroup\":\"Password_navLinkGroup__1KeuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__1xmS2\",\"wrapper\":\"Profile_wrapper__2Uikn\",\"sidebar\":\"Profile_sidebar__3qBu8\",\"packsList\":\"Profile_packsList__2OCgf\",\"avatar\":\"Profile_avatar__2kCod\",\"infoBox\":\"Profile_infoBox__2VlGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2m7fh\",\"red\":\"Button_red__3NxY9\",\"purple\":\"Button_purple__1VZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2VJhJ\",\"errorCode\":\"Error404_errorCode__1hweM\",\"errorText\":\"Error404_errorText__3oDLo\",\"errorImg\":\"Error404_errorImg__36Ohx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Range_wrapper__1JBTV\",\"container\":\"Range_container__3Gx5H\",\"doubleRange\":\"Range_doubleRange__GRGaW\",\"sliderTrack\":\"Range_sliderTrack__yDQc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CheckEmail_wrapper__OGehe\",\"emailChecking\":\"CheckEmail_emailChecking__3GTFe\",\"iconWrapper\":\"CheckEmail_iconWrapper__30MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__1KeHF\",\"errorInput\":\"Input_errorInput__3awlA\",\"error\":\"Input_error__2tyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3BvH4\",\"modal\":\"Modal_modal__pDR1O\",\"slide-down\":\"Modal_slide-down__2v6xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cards_wrapper__16gSS\",\"sidebar\":\"Cards_sidebar__zyOSU\",\"packsList\":\"Cards_packsList__2oJ7e\",\"avatar\":\"Cards_avatar__1XeO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeUserInfo_wrapper__2nzhx\",\"btn\":\"ChangeUserInfo_btn__7xG9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customRadios\":\"Radio_customRadios__3fXfH\",\"optionInput\":\"Radio_optionInput__1aJb4\",\"click-wave\":\"Radio_click-wave__3DnWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"requestsWrapper\":\"TestPage_requestsWrapper__oxvBU\",\"header\":\"TestPage_header__cy-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3S60v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select___hJwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2nZF2\",\"login\":\"Login_login__3bGOo\",\"formGroup\":\"Login_formGroup__1mLpb\",\"formGroupButton\":\"Login_formGroupButton__36Uht\",\"formWrapper\":\"Login_formWrapper__3_vIr\",\"shapeIcon\":\"Login_shapeIcon__ttv2N\",\"formGroupPassword\":\"Login_formGroupPassword__3N_L9\",\"navLinkGroup\":\"Login_navLinkGroup__3UUe9\",\"formGroupCheckbox\":\"Login_formGroupCheckbox__1B3Wh\",\"error\":\"Login_error__3S8wI\",\"errorMessage\":\"Login_errorMessage__1eavA\"};","import { Dispatch } from \"redux\";\r\nimport { authAPI, UserType } from \"../api/api\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_EMAIL = \"Login/SET-EMAIL\",\r\n    SET_REMEMBER_ME = \"Login/SET-REMEMBER-ME\",\r\n    SHOW_ERROR_MESSAGE = \"Login/SHOW-ERROR-MESSAGE\",\r\n    SET_AUTH_STATUS = \"Login/SET-AUTH-STATUS\",\r\n    SAVE_DATA_USER = \"Login/SAVE-DATA-USER\",\r\n}\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    data: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n};\r\n\r\nexport const loginReducer = (\r\n    state: LoginInitialStateType = initialState,\r\n    action: ActionLoginTypes\r\n): LoginInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_EMAIL:\r\n        case ACTIONS_TYPE.SET_REMEMBER_ME:\r\n        case ACTIONS_TYPE.SHOW_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload.data,\r\n                },\r\n            };\r\n\r\n        case ACTIONS_TYPE.SAVE_DATA_USER: {\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n            };\r\n        }\r\n        case ACTIONS_TYPE.SET_AUTH_STATUS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setEmail = (email: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_EMAIL,\r\n        payload: {\r\n            data: { email },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const setRememberMe = (rememberMe: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_REMEMBER_ME,\r\n        payload: {\r\n            data: { rememberMe },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const showErrorMessage = (error: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SHOW_ERROR_MESSAGE,\r\n        payload: {\r\n            data: { error },\r\n        },\r\n    } as const;\r\n};\r\n\r\nexport const saveDataUser = (data: UserType) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SAVE_DATA_USER,\r\n        payload: { data },\r\n    } as const;\r\n};\r\n\r\nexport const setStatus = (isAuth: boolean) => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_AUTH_STATUS,\r\n        payload: { isAuth },\r\n    } as const;\r\n};\r\n\r\n// Thunk\r\nexport const loginUserData = (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n) => {\r\n    return (dispatch: Dispatch<ActionLoginTypes>) => {\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(saveDataUser(res.data));\r\n                dispatch(setStatus(true));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(showErrorMessage(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutThunk = () => (dispatch: Dispatch<ActionLoginTypes>) => {\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            dispatch(setStatus(false));\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : err.message + \", more details in the console\";\r\n            console.log(\"err:\", error);\r\n            dispatch(showErrorMessage(error));\r\n        });\r\n};\r\n// Types\r\nexport type LoginInitialStateType = typeof initialState;\r\nexport type ActionLoginTypes =\r\n    | ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setRememberMe>\r\n    | ReturnType<typeof showErrorMessage>\r\n    | ReturnType<typeof saveDataUser>\r\n    | ReturnType<typeof setStatus>;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\nexport const Card: React.FC<DefaultDivPropsType> = ({\r\n  className,\r\n  children,\r\n}) => {\r\n  const finalClasses = `${styles.card} ${className ? className : \"\"}`;\r\n  return <div className={finalClasses}>{children}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mail.995de1e6.svg\";","import React from \"react\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport styles from \"./CheckEmail.module.css\";\r\nimport email from \"./../../assets/images/mail.svg\";\r\n\r\nexport const CheckEmail = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card className={styles.emailChecking}>\r\n                <h1>It-incubator</h1>\r\n                <div className={styles.iconWrapper}>\r\n                    <img src={email} alt=\"Sending messafe\" />\r\n                </div>\r\n                <h2>Check Email</h2>\r\n                <p>\r\n                    We've sent an email with instructions to example@gmail.com\r\n                </p>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.errorCode}>404</div>\r\n      <div className={s.errorText}>There is nothing to do here...</div>\r\n      <img\r\n        src=\"https://www.seekpng.com/png/full/359-3590327_shopify-stores-sad-robot-shopify.png\"\r\n        alt=\"robot\"\r\n        className={s.errorImg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./Input.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype InputPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Input: React.FC<InputPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n    onEnter && e.key === \"Enter\" && onEnter();\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n  purple?: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({\r\n  red,\r\n  purple,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${\r\n    red\r\n      ? `${s.default} ${s.red}`\r\n      : purple\r\n      ? `${s.default} ${s.purple}`\r\n      : s.default\r\n  } ${className}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps}\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n      <label className={s.label}></label>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    me() {\r\n        return instance.post(`auth/me`);\r\n    },\r\n    changeInfo(name: string, avatar: string) {\r\n        return instance.put<ChangeInfoResponseType>(`auth/me`, {\r\n            name,\r\n            avatar,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`);\r\n    },\r\n    forgotPassword(email: string, from: string, message: string) {\r\n        return instance.post<ForgotPasswordResponseType>(`auth/forgot`, {\r\n            email,\r\n            from,\r\n            message,\r\n        });\r\n    },\r\n    resetPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResetPasswordResponseType>(\r\n            `auth/set-new-password`,\r\n            {\r\n                password,\r\n                resetPasswordToken,\r\n            }\r\n        );\r\n    },\r\n};\r\n\r\n//Types\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    __v: number;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n    avatar: string;\r\n    error?: string;\r\n};\r\n\r\nexport type AddedUserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n    name: string;\r\n    verified: boolean;\r\n    publicCardPacksCount: 0;\r\n    created: Date;\r\n    updated: Date;\r\n    __v: number;\r\n};\r\nexport type RegisterResponseType = {\r\n    addedUser: AddedUserType;\r\n    error?: string;\r\n};\r\n\r\nexport type ChangeInfoResponseType = {\r\n    updatedUser: UserType;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\nexport type LogoutResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\nexport type ForgotPasswordResponseType = {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n    error?: string;\r\n};\r\nexport type ResetPasswordResponseType = {\r\n    info: string;\r\n    error?: string;\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport {\r\n    loginUserData,\r\n    setEmail,\r\n    setRememberMe,\r\n    showErrorMessage,\r\n} from \"../../redux/loginReducer\";\r\n\r\nexport const Login = () => {\r\n    const email = useSelector((state: AppStore) => state.login.data.email);\r\n    const rememberMe = useSelector(\r\n        (state: AppStore) => state.login.data.rememberMe\r\n    );\r\n    const errorMessage = useSelector(\r\n        (state: AppStore) => state.login.data.error\r\n    );\r\n    const isLogin = useSelector((state: AppStore) => state.login.isAuth);\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const onCheckboxClick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRememberMe(e.currentTarget.checked));\r\n    };\r\n\r\n    const onEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value));\r\n    };\r\n\r\n    const onPasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmitClick = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        dispatch(loginUserData(email, password, rememberMe));\r\n        dispatch(showErrorMessage(errorMessage));\r\n\r\n        setTimeout(() => {\r\n            dispatch(showErrorMessage(\"\"));\r\n        }, 3000);\r\n    };\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={\"/profile\"}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Sign In</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br/>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    value={email}\r\n                                    onChange={onEmailInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                        >\r\n                            <label>\r\n                                <span>Password</span>\r\n                                <br/>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={onPasswordInput}\r\n                                />\r\n                                <span className={styles.error}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupCheckbox}`}\r\n                        >\r\n                            <label>\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={onCheckboxClick}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupPassword}`}\r\n                        >\r\n                            <NavLink to={\"/password-recovery\"}>\r\n                                Forgot Password\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                        >\r\n                            <Button type={\"submit\"} onClick={onSubmitClick}>\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <p>Don’t have an account?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={\"/register\"}> Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            {errorMessage && (\r\n                <div className={styles.errorMessage}>{errorMessage}</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\n\r\nconst initialState: AuthInitialStateType = {\r\n    initialized: false, // transfer to succesful succesful page\r\n    error: false,  // show error page\r\n};\r\n\r\nexport const forgotReducer = (state = initialState, action: ActionAuthTypes): AuthInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"setInitialized\":\r\n            return {...state, initialized: action.initialized};\r\n\r\n        case \"setError\":\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n //Thunk one love)))\r\nexport const sendEmailThunkCreator = (email: string, from: string, message: string) => (dispatch: Dispatch) => {\r\n    authAPI.forgotPassword(email, from, message)\r\n        .then(()=>{\r\n            dispatch( setInitializedAC(true) )\r\n        })\r\n        .catch(() => {\r\n            dispatch( setErrorAC(true) )\r\n        })\r\n}\r\n\r\n\r\n//Action Creators\r\n\r\nexport const setInitializedAC = (initialized: boolean) => {\r\n    return {type: \"setInitialized\", initialized} as const;\r\n};\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>;\r\n\r\n\r\nexport const setErrorAC = (error: boolean) => {\r\n    return {type: \"setError\", error} as const;\r\n};\r\nexport type seErrorAT = ReturnType<typeof setErrorAC>;\r\n\r\nexport type ActionAuthTypes = setInitializedAT | seErrorAT\r\n\r\n\r\n// Types\r\n\r\nexport type AuthInitialStateType = {\r\n    initialized: boolean,\r\n    error: boolean,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Password.module.css\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendEmailThunkCreator } from \"../../redux/forgotReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialized = useSelector<AppStore, boolean>(\r\n        (state) => state.forgot.initialized\r\n    );\r\n    const error = useSelector<AppStore, boolean>((state) => state.forgot.error);\r\n\r\n    if (initialized) {\r\n        return <Redirect to=\"/check-email\" />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to=\"/profile\" />;\r\n    }\r\n    const buttonCallback = () => {\r\n        dispatch(\r\n            sendEmailThunkCreator(\r\n                mail,\r\n                \"test-front-admin <ai73a@yandex.by>\",\r\n                '<div style=\"background-color: lime; padding: 15px'\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.login}>\r\n                <h1>It-incubator</h1>\r\n\r\n                <div className={styles.formWrapper}>\r\n                    <form action=\"/\">\r\n                        <h2>Forgot your password?</h2>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label>\r\n                                <span>Email</span>\r\n                                <br />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={\"......\"}\r\n                                    onChange={(e) => setMail(e.target.value)}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`${styles.formGroup} ${styles.formGroupEmail}`}\r\n                        >\r\n                            <span>\r\n                                Enter your email address and we will send you\r\n                                further instructions\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                >\r\n                    <Button type={\"submit\"} onClick={buttonCallback}>\r\n                        Send instructions\r\n                    </Button>\r\n                </div>\r\n\r\n                <p>Did you remember your password?</p>\r\n\r\n                <div className={styles.navLinkGroup}>\r\n                    <NavLink to={\"/login\"}> Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const PasswordUpdate = () => {\r\n  return <h1>Password Update</h1>;\r\n};\r\n","import { authAPI, UserType } from \"../api/api\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: null,\r\n    error: \"\",\r\n};\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ActionProfileTypes\r\n): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile,\r\n            };\r\n        case \"CATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case \"CHANGE_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload.userData,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setUserProfileAC = (profile: UserType) => {\r\n    return { type: \"SET_USER_PROFILE\", payload: { profile } } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n    return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\nexport const changeUserInfoAC = (name: string, imgUrl: string) => {\r\n    return { type: \"CHANGE_USER_INFO\", payload: { name, imgUrl } } as const;\r\n};\r\n\r\nexport const changeUserDataAC = (userData: UserType) => {\r\n    return {\r\n        type: \"CHANGE_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\n\r\nexport const setProfileTC = (): ThunkType => {\r\n    return (dispatch) => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                dispatch(setUserProfileAC(res.data));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const changeUserInfoTC = (name: string, imgUrl: string): ThunkType => {\r\n    return (dispatch) => {\r\n        authAPI\r\n            .changeInfo(name, imgUrl)\r\n            .then((res) => {\r\n                dispatch(changeUserDataAC(res.data.updatedUser));\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(catchErrorAC(error));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionProfileTypes =\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof changeUserInfoAC>\r\n    | ReturnType<typeof catchErrorAC>\r\n    | ReturnType<typeof changeUserDataAC>;\r\nexport type ProfileInitialStateType = {\r\n    profile: null | UserType;\r\n    error: string;\r\n};\r\n","import { DetailedHTMLProps, Fragment, HTMLAttributes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop: React.FC<ModalPropsType> = ({ onClose }) => {\r\n    return <div className={classes.backdrop} onClick={onClose} />;\r\n};\r\n\r\nconst ModalOverlay: React.FC<DefaultDivPropsType> = ({ children }) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({ onClose, children }) => {\r\n    return (\r\n        <Fragment>\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <Backdrop onClose={onClose} />,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n            {portalElement\r\n                ? ReactDOM.createPortal(\r\n                      <ModalOverlay>{children}</ModalOverlay>,\r\n                      portalElement\r\n                  )\r\n                : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    HTMLInputElement\r\n>;\r\ntype ModalPropsType = DefaultDivPropsType & { onClose: () => void };\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserInfoTC } from \"../../redux/profileReducer\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Modal } from \"../../UI-kit/Modal/Modal\";\r\nimport styles from \"./ChangeUserInfo.module.css\";\r\n\r\nexport const ChangeUserInfo: React.FC<ChangeUserInfoPropsType> = ({\r\n    onClose,\r\n}) => {\r\n    const [changes, setChanges] = useState<InitialValuesType>({\r\n        name: \"\",\r\n        imgUrl: \"\",\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setChanges({\r\n            ...changes,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if (changes.name && changes.imgUrl) {\r\n            dispatch(changeUserInfoTC(changes.name, changes.imgUrl));\r\n            setChanges({ name: \"\", imgUrl: \"\" });\r\n        }\r\n        console.log(changes.name, changes.imgUrl);\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose}>\r\n            <div className={styles.wrapper}>\r\n                <label>\r\n                    <span>Enter new name</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"name\"\r\n                        required\r\n                        value={changes.name}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Enter image URL</span>\r\n                    <br />\r\n                    <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"imgUrl\"\r\n                        required\r\n                        value={changes.imgUrl}\r\n                    />\r\n                </label>\r\n\r\n                <Button onClick={submitHandler} className={styles.btn}>\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n// Types\r\ntype ChangeUserInfoPropsType = { onClose: () => void };\r\ntype InitialValuesType = { name: string; imgUrl: string };\r\n","import React from 'react';\r\nimport { Button } from '../../UI-kit/Button/Button';\r\nimport { ChangeUserInfo } from '../changeUserInfo/ChangeUserInfo';\r\nimport styles from \"../Profile/Profile.module.css\";\r\n\r\ntype PersonPropsType = {\r\n    photo?: string\r\n    name?: string\r\n    showModalHandler: () => void\r\n    logoutHandler: () => void\r\n    showModal: boolean\r\n    hideModalHandler: () => void\r\n}\r\n\r\nexport const Person = (props: PersonPropsType) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.showModal && <ChangeUserInfo onClose={props.hideModalHandler}/>}\r\n            <div className={styles.sidebar}>\r\n                <div className={styles.infoBox}>\r\n                    <img className={styles.avatar} src={props.photo} alt=\"avatar\"/>\r\n                    <h3>{props.name}</h3>\r\n                    <h4 onClick={props.showModalHandler}>Edit profile</h4>\r\n                    <Button onClick={props.logoutHandler}>Logout</Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.packsList}>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from \"./Cards.module.css\"\r\n\r\nconst Cards = () => {\r\n    return (\r\n\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.sidebar}>\r\n            </div>\r\n            <div className={styles.packsList}>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype NavLinksTestType = {\r\n    path: string\r\n    text: string\r\n};\r\n\r\ntype PropsType = HTMLAttributes<HTMLElement> & {\r\n    arrayLinks: NavLinksTestType[]\r\n    testPage?: boolean\r\n    profilePage?: boolean\r\n}\r\n\r\nexport const Header: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <header className={props.className}>\r\n            {props.testPage && props.arrayLinks.map((l, i) => <NavLink key={i} to={l.path}>{l.text}</NavLink>)}\r\n\r\n            {props.profilePage &&\r\n            <div className=\"container inner-header\">\r\n                <h1>It-incubator</h1>\r\n                <nav className=\"profile-nav\">\r\n                    {props.arrayLinks.map((l, i) => <NavLink\r\n                        key={i} activeClassName={\"active\"}\r\n                        to={l.path}>{l.text}\r\n                    </NavLink>)}\r\n                </nav>\r\n            </div>}\r\n        </header>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setProfileTC } from \"../../redux/profileReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { logoutThunk } from \"../../redux/loginReducer\";\r\nimport { navLinksProfile, PATH } from \"../Routes/Routes\";\r\nimport { Person } from \"../Person/Person\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport { Header } from \"../Header/Header\";\r\n\r\nexport const Profile = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const photo = useSelector(\r\n        (state: AppStore) => state.profile.profile?.avatar\r\n    );\r\n    const token = useSelector(\r\n        (state: AppStore) => state.profile.profile?.token\r\n    );\r\n\r\n    console.log(token);\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((state: AppStore) => state.login.isAuth);\r\n    const name = useSelector((state: AppStore) => state.profile.profile?.name);\r\n\r\n    useEffect(() => {\r\n        dispatch(setProfileTC());\r\n    }, [dispatch]);\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n    const hideModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n    const logoutHandler = () => {\r\n        dispatch(logoutThunk());\r\n    };\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header arrayLinks={navLinksProfile} className={styles.header} profilePage/>\r\n\r\n            <Switch>\r\n                <Route exact path={PATH.PROFILE_PERSON} render={() => <Person\r\n                    photo={photo}\r\n                    name={name}\r\n                    showModalHandler={showModalHandler}\r\n                    logoutHandler={logoutHandler}\r\n                    showModal={showModal}\r\n                    hideModalHandler={hideModalHandler}\r\n                />}/>\r\n\r\n                <Route exact path={PATH.PROFILE_CARDS} render={() => <Cards/>}/>\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","import { AddedUserType, authAPI, RegisterResponseType } from \"../api/api\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: RegisterInitialStateType = {\r\n    addedUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        rememberMe: false,\r\n        isAdmin: false,\r\n        name: \"\",\r\n        verified: false,\r\n        publicCardPacksCount: 0,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        __v: 0,\r\n    },\r\n    error: \"\",\r\n    isRegistered: false,\r\n};\r\n\r\nexport const registerReducer = (\r\n    state = initialState,\r\n    action: ActionRegisterTypes\r\n): RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isRegistered: true,\r\n            };\r\n        case \"REGISTER_FAILURE\":\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case \"ADD_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload.userData,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerFailureAC = (error: string) => {\r\n    return {\r\n        type: \"REGISTER_FAILURE\",\r\n        payload: { error },\r\n    } as const;\r\n};\r\nexport const registerSuccessAC = () => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n    } as const;\r\n};\r\nexport const addUserDataAC = (userData: AddedUserType) => {\r\n    return {\r\n        type: \"ADD_USER_DATA\",\r\n        payload: { userData },\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\nexport const registerUserTC = (email: string, password: string): ThunkType => {\r\n    return (dispatch) => {\r\n        authAPI\r\n            .register(email, password)\r\n            .then((res) => {\r\n                dispatch(addUserDataAC(res.data.addedUser));\r\n                dispatch(registerSuccessAC());\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : err.message + \", more details in the console\";\r\n                console.log(\"err:\", error);\r\n                dispatch(registerFailureAC(error));\r\n            });\r\n    };\r\n};\r\n\r\n// Types\r\nexport type ActionRegisterTypes =\r\n    | ReturnType<typeof registerFailureAC>\r\n    | ReturnType<typeof registerSuccessAC>\r\n    | ReturnType<typeof addUserDataAC>;\r\n\r\nexport type RegisterInitialStateType = RegisterResponseType & AdditionalType;\r\nexport type AdditionalType = { isRegistered: boolean };\r\n","import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Card } from \"../../UI-kit/Card/Card\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport styles from \"./Register.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUserTC } from \"../../redux/registerReducer\";\r\nimport { AppStore } from \"../../redux/store\";\r\n\r\nexport const Register = () => {\r\n    const [user, setUser] = useState<InitialValuesType>({\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.currentTarget;\r\n        const newValue = value;\r\n        setUser({\r\n            ...user,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n    const isRegistered = useSelector(\r\n        (state: AppStore) => state.register.isRegistered\r\n    );\r\n    const errorMessage = useSelector((state: AppStore) => state.register.error);\r\n    const dispatch = useDispatch();\r\n\r\n    function handleSubmit(e: MouseEvent<HTMLElement>) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (\r\n            user.email &&\r\n            user.createPassword &&\r\n            user.confirmPassword &&\r\n            user.createPassword === user.confirmPassword\r\n        ) {\r\n            dispatch(registerUserTC(user.email, user.createPassword));\r\n            setUser({ email: \"\", createPassword: \"\", confirmPassword: \"\" });\r\n        }\r\n    }\r\n\r\n    if (isRegistered === true) {\r\n        return <Redirect to={\"/login\"} />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapper}>\r\n                <Card className={styles.register}>\r\n                    <h1>It-incubator</h1>\r\n\r\n                    <div className={styles.formWrapper}>\r\n                        <form>\r\n                            <h2>Sign Up</h2>\r\n                            <div className={styles.formGroup}>\r\n                                <label>\r\n                                    <span>Email</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        value={user.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.email &&\r\n                                        \"Email is required\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"createPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.createPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.createPassword &&\r\n                                        \"Password is required.\"}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.shapeIcon}`}\r\n                            >\r\n                                <label>\r\n                                    <span>Confirm Password</span>\r\n                                    <br />\r\n                                    <Input\r\n                                        onChange={handleInputChange}\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        value={user.confirmPassword}\r\n                                    />\r\n                                </label>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        user.confirmPassword !==\r\n                                            user.createPassword &&\r\n                                        user.confirmPassword.length > 1 &&\r\n                                        \"Passwords do not match.\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {submitted &&\r\n                                        !user.confirmPassword &&\r\n                                        \"You should confirm your password.\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={`${styles.formGroup} ${styles.formGroupButton}`}\r\n                            >\r\n                                <Button\r\n                                    className={styles.cancelBtn}\r\n                                    purple\r\n                                    type={\"submit\"}\r\n                                    onClick={() => {\r\n                                        setUser({\r\n                                            email: \"\",\r\n                                            createPassword: \"\",\r\n                                            confirmPassword: \"\",\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className={styles.registerBtn}\r\n                                    type={\"submit\"}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            {errorMessage && (\r\n                <div className={styles.errorMessage}>{errorMessage}</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n//Types\r\nexport type InitialValuesType = {\r\n    email: string;\r\n    createPassword: string;\r\n    confirmPassword: string;\r\n};\r\n","import React, {\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  HTMLAttributes,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLSpanElement>,\r\n  HTMLSpanElement\r\n>;\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n  spanProps?: DefaultSpanPropsType;\r\n};\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = ({\r\n  autoFocus,\r\n  onBlur,\r\n  onEnter,\r\n  spanProps,\r\n  ...restProps\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { children, onDoubleClick, className, ...restSpanProps } =\r\n    spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    onEnter && onEnter();\r\n  };\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false);\r\n\r\n    onBlur && onBlur(e);\r\n  };\r\n  const onDoubleClickCallBack = (\r\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => {\r\n    setEditMode(true);\r\n\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <Input\r\n          autoFocus\r\n          onBlur={onBlurCallback}\r\n          onEnter={onEnterCallback}\r\n          {...restProps}\r\n        />\r\n      ) : (\r\n        <span\r\n          onDoubleClick={onDoubleClickCallBack}\r\n          className={spanClassName}\r\n          {...restSpanProps}\r\n        >\r\n          <FaEdit style={{ fontSize: \"1.8rem\" }} />{\" \"}\r\n          {children || restProps.value}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport s from \"./Radio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Radio: React.FC<RadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            className={s.optionInput}\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <div className={s.customRadios}>{mappedOptions}</div>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport s from \"./Select.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => {\r\n        return <option key={i}>{o}</option>;\r\n      })\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n    console.log(\"select \" + e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.select}>\r\n      <select onChange={onChangeCallback} {...restProps}>\r\n        {mappedOptions}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport styles from \"./Range.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n  onChangeRange?: (value: number) => void;\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n  value,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  // const finalRangeClassName = `${styles.slider} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.sliderTrack}></div>\r\n        <input\r\n          type={\"range\"}\r\n          className={styles.doubleRange}\r\n          onChange={onChangeCallback}\r\n          {...restProps}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button } from \"../../UI-kit/Button/Button\";\r\nimport { Checkbox } from \"../../UI-kit/Checkbox/Checkbox\";\r\nimport { EditableSpan } from \"../../UI-kit/EditableSpan/EditableSpan\";\r\nimport { Input } from \"../../UI-kit/Input/Input\";\r\nimport { Radio } from \"../../UI-kit/Radio/Radio\";\r\nimport { Select } from \"../../UI-kit/Select/Select\";\r\nimport { Range } from \"../../UI-kit/Range/Range\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { authAPI } from \"../../api/api\";\r\nimport styles from \"./TestPage.module.css\";\r\nimport { navLinksTest } from \"../Routes/Routes\";\r\n\r\nexport const TestPage = () => {\r\n    const arr: string[] = [\"apple\", \"grape\", \"cherry\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const [rangeValue, setRangeValue] = useState(50);\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>();\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(e.currentTarget.checked);\r\n    };\r\n    const changeHandler = (value: number) => {\r\n        setRangeValue(value);\r\n    };\r\n    const login = () => {\r\n        authAPI\r\n            .login(\"nya-admn@nya.nya\", \"1qazxcvBG\", true)\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const me = () => {\r\n        authAPI\r\n            .me()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const register = () => {\r\n        authAPI\r\n            .register(\"blabla@nya.nya\", \"1qazxcvBG\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const changeInfo = () => {\r\n        authAPI\r\n            .changeInfo(\"New Name\", \"https://i.mydramalist.com/67r8d_5_c.jpg\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const logout = () => {\r\n        authAPI\r\n            .logout()\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const forgotPassword = () => {\r\n        authAPI\r\n            .forgotPassword(\"blabla@nya.nya\", \"gumay88@mail.ru\", \"My message\")\r\n            .then((res) => {\r\n                setResponse(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header arrayLinks={navLinksTest} className={styles.header} testPage/>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    height: \"80vh\",\r\n                    marginTop: \"5rem\",\r\n                }}\r\n            >\r\n                <Button>button</Button>\r\n                <Checkbox checked={checked} onChange={testOnChange}/>\r\n                <EditableSpan/>\r\n                <Radio\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <Input/>\r\n                <span style={{fontSize: \"1.7rem\"}}>{rangeValue}</span>\r\n                <Range onChangeRange={changeHandler} value={rangeValue}/>\r\n                <Select\r\n                    value={value}\r\n                    options={arr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={styles.requestsWrapper}>\r\n                    <Button onClick={login}>Login Request</Button>\r\n                    <Button onClick={register}>Register</Button>\r\n                    <Button onClick={me}>Show User</Button>\r\n                    <Button onClick={changeInfo}>Change Info</Button>\r\n                    <Button onClick={logout}>Logout</Button>\r\n                    <Button onClick={forgotPassword}>Forgot Password</Button>\r\n                </div>\r\n                <div style={{width: \"800px\"}}>{response}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { CheckEmail } from \"../CheckEmail/CheckEmail\";\r\nimport { ErrorPage } from \"../ErrorPage/ErrorPage\";\r\nimport { Login } from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport { PasswordUpdate } from \"../PasswordUpdate/ParrwordUpdate\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { Register } from \"../Register/Register\";\r\nimport { TestPage } from \"../TestPage/TestPage\";\r\nimport React from 'react';\r\nimport Cards from \"../Cards/Cards\";\r\nimport { Person } from \"../Person/Person\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    TEST: \"/test\",\r\n    PASSWORD_UPDATE: \"/password-update\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    PROFILE: \"/profile\",\r\n    PROFILE_PERSON: \"/profile/person\",\r\n    PROFILE_CARDS: \"/profile/cards\",\r\n    REGISTER: \"/register\",\r\n    EMAIL_CHECK: \"/check-email\",\r\n    ERROR: \"/error-page\"\r\n}\r\n\r\nexport const navLinksProfile = [\r\n    {path: PATH.PROFILE_CARDS, text: \"Packs list\"},\r\n    {path: PATH.PROFILE_PERSON, text: \"Profile\"},\r\n];\r\n\r\nexport const navLinksTest = [\r\n    {path: PATH.LOGIN, text: \"Login\"},\r\n    {path: PATH.REGISTER, text: \"Register\"},\r\n    {path: PATH.PROFILE, text: \"Profile\"},\r\n    {path: PATH.PASSWORD_UPDATE, text: \"Update Password\"},\r\n    {path: PATH.PASSWORD_RECOVERY, text: \"Recovery Password\"},\r\n    {path: PATH.EMAIL_CHECK, text: \"Check Email\"},\r\n    {path: PATH.ERROR, text: \"ErrorPage\"},\r\n];\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route exact path={PATH.TEST} render={() => <TestPage/>}/>\r\n                <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route exact path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Redirect to={PATH.PROFILE_PERSON}/>}/>\r\n                <Route exact path={PATH.PROFILE_PERSON} render={() => <Profile {...Person}/>}/>\r\n                <Route exact path={PATH.PROFILE_CARDS} render={() => <Profile {...Cards}/>}/>\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_UPDATE}\r\n                    render={() => <PasswordUpdate/>}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.PASSWORD_RECOVERY}\r\n                    render={() => <PasswordRecovery/>}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={PATH.EMAIL_CHECK}\r\n                    render={() => <CheckEmail/>}\r\n                />\r\n\r\n                <Route exact path={PATH.PROFILE} render={() => <Redirect to={PATH.PROFILE_PERSON}/>}/>\r\n                <Route exact path={PATH.PROFILE_PERSON} render={() => <Profile {...Person}/>}/>\r\n                <Route exact path={PATH.PROFILE_CARDS} render={() => <Profile {...Cards}/>}/>\r\n\r\n                <Route\r\n                    exact\r\n                    render={() => <ErrorPage/>}\r\n                />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n\r\n","import { authAPI } from \"../api/api\";\r\nimport { setStatus } from \"./loginReducer\";\r\nimport { ThunkType } from \"./store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    isInitialized: false,\r\n};\r\n\r\nexport const appReducer = (\r\n    state = initialState,\r\n    action: ActionAppTypes\r\n): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALISATION\":\r\n            return { ...state, isInitialized: true };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setIsInitializedAC = () => {\r\n    return {\r\n        type: \"SET-INITIALISATION\",\r\n    } as const;\r\n};\r\n\r\n// Thunks\r\n\r\nexport const initializeAppThunk = (): ThunkType => (dispatch) => {\r\n    authAPI\r\n        .me()\r\n        .then((res) => {\r\n            dispatch(setStatus(true));\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsInitializedAC());\r\n        });\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes = ReturnType<typeof setIsInitializedAC>;\r\n\r\nexport type AppInitialStateType = {\r\n    isInitialized: boolean;\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Routes from \"./components/Routes/Routes\";\r\nimport { initializeAppThunk } from \"./redux/appReducer\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppThunk());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app\">\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes, appReducer } from \"./appReducer\";\r\nimport { forgotReducer } from \"./forgotReducer\";\r\nimport { ActionLoginTypes, loginReducer } from \"./loginReducer\";\r\nimport { ActionProfileTypes, profileReducer } from \"./profileReducer\";\r\nimport { ActionRegisterTypes, registerReducer } from \"./registerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof reducers>;\r\nexport type AppActionsType =\r\n    | ActionLoginTypes\r\n    | ActionProfileTypes\r\n    | ActionRegisterTypes\r\n    | ActionAppTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}